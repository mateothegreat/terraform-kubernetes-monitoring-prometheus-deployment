RAW provider 2021/04/03 23:32:06 Starting up with command line: []string{".terraform/providers/registry.terraform.io/hashicorp/kubernetes-alpha/0.2.1/darwin_amd64/terraform-provider-kubernetes-alpha_v0.2.1_x5"}
RAW provider 2021/04/03 23:32:06 Finished
RAW provider 2021/04/03 23:32:06 Starting up with command line: []string{".terraform/providers/registry.terraform.io/hashicorp/kubernetes-alpha/0.2.1/darwin_amd64/terraform-provider-kubernetes-alpha_v0.2.1_x5"}
RAW provider 2021/04/03 23:32:07 Finished
RAW provider 2021/04/03 23:32:09 Starting up with command line: []string{".terraform/providers/registry.terraform.io/hashicorp/kubernetes-alpha/0.2.1/darwin_amd64/terraform-provider-kubernetes-alpha_v0.2.1_x5"}
RAW provider 2021/04/03 23:32:09 [Configure][ClientConfig] (rest.Config) &rest.Config{Host:"https://5BE469949E293A3A880C6FE683A7079F.gr7.us-east-1.eks.amazonaws.com", APIPath:"", ContentConfig:rest.ContentConfig{AcceptContentTypes:"", ContentType:"", GroupVersion:(*schema.GroupVersion)(nil), NegotiatedSerializer:runtime.NegotiatedSerializer(nil)}, Username:"", Password:"", BearerToken:"--- REDACTED ---", BearerTokenFile:"", Impersonate:rest.ImpersonationConfig{UserName:"", Groups:[]string(nil), Extra:map[string][]string(nil)}, AuthProvider:<nil>, AuthConfigPersister:rest.AuthProviderConfigPersister(nil), ExecProvider:<nil>, TLSClientConfig:rest.sanitizedTLSClientConfig{Insecure:false, ServerName:"", CertFile:"", KeyFile:"", CAFile:"", CertData:[]uint8(nil), KeyData:[]uint8(nil), CAData:[]uint8{0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x42, 0x45, 0x47, 0x49, 0x4e, 0x20, 0x43, 0x45, 0x52, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x45, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0xa, 0x4d, 0x49, 0x49, 0x43, 0x79, 0x44, 0x43, 0x43, 0x41, 0x62, 0x43, 0x67, 0x41, 0x77, 0x49, 0x42, 0x41, 0x67, 0x49, 0x42, 0x41, 0x44, 0x41, 0x4e, 0x42, 0x67, 0x6b, 0x71, 0x68, 0x6b, 0x69, 0x47, 0x39, 0x77, 0x30, 0x42, 0x41, 0x51, 0x73, 0x46, 0x41, 0x44, 0x41, 0x56, 0x4d, 0x52, 0x4d, 0x77, 0x45, 0x51, 0x59, 0x44, 0x56, 0x51, 0x51, 0x44, 0x45, 0x77, 0x70, 0x72, 0x64, 0x57, 0x4a, 0x6c, 0xa, 0x63, 0x6d, 0x35, 0x6c, 0x64, 0x47, 0x56, 0x7a, 0x4d, 0x42, 0x34, 0x58, 0x44, 0x54, 0x49, 0x77, 0x4d, 0x54, 0x41, 0x79, 0x4d, 0x54, 0x49, 0x78, 0x4e, 0x44, 0x63, 0x77, 0x4e, 0x46, 0x6f, 0x58, 0x44, 0x54, 0x4d, 0x77, 0x4d, 0x54, 0x41, 0x78, 0x4f, 0x54, 0x49, 0x78, 0x4e, 0x44, 0x63, 0x77, 0x4e, 0x46, 0x6f, 0x77, 0x46, 0x54, 0x45, 0x54, 0x4d, 0x42, 0x45, 0x47, 0x41, 0x31, 0x55, 0x45, 0xa, 0x41, 0x78, 0x4d, 0x4b, 0x61, 0x33, 0x56, 0x69, 0x5a, 0x58, 0x4a, 0x75, 0x5a, 0x58, 0x52, 0x6c, 0x63, 0x7a, 0x43, 0x43, 0x41, 0x53, 0x49, 0x77, 0x44, 0x51, 0x59, 0x4a, 0x4b, 0x6f, 0x5a, 0x49, 0x68, 0x76, 0x63, 0x4e, 0x41, 0x51, 0x45, 0x42, 0x42, 0x51, 0x41, 0x44, 0x67, 0x67, 0x45, 0x50, 0x41, 0x44, 0x43, 0x43, 0x41, 0x51, 0x6f, 0x43, 0x67, 0x67, 0x45, 0x42, 0x41, 0x4c, 0x42, 0x62, 0xa, 0x50, 0x46, 0x2b, 0x39, 0x30, 0x52, 0x6f, 0x67, 0x48, 0x58, 0x41, 0x79, 0x46, 0x56, 0x74, 0x41, 0x2b, 0x7a, 0x43, 0x46, 0x6d, 0x33, 0x56, 0x53, 0x31, 0x61, 0x59, 0x59, 0x79, 0x4c, 0x7a, 0x2f, 0x32, 0x51, 0x48, 0x76, 0x37, 0x4a, 0x65, 0x45, 0x48, 0x71, 0x49, 0x77, 0x66, 0x63, 0x75, 0x7a, 0x56, 0x71, 0x58, 0x38, 0x66, 0x4b, 0x70, 0x33, 0x68, 0x4c, 0x79, 0x79, 0x62, 0x6b, 0x2f, 0x64, 0xa, 0x55, 0x47, 0x49, 0x45, 0x41, 0x30, 0x75, 0x54, 0x6a, 0x4c, 0x67, 0x67, 0x71, 0x66, 0x66, 0x6f, 0x65, 0x6f, 0x31, 0x38, 0x7a, 0x35, 0x48, 0x4a, 0x6e, 0x73, 0x41, 0x6f, 0x6b, 0x43, 0x38, 0x64, 0x7a, 0x70, 0x5a, 0x43, 0x6b, 0x67, 0x31, 0x73, 0x78, 0x45, 0x79, 0x62, 0x2f, 0x2b, 0x39, 0x6d, 0x31, 0x69, 0x49, 0x67, 0x56, 0x33, 0x59, 0x39, 0x74, 0x48, 0x44, 0x45, 0x59, 0x4a, 0x6c, 0x37, 0xa, 0x56, 0x77, 0x51, 0x68, 0x70, 0x38, 0x48, 0x6e, 0x33, 0x46, 0x49, 0x2f, 0x4a, 0x63, 0x77, 0x44, 0x49, 0x6b, 0x55, 0x36, 0x45, 0x6a, 0x65, 0x46, 0x30, 0x71, 0x4c, 0x4b, 0x42, 0x75, 0x54, 0x31, 0x6e, 0x66, 0x45, 0x74, 0x6f, 0x68, 0x54, 0x4e, 0x37, 0x78, 0x70, 0x4e, 0x43, 0x76, 0x44, 0x61, 0x36, 0x44, 0x53, 0x32, 0x4c, 0x54, 0x57, 0x39, 0x6f, 0x6e, 0x74, 0x6d, 0x4b, 0x79, 0x45, 0x47, 0xa, 0x78, 0x6c, 0x73, 0x78, 0x74, 0x6b, 0x64, 0x47, 0x45, 0x37, 0x79, 0x55, 0x55, 0x67, 0x77, 0x52, 0x53, 0x72, 0x79, 0x6a, 0x41, 0x65, 0x76, 0x41, 0x79, 0x5a, 0x64, 0x37, 0x71, 0x45, 0x72, 0x67, 0x74, 0x41, 0x56, 0x6c, 0x35, 0x70, 0x44, 0x46, 0x48, 0x30, 0x74, 0x42, 0x48, 0x53, 0x74, 0x67, 0x6b, 0x41, 0x51, 0x59, 0x57, 0x48, 0x77, 0x78, 0x62, 0x62, 0x79, 0x70, 0x59, 0x37, 0x33, 0x4c, 0xa, 0x5a, 0x43, 0x51, 0x73, 0x2b, 0x4c, 0x35, 0x44, 0x6d, 0x67, 0x2f, 0x43, 0x6e, 0x57, 0x31, 0x75, 0x62, 0x47, 0x46, 0x32, 0x59, 0x75, 0x47, 0x33, 0x79, 0x46, 0x59, 0x4b, 0x31, 0x6c, 0x32, 0x4e, 0x46, 0x78, 0x2f, 0x74, 0x67, 0x48, 0x71, 0x4e, 0x78, 0x56, 0x48, 0x6a, 0x31, 0x53, 0x42, 0x5a, 0x32, 0x41, 0x54, 0x76, 0x61, 0x4b, 0x47, 0x6f, 0x6c, 0x56, 0x35, 0x53, 0x69, 0x57, 0x33, 0x49, 0xa, 0x68, 0x45, 0x46, 0x46, 0x2b, 0x77, 0x4b, 0x50, 0x73, 0x63, 0x46, 0x59, 0x4f, 0x49, 0x76, 0x53, 0x4d, 0x44, 0x38, 0x43, 0x41, 0x77, 0x45, 0x41, 0x41, 0x61, 0x4d, 0x6a, 0x4d, 0x43, 0x45, 0x77, 0x44, 0x67, 0x59, 0x44, 0x56, 0x52, 0x30, 0x50, 0x41, 0x51, 0x48, 0x2f, 0x42, 0x41, 0x51, 0x44, 0x41, 0x67, 0x4b, 0x6b, 0x4d, 0x41, 0x38, 0x47, 0x41, 0x31, 0x55, 0x64, 0x45, 0x77, 0x45, 0x42, 0xa, 0x2f, 0x77, 0x51, 0x46, 0x4d, 0x41, 0x4d, 0x42, 0x41, 0x66, 0x38, 0x77, 0x44, 0x51, 0x59, 0x4a, 0x4b, 0x6f, 0x5a, 0x49, 0x68, 0x76, 0x63, 0x4e, 0x41, 0x51, 0x45, 0x4c, 0x42, 0x51, 0x41, 0x44, 0x67, 0x67, 0x45, 0x42, 0x41, 0x46, 0x2b, 0x59, 0x44, 0x46, 0x31, 0x4e, 0x4b, 0x65, 0x6f, 0x41, 0x38, 0x49, 0x72, 0x65, 0x4f, 0x78, 0x4d, 0x2f, 0x4f, 0x45, 0x59, 0x70, 0x54, 0x44, 0x6a, 0x76, 0xa, 0x50, 0x64, 0x55, 0x69, 0x31, 0x61, 0x37, 0x79, 0x75, 0x74, 0x2b, 0x30, 0x39, 0x37, 0x70, 0x36, 0x6f, 0x2f, 0x32, 0x41, 0x53, 0x35, 0x56, 0x52, 0x6a, 0x70, 0x32, 0x57, 0x55, 0x7a, 0x72, 0x4b, 0x79, 0x73, 0x57, 0x75, 0x65, 0x74, 0x55, 0x45, 0x2b, 0x72, 0x6e, 0x41, 0x70, 0x33, 0x39, 0x37, 0x2f, 0x6a, 0x78, 0x75, 0x73, 0x54, 0x78, 0x2f, 0x50, 0x76, 0x58, 0x57, 0x44, 0x34, 0x75, 0x61, 0xa, 0x51, 0x32, 0x7a, 0x49, 0x38, 0x44, 0x59, 0x62, 0x6b, 0x64, 0x75, 0x63, 0x4f, 0x47, 0x67, 0x4a, 0x31, 0x78, 0x61, 0x4e, 0x70, 0x6b, 0x75, 0x62, 0x48, 0x33, 0x64, 0x61, 0x48, 0x59, 0x5a, 0x2b, 0x48, 0x38, 0x71, 0x42, 0x70, 0x2f, 0x74, 0x50, 0x41, 0x42, 0x57, 0x73, 0x32, 0x35, 0x66, 0x78, 0x78, 0x31, 0x53, 0x69, 0x75, 0x38, 0x4e, 0x38, 0x4b, 0x59, 0x4a, 0x2b, 0x32, 0x49, 0x68, 0x75, 0xa, 0x61, 0x64, 0x42, 0x71, 0x61, 0x73, 0x56, 0x4a, 0x6c, 0x79, 0x55, 0x4d, 0x79, 0x50, 0x49, 0x7a, 0x4b, 0x46, 0x36, 0x6e, 0x4c, 0x54, 0x57, 0x66, 0x59, 0x5a, 0x4f, 0x31, 0x76, 0x30, 0x32, 0x36, 0x4b, 0x36, 0x6f, 0x31, 0x63, 0x39, 0x78, 0x63, 0x74, 0x69, 0x77, 0x54, 0x6a, 0x54, 0x59, 0x43, 0x34, 0x7a, 0x38, 0x65, 0x4b, 0x69, 0x41, 0x4c, 0x49, 0x36, 0x33, 0x33, 0x34, 0x74, 0x4e, 0x51, 0xa, 0x33, 0x32, 0x5a, 0x77, 0x4f, 0x75, 0x73, 0x58, 0x6e, 0x4a, 0x33, 0x6b, 0x34, 0x75, 0x42, 0x57, 0x70, 0x79, 0x31, 0x69, 0x39, 0x6f, 0x4e, 0x6b, 0x75, 0x75, 0x48, 0x45, 0x64, 0x69, 0x48, 0x37, 0x36, 0x30, 0x35, 0x4a, 0x31, 0x66, 0x77, 0x57, 0x53, 0x30, 0x63, 0x65, 0x35, 0x67, 0x49, 0x50, 0x35, 0x6a, 0x6e, 0x4e, 0x73, 0x4d, 0x64, 0x61, 0x44, 0x49, 0x2f, 0x39, 0x54, 0x4a, 0x4e, 0x6e, 0xa, 0x70, 0x67, 0x2b, 0x41, 0x58, 0x55, 0x4a, 0x78, 0x46, 0x30, 0x4f, 0x77, 0x50, 0x42, 0x63, 0x45, 0x37, 0x4a, 0x41, 0x43, 0x64, 0x52, 0x6d, 0x58, 0x73, 0x2b, 0x33, 0x78, 0x6c, 0x54, 0x59, 0x4a, 0x76, 0x70, 0x53, 0x75, 0x32, 0x4b, 0x65, 0x6c, 0x4c, 0x55, 0x6a, 0x52, 0x34, 0x5a, 0x4c, 0x72, 0x5a, 0x34, 0x78, 0x39, 0x4c, 0x45, 0x36, 0x54, 0x65, 0x77, 0x34, 0x3d, 0xa, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x45, 0x4e, 0x44, 0x20, 0x43, 0x45, 0x52, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x45, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0xa}, NextProtos:[]string(nil)}, UserAgent:"", DisableCompression:false, Transport:http.RoundTripper(nil), WrapTransport:(transport.WrapperFunc)(nil), QPS:0, Burst:0, RateLimiter:flowcontrol.RateLimiter(nil), Timeout:0, Dial:(func(context.Context, string, string) (net.Conn, error))(nil)}

RAW provider 2021/04/03 23:32:11 Finished
RAW provider 2021/04/03 23:32:12 Starting up with command line: []string{".terraform/providers/registry.terraform.io/hashicorp/kubernetes-alpha/0.2.1/darwin_amd64/terraform-provider-kubernetes-alpha_v0.2.1_x5"}
RAW provider 2021/04/03 23:32:12 [Configure][ClientConfig] (rest.Config) &rest.Config{Host:"https://5BE469949E293A3A880C6FE683A7079F.gr7.us-east-1.eks.amazonaws.com", APIPath:"", ContentConfig:rest.ContentConfig{AcceptContentTypes:"", ContentType:"", GroupVersion:(*schema.GroupVersion)(nil), NegotiatedSerializer:runtime.NegotiatedSerializer(nil)}, Username:"", Password:"", BearerToken:"--- REDACTED ---", BearerTokenFile:"", Impersonate:rest.ImpersonationConfig{UserName:"", Groups:[]string(nil), Extra:map[string][]string(nil)}, AuthProvider:<nil>, AuthConfigPersister:rest.AuthProviderConfigPersister(nil), ExecProvider:<nil>, TLSClientConfig:rest.sanitizedTLSClientConfig{Insecure:false, ServerName:"", CertFile:"", KeyFile:"", CAFile:"", CertData:[]uint8(nil), KeyData:[]uint8(nil), CAData:[]uint8{0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x42, 0x45, 0x47, 0x49, 0x4e, 0x20, 0x43, 0x45, 0x52, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x45, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0xa, 0x4d, 0x49, 0x49, 0x43, 0x79, 0x44, 0x43, 0x43, 0x41, 0x62, 0x43, 0x67, 0x41, 0x77, 0x49, 0x42, 0x41, 0x67, 0x49, 0x42, 0x41, 0x44, 0x41, 0x4e, 0x42, 0x67, 0x6b, 0x71, 0x68, 0x6b, 0x69, 0x47, 0x39, 0x77, 0x30, 0x42, 0x41, 0x51, 0x73, 0x46, 0x41, 0x44, 0x41, 0x56, 0x4d, 0x52, 0x4d, 0x77, 0x45, 0x51, 0x59, 0x44, 0x56, 0x51, 0x51, 0x44, 0x45, 0x77, 0x70, 0x72, 0x64, 0x57, 0x4a, 0x6c, 0xa, 0x63, 0x6d, 0x35, 0x6c, 0x64, 0x47, 0x56, 0x7a, 0x4d, 0x42, 0x34, 0x58, 0x44, 0x54, 0x49, 0x77, 0x4d, 0x54, 0x41, 0x79, 0x4d, 0x54, 0x49, 0x78, 0x4e, 0x44, 0x63, 0x77, 0x4e, 0x46, 0x6f, 0x58, 0x44, 0x54, 0x4d, 0x77, 0x4d, 0x54, 0x41, 0x78, 0x4f, 0x54, 0x49, 0x78, 0x4e, 0x44, 0x63, 0x77, 0x4e, 0x46, 0x6f, 0x77, 0x46, 0x54, 0x45, 0x54, 0x4d, 0x42, 0x45, 0x47, 0x41, 0x31, 0x55, 0x45, 0xa, 0x41, 0x78, 0x4d, 0x4b, 0x61, 0x33, 0x56, 0x69, 0x5a, 0x58, 0x4a, 0x75, 0x5a, 0x58, 0x52, 0x6c, 0x63, 0x7a, 0x43, 0x43, 0x41, 0x53, 0x49, 0x77, 0x44, 0x51, 0x59, 0x4a, 0x4b, 0x6f, 0x5a, 0x49, 0x68, 0x76, 0x63, 0x4e, 0x41, 0x51, 0x45, 0x42, 0x42, 0x51, 0x41, 0x44, 0x67, 0x67, 0x45, 0x50, 0x41, 0x44, 0x43, 0x43, 0x41, 0x51, 0x6f, 0x43, 0x67, 0x67, 0x45, 0x42, 0x41, 0x4c, 0x42, 0x62, 0xa, 0x50, 0x46, 0x2b, 0x39, 0x30, 0x52, 0x6f, 0x67, 0x48, 0x58, 0x41, 0x79, 0x46, 0x56, 0x74, 0x41, 0x2b, 0x7a, 0x43, 0x46, 0x6d, 0x33, 0x56, 0x53, 0x31, 0x61, 0x59, 0x59, 0x79, 0x4c, 0x7a, 0x2f, 0x32, 0x51, 0x48, 0x76, 0x37, 0x4a, 0x65, 0x45, 0x48, 0x71, 0x49, 0x77, 0x66, 0x63, 0x75, 0x7a, 0x56, 0x71, 0x58, 0x38, 0x66, 0x4b, 0x70, 0x33, 0x68, 0x4c, 0x79, 0x79, 0x62, 0x6b, 0x2f, 0x64, 0xa, 0x55, 0x47, 0x49, 0x45, 0x41, 0x30, 0x75, 0x54, 0x6a, 0x4c, 0x67, 0x67, 0x71, 0x66, 0x66, 0x6f, 0x65, 0x6f, 0x31, 0x38, 0x7a, 0x35, 0x48, 0x4a, 0x6e, 0x73, 0x41, 0x6f, 0x6b, 0x43, 0x38, 0x64, 0x7a, 0x70, 0x5a, 0x43, 0x6b, 0x67, 0x31, 0x73, 0x78, 0x45, 0x79, 0x62, 0x2f, 0x2b, 0x39, 0x6d, 0x31, 0x69, 0x49, 0x67, 0x56, 0x33, 0x59, 0x39, 0x74, 0x48, 0x44, 0x45, 0x59, 0x4a, 0x6c, 0x37, 0xa, 0x56, 0x77, 0x51, 0x68, 0x70, 0x38, 0x48, 0x6e, 0x33, 0x46, 0x49, 0x2f, 0x4a, 0x63, 0x77, 0x44, 0x49, 0x6b, 0x55, 0x36, 0x45, 0x6a, 0x65, 0x46, 0x30, 0x71, 0x4c, 0x4b, 0x42, 0x75, 0x54, 0x31, 0x6e, 0x66, 0x45, 0x74, 0x6f, 0x68, 0x54, 0x4e, 0x37, 0x78, 0x70, 0x4e, 0x43, 0x76, 0x44, 0x61, 0x36, 0x44, 0x53, 0x32, 0x4c, 0x54, 0x57, 0x39, 0x6f, 0x6e, 0x74, 0x6d, 0x4b, 0x79, 0x45, 0x47, 0xa, 0x78, 0x6c, 0x73, 0x78, 0x74, 0x6b, 0x64, 0x47, 0x45, 0x37, 0x79, 0x55, 0x55, 0x67, 0x77, 0x52, 0x53, 0x72, 0x79, 0x6a, 0x41, 0x65, 0x76, 0x41, 0x79, 0x5a, 0x64, 0x37, 0x71, 0x45, 0x72, 0x67, 0x74, 0x41, 0x56, 0x6c, 0x35, 0x70, 0x44, 0x46, 0x48, 0x30, 0x74, 0x42, 0x48, 0x53, 0x74, 0x67, 0x6b, 0x41, 0x51, 0x59, 0x57, 0x48, 0x77, 0x78, 0x62, 0x62, 0x79, 0x70, 0x59, 0x37, 0x33, 0x4c, 0xa, 0x5a, 0x43, 0x51, 0x73, 0x2b, 0x4c, 0x35, 0x44, 0x6d, 0x67, 0x2f, 0x43, 0x6e, 0x57, 0x31, 0x75, 0x62, 0x47, 0x46, 0x32, 0x59, 0x75, 0x47, 0x33, 0x79, 0x46, 0x59, 0x4b, 0x31, 0x6c, 0x32, 0x4e, 0x46, 0x78, 0x2f, 0x74, 0x67, 0x48, 0x71, 0x4e, 0x78, 0x56, 0x48, 0x6a, 0x31, 0x53, 0x42, 0x5a, 0x32, 0x41, 0x54, 0x76, 0x61, 0x4b, 0x47, 0x6f, 0x6c, 0x56, 0x35, 0x53, 0x69, 0x57, 0x33, 0x49, 0xa, 0x68, 0x45, 0x46, 0x46, 0x2b, 0x77, 0x4b, 0x50, 0x73, 0x63, 0x46, 0x59, 0x4f, 0x49, 0x76, 0x53, 0x4d, 0x44, 0x38, 0x43, 0x41, 0x77, 0x45, 0x41, 0x41, 0x61, 0x4d, 0x6a, 0x4d, 0x43, 0x45, 0x77, 0x44, 0x67, 0x59, 0x44, 0x56, 0x52, 0x30, 0x50, 0x41, 0x51, 0x48, 0x2f, 0x42, 0x41, 0x51, 0x44, 0x41, 0x67, 0x4b, 0x6b, 0x4d, 0x41, 0x38, 0x47, 0x41, 0x31, 0x55, 0x64, 0x45, 0x77, 0x45, 0x42, 0xa, 0x2f, 0x77, 0x51, 0x46, 0x4d, 0x41, 0x4d, 0x42, 0x41, 0x66, 0x38, 0x77, 0x44, 0x51, 0x59, 0x4a, 0x4b, 0x6f, 0x5a, 0x49, 0x68, 0x76, 0x63, 0x4e, 0x41, 0x51, 0x45, 0x4c, 0x42, 0x51, 0x41, 0x44, 0x67, 0x67, 0x45, 0x42, 0x41, 0x46, 0x2b, 0x59, 0x44, 0x46, 0x31, 0x4e, 0x4b, 0x65, 0x6f, 0x41, 0x38, 0x49, 0x72, 0x65, 0x4f, 0x78, 0x4d, 0x2f, 0x4f, 0x45, 0x59, 0x70, 0x54, 0x44, 0x6a, 0x76, 0xa, 0x50, 0x64, 0x55, 0x69, 0x31, 0x61, 0x37, 0x79, 0x75, 0x74, 0x2b, 0x30, 0x39, 0x37, 0x70, 0x36, 0x6f, 0x2f, 0x32, 0x41, 0x53, 0x35, 0x56, 0x52, 0x6a, 0x70, 0x32, 0x57, 0x55, 0x7a, 0x72, 0x4b, 0x79, 0x73, 0x57, 0x75, 0x65, 0x74, 0x55, 0x45, 0x2b, 0x72, 0x6e, 0x41, 0x70, 0x33, 0x39, 0x37, 0x2f, 0x6a, 0x78, 0x75, 0x73, 0x54, 0x78, 0x2f, 0x50, 0x76, 0x58, 0x57, 0x44, 0x34, 0x75, 0x61, 0xa, 0x51, 0x32, 0x7a, 0x49, 0x38, 0x44, 0x59, 0x62, 0x6b, 0x64, 0x75, 0x63, 0x4f, 0x47, 0x67, 0x4a, 0x31, 0x78, 0x61, 0x4e, 0x70, 0x6b, 0x75, 0x62, 0x48, 0x33, 0x64, 0x61, 0x48, 0x59, 0x5a, 0x2b, 0x48, 0x38, 0x71, 0x42, 0x70, 0x2f, 0x74, 0x50, 0x41, 0x42, 0x57, 0x73, 0x32, 0x35, 0x66, 0x78, 0x78, 0x31, 0x53, 0x69, 0x75, 0x38, 0x4e, 0x38, 0x4b, 0x59, 0x4a, 0x2b, 0x32, 0x49, 0x68, 0x75, 0xa, 0x61, 0x64, 0x42, 0x71, 0x61, 0x73, 0x56, 0x4a, 0x6c, 0x79, 0x55, 0x4d, 0x79, 0x50, 0x49, 0x7a, 0x4b, 0x46, 0x36, 0x6e, 0x4c, 0x54, 0x57, 0x66, 0x59, 0x5a, 0x4f, 0x31, 0x76, 0x30, 0x32, 0x36, 0x4b, 0x36, 0x6f, 0x31, 0x63, 0x39, 0x78, 0x63, 0x74, 0x69, 0x77, 0x54, 0x6a, 0x54, 0x59, 0x43, 0x34, 0x7a, 0x38, 0x65, 0x4b, 0x69, 0x41, 0x4c, 0x49, 0x36, 0x33, 0x33, 0x34, 0x74, 0x4e, 0x51, 0xa, 0x33, 0x32, 0x5a, 0x77, 0x4f, 0x75, 0x73, 0x58, 0x6e, 0x4a, 0x33, 0x6b, 0x34, 0x75, 0x42, 0x57, 0x70, 0x79, 0x31, 0x69, 0x39, 0x6f, 0x4e, 0x6b, 0x75, 0x75, 0x48, 0x45, 0x64, 0x69, 0x48, 0x37, 0x36, 0x30, 0x35, 0x4a, 0x31, 0x66, 0x77, 0x57, 0x53, 0x30, 0x63, 0x65, 0x35, 0x67, 0x49, 0x50, 0x35, 0x6a, 0x6e, 0x4e, 0x73, 0x4d, 0x64, 0x61, 0x44, 0x49, 0x2f, 0x39, 0x54, 0x4a, 0x4e, 0x6e, 0xa, 0x70, 0x67, 0x2b, 0x41, 0x58, 0x55, 0x4a, 0x78, 0x46, 0x30, 0x4f, 0x77, 0x50, 0x42, 0x63, 0x45, 0x37, 0x4a, 0x41, 0x43, 0x64, 0x52, 0x6d, 0x58, 0x73, 0x2b, 0x33, 0x78, 0x6c, 0x54, 0x59, 0x4a, 0x76, 0x70, 0x53, 0x75, 0x32, 0x4b, 0x65, 0x6c, 0x4c, 0x55, 0x6a, 0x52, 0x34, 0x5a, 0x4c, 0x72, 0x5a, 0x34, 0x78, 0x39, 0x4c, 0x45, 0x36, 0x54, 0x65, 0x77, 0x34, 0x3d, 0xa, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x45, 0x4e, 0x44, 0x20, 0x43, 0x45, 0x52, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x45, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0xa}, NextProtos:[]string(nil)}, UserAgent:"", DisableCompression:false, Transport:http.RoundTripper(nil), WrapTransport:(transport.WrapperFunc)(nil), QPS:0, Burst:0, RateLimiter:flowcontrol.RateLimiter(nil), Timeout:0, Dial:(func(context.Context, string, string) (net.Conn, error))(nil)}

RAW provider 2021/04/03 23:32:14 [ApplyResourceChange][Request][PlannedState]
(cty.Value) {
 ty: (cty.Type) {
  typeImpl: (cty.typeObject) {
   typeImplSigil: (cty.typeImplSigil) {
   },
   AttrTypes: (map[string]cty.Type) (len=3) {
    (string) (len=8) "manifest": (cty.Type) {
     typeImpl: (cty.typeObject) {
      typeImplSigil: (cty.typeImplSigil) {
      },
      AttrTypes: (map[string]cty.Type) (len=4) {
       (string) (len=8) "metadata": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) (len=2) {
          (string) (len=9) "namespace": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=4) "name": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          }
         }
        }
       },
       (string) (len=4) "spec": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) (len=21) {
          (string) (len=8) "alerting": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=1) {
             (string) (len=13) "alertmanagers": (cty.Type) {
              typeImpl: (cty.typeTuple) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               ElemTypes: ([]cty.Type) (len=1 cap=1) {
                (cty.Type) {
                 typeImpl: (cty.typeObject) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  AttrTypes: (map[string]cty.Type) (len=3) {
                   (string) (len=4) "name": (cty.Type) {
                    typeImpl: (cty.primitiveType) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     Kind: (cty.primitiveTypeKind) 83
                    }
                   },
                   (string) (len=9) "namespace": (cty.Type) {
                    typeImpl: (cty.primitiveType) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     Kind: (cty.primitiveTypeKind) 83
                    }
                   },
                   (string) (len=4) "port": (cty.Type) {
                    typeImpl: (cty.primitiveType) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     Kind: (cty.primitiveTypeKind) 83
                    }
                   }
                  }
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=15) "securityContext": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=3) {
             (string) (len=9) "runAsUser": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 78
              }
             },
             (string) (len=7) "fsGroup": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 78
              }
             },
             (string) (len=12) "runAsNonRoot": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 66
              }
             }
            }
           }
          },
          (string) (len=7) "storage": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=1) {
             (string) (len=19) "volumeClaimTemplate": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=1) {
                (string) (len=4) "spec": (cty.Type) {
                 typeImpl: (cty.typeObject) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  AttrTypes: (map[string]cty.Type) (len=2) {
                   (string) (len=9) "resources": (cty.Type) {
                    typeImpl: (cty.typeObject) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     AttrTypes: (map[string]cty.Type) (len=1) {
                      (string) (len=8) "requests": (cty.Type) {
                       typeImpl: (cty.typeObject) {
                        typeImplSigil: (cty.typeImplSigil) {
                        },
                        AttrTypes: (map[string]cty.Type) (len=1) {
                         (string) (len=7) "storage": (cty.Type) {
                          typeImpl: (cty.primitiveType) {
                           typeImplSigil: (cty.typeImplSigil) {
                           },
                           Kind: (cty.primitiveTypeKind) 83
                          }
                         }
                        }
                       }
                      }
                     }
                    }
                   },
                   (string) (len=16) "storageClassName": (cty.Type) {
                    typeImpl: (cty.primitiveType) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     Kind: (cty.primitiveTypeKind) 83
                    }
                   }
                  }
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=7) "version": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=9) "resources": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=2) {
             (string) (len=8) "requests": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=6) "memory": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=3) "cpu": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             },
             (string) (len=6) "limits": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=3) "cpu": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=6) "memory": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=9) "namespace": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=18) "serviceAccountName": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=5) "image": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=23) "additionalScrapeConfigs": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=2) {
             (string) (len=4) "name": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             },
             (string) (len=3) "key": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             }
            }
           }
          },
          (string) (len=4) "name": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=22) "probeNamespaceSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=31) "serviceMonitorNamespaceSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=8) "replicas": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 78
           }
          },
          (string) (len=27) "podMonitorNamespaceSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=12) "ruleSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=1) {
             (string) (len=11) "matchLabels": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=4) "role": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=10) "prometheus": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=18) "podMonitorSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=14) "externalLabels": (cty.Type) {
           typeImpl: (cty.typeMap) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            ElementTypeT: (cty.Type) {
             typeImpl: (cty.primitiveType) {
              typeImplSigil: (cty.typeImplSigil) {
              },
              Kind: (cty.primitiveTypeKind) 83
             }
            }
           }
          },
          (string) (len=6) "thanos": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=3) {
             (string) (len=9) "baseImage": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             },
             (string) (len=19) "objectStorageConfig": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=3) "key": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=4) "name": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             },
             (string) (len=7) "version": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             }
            }
           }
          },
          (string) (len=13) "probeSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=22) "serviceMonitorSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=12) "nodeSelector": (cty.Type) {
           typeImpl: (cty.typeMap) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            ElementTypeT: (cty.Type) {
             typeImpl: (cty.primitiveType) {
              typeImplSigil: (cty.typeImplSigil) {
              },
              Kind: (cty.primitiveTypeKind) 83
             }
            }
           }
          }
         }
        }
       },
       (string) (len=10) "apiVersion": (cty.Type) {
        typeImpl: (cty.primitiveType) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         Kind: (cty.primitiveTypeKind) 83
        }
       },
       (string) (len=4) "kind": (cty.Type) {
        typeImpl: (cty.primitiveType) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         Kind: (cty.primitiveTypeKind) 83
        }
       }
      }
     }
    },
    (string) (len=6) "object": (cty.Type) {
     typeImpl: (cty.typeObject) {
      typeImplSigil: (cty.typeImplSigil) {
      },
      AttrTypes: (map[string]cty.Type) (len=4) {
       (string) (len=4) "spec": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) (len=19) {
          (string) (len=6) "thanos": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=3) {
             (string) (len=9) "baseImage": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             },
             (string) (len=19) "objectStorageConfig": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=3) "key": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=4) "name": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             },
             (string) (len=7) "version": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             }
            }
           }
          },
          (string) (len=7) "storage": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=1) {
             (string) (len=19) "volumeClaimTemplate": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=1) {
                (string) (len=4) "spec": (cty.Type) {
                 typeImpl: (cty.typeObject) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  AttrTypes: (map[string]cty.Type) (len=2) {
                   (string) (len=9) "resources": (cty.Type) {
                    typeImpl: (cty.typeObject) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     AttrTypes: (map[string]cty.Type) (len=1) {
                      (string) (len=8) "requests": (cty.Type) {
                       typeImpl: (cty.typeObject) {
                        typeImplSigil: (cty.typeImplSigil) {
                        },
                        AttrTypes: (map[string]cty.Type) (len=1) {
                         (string) (len=7) "storage": (cty.Type) {
                          typeImpl: (cty.primitiveType) {
                           typeImplSigil: (cty.typeImplSigil) {
                           },
                           Kind: (cty.primitiveTypeKind) 83
                          }
                         }
                        }
                       }
                      }
                     }
                    }
                   },
                   (string) (len=16) "storageClassName": (cty.Type) {
                    typeImpl: (cty.primitiveType) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     Kind: (cty.primitiveTypeKind) 83
                    }
                   }
                  }
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=22) "serviceMonitorSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=22) "probeNamespaceSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=27) "podMonitorNamespaceSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=12) "ruleSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=1) {
             (string) (len=11) "matchLabels": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=4) "role": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=10) "prometheus": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=18) "podMonitorSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=15) "securityContext": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=3) {
             (string) (len=7) "fsGroup": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 78
              }
             },
             (string) (len=12) "runAsNonRoot": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 66
              }
             },
             (string) (len=9) "runAsUser": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 78
              }
             }
            }
           }
          },
          (string) (len=12) "nodeSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=1) {
             (string) (len=4) "role": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             }
            }
           }
          },
          (string) (len=7) "version": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=13) "probeSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=18) "serviceAccountName": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=9) "resources": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=2) {
             (string) (len=8) "requests": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=6) "memory": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=3) "cpu": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             },
             (string) (len=6) "limits": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=3) "cpu": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=6) "memory": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=5) "image": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=31) "serviceMonitorNamespaceSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=23) "additionalScrapeConfigs": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=2) {
             (string) (len=3) "key": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             },
             (string) (len=4) "name": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             }
            }
           }
          },
          (string) (len=8) "alerting": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=1) {
             (string) (len=13) "alertmanagers": (cty.Type) {
              typeImpl: (cty.typeTuple) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               ElemTypes: ([]cty.Type) (len=1 cap=1) {
                (cty.Type) {
                 typeImpl: (cty.typeObject) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  AttrTypes: (map[string]cty.Type) (len=3) {
                   (string) (len=4) "name": (cty.Type) {
                    typeImpl: (cty.primitiveType) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     Kind: (cty.primitiveTypeKind) 83
                    }
                   },
                   (string) (len=9) "namespace": (cty.Type) {
                    typeImpl: (cty.primitiveType) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     Kind: (cty.primitiveTypeKind) 83
                    }
                   },
                   (string) (len=4) "port": (cty.Type) {
                    typeImpl: (cty.primitiveType) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     Kind: (cty.primitiveTypeKind) 83
                    }
                   }
                  }
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=14) "externalLabels": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=2) {
             (string) (len=7) "cluster": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             },
             (string) (len=7) "product": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             }
            }
           }
          },
          (string) (len=8) "replicas": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 78
           }
          }
         }
        }
       },
       (string) (len=10) "apiVersion": (cty.Type) {
        typeImpl: (cty.primitiveType) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         Kind: (cty.primitiveTypeKind) 83
        }
       },
       (string) (len=4) "kind": (cty.Type) {
        typeImpl: (cty.primitiveType) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         Kind: (cty.primitiveTypeKind) 83
        }
       },
       (string) (len=8) "metadata": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) (len=2) {
          (string) (len=4) "name": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=9) "namespace": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          }
         }
        }
       }
      }
     }
    },
    (string) (len=8) "wait_for": (cty.Type) {
     typeImpl: (cty.typeObject) {
      typeImplSigil: (cty.typeImplSigil) {
      },
      AttrTypes: (map[string]cty.Type) (len=1) {
       (string) (len=6) "fields": (cty.Type) {
        typeImpl: (cty.typeMap) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         ElementTypeT: (cty.Type) {
          typeImpl: (cty.primitiveType) {
           typeImplSigil: (cty.typeImplSigil) {
           },
           Kind: (cty.primitiveTypeKind) 83
          }
         }
        }
       }
      }
     }
    }
   }
  }
 },
 v: (map[string]interface {}) (len=3) {
  (string) (len=8) "manifest": (map[string]interface {}) (len=4) {
   (string) (len=4) "kind": (string) (len=10) "Prometheus",
   (string) (len=8) "metadata": (map[string]interface {}) (len=2) {
    (string) (len=4) "name": (string) (len=6) "test-1",
    (string) (len=9) "namespace": (string) (len=15) "test-operator-1"
   },
   (string) (len=4) "spec": (map[string]interface {}) (len=21) {
    (string) (len=31) "serviceMonitorNamespaceSelector": (map[string]interface {}) {
    },
    (string) (len=27) "podMonitorNamespaceSelector": (map[string]interface {}) {
    },
    (string) (len=12) "nodeSelector": (map[string]interface {}) (len=1) {
     (string) (len=4) "role": (string) (len=8) "services"
    },
    (string) (len=9) "resources": (map[string]interface {}) (len=2) {
     (string) (len=8) "requests": (map[string]interface {}) (len=2) {
      (string) (len=3) "cpu": (string) (len=4) "200m",
      (string) (len=6) "memory": (string) (len=5) "200Mi"
     },
     (string) (len=6) "limits": (map[string]interface {}) (len=2) {
      (string) (len=3) "cpu": (string) (len=4) "250m",
      (string) (len=6) "memory": (string) (len=5) "250Mi"
     }
    },
    (string) (len=9) "namespace": (string) (len=15) "test-operator-1",
    (string) (len=6) "thanos": (map[string]interface {}) (len=3) {
     (string) (len=9) "baseImage": (string) (len=21) "quay.io/thanos/thanos",
     (string) (len=19) "objectStorageConfig": (map[string]interface {}) (len=2) {
      (string) (len=3) "key": (string) (len=11) "thanos.yaml",
      (string) (len=4) "name": (string) (len=22) "thanos-objstore-config"
     },
     (string) (len=7) "version": (string) (len=7) "v0.16.0"
    },
    (string) (len=18) "serviceAccountName": (string) (len=14) "prometheus-k8s",
    (string) (len=13) "probeSelector": (map[string]interface {}) {
    },
    (string) (len=8) "replicas": (*big.Float)(0xc000754ba0)(1),
    (string) (len=22) "probeNamespaceSelector": (map[string]interface {}) {
    },
    (string) (len=12) "ruleSelector": (map[string]interface {}) (len=1) {
     (string) (len=11) "matchLabels": (map[string]interface {}) (len=2) {
      (string) (len=10) "prometheus": (string) (len=3) "k8s",
      (string) (len=4) "role": (string) (len=11) "alert-rules"
     }
    },
    (string) (len=18) "podMonitorSelector": (map[string]interface {}) {
    },
    (string) (len=8) "alerting": (map[string]interface {}) (len=1) {
     (string) (len=13) "alertmanagers": ([]interface {}) (len=1 cap=1) {
      (map[string]interface {}) (len=3) {
       (string) (len=4) "name": (string) (len=17) "alertmanager-main",
       (string) (len=9) "namespace": (string) (len=10) "monitoring",
       (string) (len=4) "port": (string) (len=3) "web"
      }
     }
    },
    (string) (len=15) "securityContext": (map[string]interface {}) (len=3) {
     (string) (len=9) "runAsUser": (*big.Float)(0xc000754de0)(1000),
     (string) (len=7) "fsGroup": (*big.Float)(0xc000754db0)(2000),
     (string) (len=12) "runAsNonRoot": (bool) true
    },
    (string) (len=5) "image": (string) (len=37) "quay.io/prometheus/prometheus:v2.25.2",
    (string) (len=7) "version": (string) (len=7) "v2.25.2",
    (string) (len=7) "storage": (map[string]interface {}) (len=1) {
     (string) (len=19) "volumeClaimTemplate": (map[string]interface {}) (len=1) {
      (string) (len=4) "spec": (map[string]interface {}) (len=2) {
       (string) (len=9) "resources": (map[string]interface {}) (len=1) {
        (string) (len=8) "requests": (map[string]interface {}) (len=1) {
         (string) (len=7) "storage": (string) (len=4) "10Gi"
        }
       },
       (string) (len=16) "storageClassName": (string) (len=3) "gp2"
      }
     }
    },
    (string) (len=23) "additionalScrapeConfigs": (map[string]interface {}) (len=2) {
     (string) (len=3) "key": (string) (len=26) "prometheus-additional.yaml",
     (string) (len=4) "name": (string) (len=25) "additional-scrape-configs"
    },
    (string) (len=14) "externalLabels": (map[string]interface {}) (len=2) {
     (string) (len=7) "product": (string) (len=13) "api beep boop",
     (string) (len=7) "cluster": (string) (len=12) "my-cluster-2"
    },
    (string) (len=22) "serviceMonitorSelector": (map[string]interface {}) {
    },
    (string) (len=4) "name": (string) (len=6) "test-1"
   },
   (string) (len=10) "apiVersion": (string) (len=24) "monitoring.coreos.com/v1"
  },
  (string) (len=6) "object": (map[string]interface {}) (len=4) {
   (string) (len=10) "apiVersion": (string) (len=24) "monitoring.coreos.com/v1",
   (string) (len=4) "kind": (string) (len=10) "Prometheus",
   (string) (len=8) "metadata": (map[string]interface {}) (len=2) {
    (string) (len=4) "name": (string) (len=6) "test-1",
    (string) (len=9) "namespace": (string) (len=15) "test-operator-1"
   },
   (string) (len=4) "spec": (map[string]interface {}) (len=19) {
    (string) (len=12) "nodeSelector": (map[string]interface {}) (len=1) {
     (string) (len=4) "role": (string) (len=8) "services"
    },
    (string) (len=5) "image": (string) (len=37) "quay.io/prometheus/prometheus:v2.25.2",
    (string) (len=8) "replicas": (*big.Float)(0xc00026b650)(1),
    (string) (len=31) "serviceMonitorNamespaceSelector": (map[string]interface {}) {
    },
    (string) (len=23) "additionalScrapeConfigs": (map[string]interface {}) (len=2) {
     (string) (len=4) "name": (string) (len=25) "additional-scrape-configs",
     (string) (len=3) "key": (string) (len=26) "prometheus-additional.yaml"
    },
    (string) (len=27) "podMonitorNamespaceSelector": (map[string]interface {}) {
    },
    (string) (len=6) "thanos": (map[string]interface {}) (len=3) {
     (string) (len=7) "version": (string) (len=7) "v0.16.0",
     (string) (len=9) "baseImage": (string) (len=21) "quay.io/thanos/thanos",
     (string) (len=19) "objectStorageConfig": (map[string]interface {}) (len=2) {
      (string) (len=3) "key": (string) (len=11) "thanos.yaml",
      (string) (len=4) "name": (string) (len=22) "thanos-objstore-config"
     }
    },
    (string) (len=18) "podMonitorSelector": (map[string]interface {}) {
    },
    (string) (len=22) "serviceMonitorSelector": (map[string]interface {}) {
    },
    (string) (len=7) "storage": (map[string]interface {}) (len=1) {
     (string) (len=19) "volumeClaimTemplate": (map[string]interface {}) (len=1) {
      (string) (len=4) "spec": (map[string]interface {}) (len=2) {
       (string) (len=9) "resources": (map[string]interface {}) (len=1) {
        (string) (len=8) "requests": (map[string]interface {}) (len=1) {
         (string) (len=7) "storage": (string) (len=4) "10Gi"
        }
       },
       (string) (len=16) "storageClassName": (string) (len=3) "gp2"
      }
     }
    },
    (string) (len=12) "ruleSelector": (map[string]interface {}) (len=1) {
     (string) (len=11) "matchLabels": (map[string]interface {}) (len=2) {
      (string) (len=4) "role": (string) (len=11) "alert-rules",
      (string) (len=10) "prometheus": (string) (len=3) "k8s"
     }
    },
    (string) (len=15) "securityContext": (map[string]interface {}) (len=3) {
     (string) (len=7) "fsGroup": (*big.Float)(0xc00026b860)(2000),
     (string) (len=12) "runAsNonRoot": (bool) true,
     (string) (len=9) "runAsUser": (*big.Float)(0xc00026b8c0)(1000)
    },
    (string) (len=14) "externalLabels": (map[string]interface {}) (len=2) {
     (string) (len=7) "cluster": (string) (len=12) "my-cluster-2",
     (string) (len=7) "product": (string) (len=13) "api beep boop"
    },
    (string) (len=22) "probeNamespaceSelector": (map[string]interface {}) {
    },
    (string) (len=9) "resources": (map[string]interface {}) (len=2) {
     (string) (len=6) "limits": (map[string]interface {}) (len=2) {
      (string) (len=3) "cpu": (string) (len=4) "250m",
      (string) (len=6) "memory": (string) (len=5) "250Mi"
     },
     (string) (len=8) "requests": (map[string]interface {}) (len=2) {
      (string) (len=3) "cpu": (string) (len=4) "200m",
      (string) (len=6) "memory": (string) (len=5) "200Mi"
     }
    },
    (string) (len=8) "alerting": (map[string]interface {}) (len=1) {
     (string) (len=13) "alertmanagers": ([]interface {}) (len=1 cap=1) {
      (map[string]interface {}) (len=3) {
       (string) (len=4) "name": (string) (len=17) "alertmanager-main",
       (string) (len=9) "namespace": (string) (len=10) "monitoring",
       (string) (len=4) "port": (string) (len=3) "web"
      }
     }
    },
    (string) (len=18) "serviceAccountName": (string) (len=14) "prometheus-k8s",
    (string) (len=7) "version": (string) (len=7) "v2.25.2",
    (string) (len=13) "probeSelector": (map[string]interface {}) {
    }
   }
  },
  (string) (len=8) "wait_for": (interface {}) <nil>
 }
}

RAW provider 2021/04/03 23:32:14 [ApplyResourceChange][Request][PriorState]
(cty.Value) {
 ty: (cty.Type) {
  typeImpl: (cty.typeObject) {
   typeImplSigil: (cty.typeImplSigil) {
   },
   AttrTypes: (map[string]cty.Type) (len=3) {
    (string) (len=8) "manifest": (cty.Type) {
     typeImpl: (cty.pseudoTypeDynamic) {
      typeImplSigil: (cty.typeImplSigil) {
      }
     }
    },
    (string) (len=6) "object": (cty.Type) {
     typeImpl: (cty.pseudoTypeDynamic) {
      typeImplSigil: (cty.typeImplSigil) {
      }
     }
    },
    (string) (len=8) "wait_for": (cty.Type) {
     typeImpl: (cty.typeObject) {
      typeImplSigil: (cty.typeImplSigil) {
      },
      AttrTypes: (map[string]cty.Type) (len=1) {
       (string) (len=6) "fields": (cty.Type) {
        typeImpl: (cty.typeMap) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         ElementTypeT: (cty.Type) {
          typeImpl: (cty.primitiveType) {
           typeImplSigil: (cty.typeImplSigil) {
           },
           Kind: (cty.primitiveTypeKind) 83
          }
         }
        }
       }
      }
     }
    }
   }
  }
 },
 v: (interface {}) <nil>
}

RAW provider 2021/04/03 23:32:14 [ApplyResourceChange][Request][PlannedPrivate]
([]uint8) <nil>

RAW provider 2021/04/03 23:32:14 [ApplyResourceChange][Create] API response:
(*unstructured.Unstructured)(0xc00000e008)({
 Object: (map[string]interface {}) (len=4) {
  (string) (len=4) "spec": (map[string]interface {}) (len=19) {
   (string) (len=7) "storage": (map[string]interface {}) (len=1) {
    (string) (len=19) "volumeClaimTemplate": (map[string]interface {}) (len=1) {
     (string) (len=4) "spec": (map[string]interface {}) (len=2) {
      (string) (len=9) "resources": (map[string]interface {}) (len=1) {
       (string) (len=8) "requests": (map[string]interface {}) (len=1) {
        (string) (len=7) "storage": (string) (len=4) "10Gi"
       }
      },
      (string) (len=16) "storageClassName": (string) (len=3) "gp2"
     }
    }
   },
   (string) (len=5) "image": (string) (len=37) "quay.io/prometheus/prometheus:v2.25.2",
   (string) (len=27) "podMonitorNamespaceSelector": (map[string]interface {}) {
   },
   (string) (len=13) "probeSelector": (map[string]interface {}) {
   },
   (string) (len=12) "ruleSelector": (map[string]interface {}) (len=1) {
    (string) (len=11) "matchLabels": (map[string]interface {}) (len=2) {
     (string) (len=10) "prometheus": (string) (len=3) "k8s",
     (string) (len=4) "role": (string) (len=11) "alert-rules"
    }
   },
   (string) (len=15) "securityContext": (map[string]interface {}) (len=3) {
    (string) (len=12) "runAsNonRoot": (bool) true,
    (string) (len=9) "runAsUser": (int64) 1000,
    (string) (len=7) "fsGroup": (int64) 2000
   },
   (string) (len=18) "serviceAccountName": (string) (len=14) "prometheus-k8s",
   (string) (len=31) "serviceMonitorNamespaceSelector": (map[string]interface {}) {
   },
   (string) (len=12) "nodeSelector": (map[string]interface {}) (len=1) {
    (string) (len=4) "role": (string) (len=8) "services"
   },
   (string) (len=8) "replicas": (int64) 1,
   (string) (len=9) "resources": (map[string]interface {}) (len=2) {
    (string) (len=6) "limits": (map[string]interface {}) (len=2) {
     (string) (len=3) "cpu": (string) (len=4) "250m",
     (string) (len=6) "memory": (string) (len=5) "250Mi"
    },
    (string) (len=8) "requests": (map[string]interface {}) (len=2) {
     (string) (len=3) "cpu": (string) (len=4) "200m",
     (string) (len=6) "memory": (string) (len=5) "200Mi"
    }
   },
   (string) (len=6) "thanos": (map[string]interface {}) (len=3) {
    (string) (len=9) "baseImage": (string) (len=21) "quay.io/thanos/thanos",
    (string) (len=19) "objectStorageConfig": (map[string]interface {}) (len=2) {
     (string) (len=3) "key": (string) (len=11) "thanos.yaml",
     (string) (len=4) "name": (string) (len=22) "thanos-objstore-config"
    },
    (string) (len=7) "version": (string) (len=7) "v0.16.0"
   },
   (string) (len=23) "additionalScrapeConfigs": (map[string]interface {}) (len=2) {
    (string) (len=3) "key": (string) (len=26) "prometheus-additional.yaml",
    (string) (len=4) "name": (string) (len=25) "additional-scrape-configs"
   },
   (string) (len=14) "externalLabels": (map[string]interface {}) (len=2) {
    (string) (len=7) "cluster": (string) (len=12) "my-cluster-2",
    (string) (len=7) "product": (string) (len=13) "api beep boop"
   },
   (string) (len=8) "alerting": (map[string]interface {}) (len=1) {
    (string) (len=13) "alertmanagers": ([]interface {}) (len=1 cap=1) {
     (map[string]interface {}) (len=3) {
      (string) (len=4) "name": (string) (len=17) "alertmanager-main",
      (string) (len=9) "namespace": (string) (len=10) "monitoring",
      (string) (len=4) "port": (string) (len=3) "web"
     }
    }
   },
   (string) (len=18) "podMonitorSelector": (map[string]interface {}) {
   },
   (string) (len=22) "probeNamespaceSelector": (map[string]interface {}) {
   },
   (string) (len=22) "serviceMonitorSelector": (map[string]interface {}) {
   },
   (string) (len=7) "version": (string) (len=7) "v2.25.2"
  },
  (string) (len=10) "apiVersion": (string) (len=24) "monitoring.coreos.com/v1",
  (string) (len=4) "kind": (string) (len=10) "Prometheus",
  (string) (len=8) "metadata": (map[string]interface {}) (len=8) {
   (string) (len=15) "resourceVersion": (string) (len=8) "50987132",
   (string) (len=8) "selfLink": (string) (len=77) "/apis/monitoring.coreos.com/v1/namespaces/test-operator-1/prometheuses/test-1",
   (string) (len=3) "uid": (string) (len=36) "c0e4570b-f184-40d1-a1c5-84aef7046605",
   (string) (len=17) "creationTimestamp": (string) (len=20) "2021-04-04T03:32:14Z",
   (string) (len=10) "generation": (int64) 1,
   (string) (len=13) "managedFields": ([]interface {}) (len=1 cap=1) {
    (map[string]interface {}) (len=6) {
     (string) (len=10) "fieldsType": (string) (len=8) "FieldsV1",
     (string) (len=8) "fieldsV1": (map[string]interface {}) (len=1) {
      (string) (len=6) "f:spec": (map[string]interface {}) (len=20) {
       (string) (len=25) "f:additionalScrapeConfigs": (map[string]interface {}) (len=3) {
        (string) (len=1) ".": (map[string]interface {}) {
        },
        (string) (len=5) "f:key": (map[string]interface {}) {
        },
        (string) (len=6) "f:name": (map[string]interface {}) {
        }
       },
       (string) (len=7) "f:image": (map[string]interface {}) {
       },
       (string) (len=24) "f:probeNamespaceSelector": (map[string]interface {}) {
       },
       (string) (len=9) "f:storage": (map[string]interface {}) (len=2) {
        (string) (len=21) "f:volumeClaimTemplate": (map[string]interface {}) (len=2) {
         (string) (len=1) ".": (map[string]interface {}) {
         },
         (string) (len=6) "f:spec": (map[string]interface {}) (len=3) {
          (string) (len=18) "f:storageClassName": (map[string]interface {}) {
          },
          (string) (len=1) ".": (map[string]interface {}) {
          },
          (string) (len=11) "f:resources": (map[string]interface {}) (len=2) {
           (string) (len=1) ".": (map[string]interface {}) {
           },
           (string) (len=10) "f:requests": (map[string]interface {}) (len=2) {
            (string) (len=1) ".": (map[string]interface {}) {
            },
            (string) (len=9) "f:storage": (map[string]interface {}) {
            }
           }
          }
         }
        },
        (string) (len=1) ".": (map[string]interface {}) {
        }
       },
       (string) (len=33) "f:serviceMonitorNamespaceSelector": (map[string]interface {}) {
       },
       (string) (len=8) "f:thanos": (map[string]interface {}) (len=4) {
        (string) (len=1) ".": (map[string]interface {}) {
        },
        (string) (len=11) "f:baseImage": (map[string]interface {}) {
        },
        (string) (len=21) "f:objectStorageConfig": (map[string]interface {}) (len=3) {
         (string) (len=1) ".": (map[string]interface {}) {
         },
         (string) (len=5) "f:key": (map[string]interface {}) {
         },
         (string) (len=6) "f:name": (map[string]interface {}) {
         }
        },
        (string) (len=9) "f:version": (map[string]interface {}) {
        }
       },
       (string) (len=1) ".": (map[string]interface {}) {
       },
       (string) (len=10) "f:alerting": (map[string]interface {}) (len=2) {
        (string) (len=1) ".": (map[string]interface {}) {
        },
        (string) (len=15) "f:alertmanagers": (map[string]interface {}) {
        }
       },
       (string) (len=20) "f:podMonitorSelector": (map[string]interface {}) {
       },
       (string) (len=15) "f:probeSelector": (map[string]interface {}) {
       },
       (string) (len=17) "f:securityContext": (map[string]interface {}) (len=4) {
        (string) (len=1) ".": (map[string]interface {}) {
        },
        (string) (len=9) "f:fsGroup": (map[string]interface {}) {
        },
        (string) (len=14) "f:runAsNonRoot": (map[string]interface {}) {
        },
        (string) (len=11) "f:runAsUser": (map[string]interface {}) {
        }
       },
       (string) (len=29) "f:podMonitorNamespaceSelector": (map[string]interface {}) {
       },
       (string) (len=10) "f:replicas": (map[string]interface {}) {
       },
       (string) (len=11) "f:resources": (map[string]interface {}) (len=3) {
        (string) (len=1) ".": (map[string]interface {}) {
        },
        (string) (len=8) "f:limits": (map[string]interface {}) (len=3) {
         (string) (len=5) "f:cpu": (map[string]interface {}) {
         },
         (string) (len=8) "f:memory": (map[string]interface {}) {
         },
         (string) (len=1) ".": (map[string]interface {}) {
         }
        },
        (string) (len=10) "f:requests": (map[string]interface {}) (len=3) {
         (string) (len=1) ".": (map[string]interface {}) {
         },
         (string) (len=5) "f:cpu": (map[string]interface {}) {
         },
         (string) (len=8) "f:memory": (map[string]interface {}) {
         }
        }
       },
       (string) (len=20) "f:serviceAccountName": (map[string]interface {}) {
       },
       (string) (len=9) "f:version": (map[string]interface {}) {
       },
       (string) (len=16) "f:externalLabels": (map[string]interface {}) (len=3) {
        (string) (len=1) ".": (map[string]interface {}) {
        },
        (string) (len=9) "f:cluster": (map[string]interface {}) {
        },
        (string) (len=9) "f:product": (map[string]interface {}) {
        }
       },
       (string) (len=14) "f:nodeSelector": (map[string]interface {}) (len=2) {
        (string) (len=1) ".": (map[string]interface {}) {
        },
        (string) (len=6) "f:role": (map[string]interface {}) {
        }
       },
       (string) (len=14) "f:ruleSelector": (map[string]interface {}) (len=2) {
        (string) (len=1) ".": (map[string]interface {}) {
        },
        (string) (len=13) "f:matchLabels": (map[string]interface {}) (len=3) {
         (string) (len=1) ".": (map[string]interface {}) {
         },
         (string) (len=12) "f:prometheus": (map[string]interface {}) {
         },
         (string) (len=6) "f:role": (map[string]interface {}) {
         }
        }
       },
       (string) (len=24) "f:serviceMonitorSelector": (map[string]interface {}) {
       }
      }
     },
     (string) (len=7) "manager": (string) (len=9) "Terraform",
     (string) (len=9) "operation": (string) (len=5) "Apply",
     (string) (len=4) "time": (string) (len=20) "2021-04-04T03:32:14Z",
     (string) (len=10) "apiVersion": (string) (len=24) "monitoring.coreos.com/v1"
    }
   },
   (string) (len=4) "name": (string) (len=6) "test-1",
   (string) (len=9) "namespace": (string) (len=15) "test-operator-1"
  }
 }
})

RAW provider 2021/04/03 23:32:14 [ApplyResourceChange][Create] transformed response:
(cty.Value) {
 ty: (cty.Type) {
  typeImpl: (cty.typeObject) {
   typeImplSigil: (cty.typeImplSigil) {
   },
   AttrTypes: (map[string]cty.Type) (len=4) {
    (string) (len=4) "kind": (cty.Type) {
     typeImpl: (cty.primitiveType) {
      typeImplSigil: (cty.typeImplSigil) {
      },
      Kind: (cty.primitiveTypeKind) 83
     }
    },
    (string) (len=8) "metadata": (cty.Type) {
     typeImpl: (cty.typeObject) {
      typeImplSigil: (cty.typeImplSigil) {
      },
      AttrTypes: (map[string]cty.Type) (len=2) {
       (string) (len=4) "name": (cty.Type) {
        typeImpl: (cty.primitiveType) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         Kind: (cty.primitiveTypeKind) 83
        }
       },
       (string) (len=9) "namespace": (cty.Type) {
        typeImpl: (cty.primitiveType) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         Kind: (cty.primitiveTypeKind) 83
        }
       }
      }
     }
    },
    (string) (len=4) "spec": (cty.Type) {
     typeImpl: (cty.typeObject) {
      typeImplSigil: (cty.typeImplSigil) {
      },
      AttrTypes: (map[string]cty.Type) (len=19) {
       (string) (len=7) "version": (cty.Type) {
        typeImpl: (cty.primitiveType) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         Kind: (cty.primitiveTypeKind) 83
        }
       },
       (string) (len=22) "serviceMonitorSelector": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) {
         }
        }
       },
       (string) (len=23) "additionalScrapeConfigs": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) (len=2) {
          (string) (len=3) "key": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=4) "name": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          }
         }
        }
       },
       (string) (len=14) "externalLabels": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) (len=2) {
          (string) (len=7) "cluster": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=7) "product": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          }
         }
        }
       },
       (string) (len=12) "nodeSelector": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) (len=1) {
          (string) (len=4) "role": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          }
         }
        }
       },
       (string) (len=22) "probeNamespaceSelector": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) {
         }
        }
       },
       (string) (len=8) "alerting": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) (len=1) {
          (string) (len=13) "alertmanagers": (cty.Type) {
           typeImpl: (cty.typeTuple) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            ElemTypes: ([]cty.Type) (len=1 cap=1) {
             (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=3) {
                (string) (len=9) "namespace": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=4) "port": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=4) "name": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             }
            }
           }
          }
         }
        }
       },
       (string) (len=5) "image": (cty.Type) {
        typeImpl: (cty.primitiveType) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         Kind: (cty.primitiveTypeKind) 83
        }
       },
       (string) (len=15) "securityContext": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) (len=3) {
          (string) (len=7) "fsGroup": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 78
           }
          },
          (string) (len=12) "runAsNonRoot": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 66
           }
          },
          (string) (len=9) "runAsUser": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 78
           }
          }
         }
        }
       },
       (string) (len=18) "serviceAccountName": (cty.Type) {
        typeImpl: (cty.primitiveType) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         Kind: (cty.primitiveTypeKind) 83
        }
       },
       (string) (len=13) "probeSelector": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) {
         }
        }
       },
       (string) (len=7) "storage": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) (len=1) {
          (string) (len=19) "volumeClaimTemplate": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=1) {
             (string) (len=4) "spec": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=9) "resources": (cty.Type) {
                 typeImpl: (cty.typeObject) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  AttrTypes: (map[string]cty.Type) (len=1) {
                   (string) (len=8) "requests": (cty.Type) {
                    typeImpl: (cty.typeObject) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     AttrTypes: (map[string]cty.Type) (len=1) {
                      (string) (len=7) "storage": (cty.Type) {
                       typeImpl: (cty.primitiveType) {
                        typeImplSigil: (cty.typeImplSigil) {
                        },
                        Kind: (cty.primitiveTypeKind) 83
                       }
                      }
                     }
                    }
                   }
                  }
                 }
                },
                (string) (len=16) "storageClassName": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             }
            }
           }
          }
         }
        }
       },
       (string) (len=12) "ruleSelector": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) (len=1) {
          (string) (len=11) "matchLabels": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=2) {
             (string) (len=10) "prometheus": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             },
             (string) (len=4) "role": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             }
            }
           }
          }
         }
        }
       },
       (string) (len=18) "podMonitorSelector": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) {
         }
        }
       },
       (string) (len=27) "podMonitorNamespaceSelector": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) {
         }
        }
       },
       (string) (len=9) "resources": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) (len=2) {
          (string) (len=6) "limits": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=2) {
             (string) (len=3) "cpu": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             },
             (string) (len=6) "memory": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             }
            }
           }
          },
          (string) (len=8) "requests": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=2) {
             (string) (len=3) "cpu": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             },
             (string) (len=6) "memory": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             }
            }
           }
          }
         }
        }
       },
       (string) (len=31) "serviceMonitorNamespaceSelector": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) {
         }
        }
       },
       (string) (len=8) "replicas": (cty.Type) {
        typeImpl: (cty.primitiveType) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         Kind: (cty.primitiveTypeKind) 78
        }
       },
       (string) (len=6) "thanos": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) (len=3) {
          (string) (len=9) "baseImage": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=19) "objectStorageConfig": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=2) {
             (string) (len=3) "key": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             },
             (string) (len=4) "name": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             }
            }
           }
          },
          (string) (len=7) "version": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          }
         }
        }
       }
      }
     }
    },
    (string) (len=10) "apiVersion": (cty.Type) {
     typeImpl: (cty.primitiveType) {
      typeImplSigil: (cty.typeImplSigil) {
      },
      Kind: (cty.primitiveTypeKind) 83
     }
    }
   }
  }
 },
 v: (map[string]interface {}) (len=4) {
  (string) (len=4) "kind": (string) (len=10) "Prometheus",
  (string) (len=8) "metadata": (map[string]interface {}) (len=2) {
   (string) (len=9) "namespace": (string) (len=15) "test-operator-1",
   (string) (len=4) "name": (string) (len=6) "test-1"
  },
  (string) (len=4) "spec": (map[string]interface {}) (len=19) {
   (string) (len=12) "ruleSelector": (map[string]interface {}) (len=1) {
    (string) (len=11) "matchLabels": (map[string]interface {}) (len=2) {
     (string) (len=10) "prometheus": (string) (len=3) "k8s",
     (string) (len=4) "role": (string) (len=11) "alert-rules"
    }
   },
   (string) (len=22) "probeNamespaceSelector": (map[string]interface {}) {
   },
   (string) (len=23) "additionalScrapeConfigs": (map[string]interface {}) (len=2) {
    (string) (len=3) "key": (string) (len=26) "prometheus-additional.yaml",
    (string) (len=4) "name": (string) (len=25) "additional-scrape-configs"
   },
   (string) (len=8) "alerting": (map[string]interface {}) (len=1) {
    (string) (len=13) "alertmanagers": ([]interface {}) (len=1 cap=1) {
     (map[string]interface {}) (len=3) {
      (string) (len=9) "namespace": (string) (len=10) "monitoring",
      (string) (len=4) "port": (string) (len=3) "web",
      (string) (len=4) "name": (string) (len=17) "alertmanager-main"
     }
    }
   },
   (string) (len=5) "image": (string) (len=37) "quay.io/prometheus/prometheus:v2.25.2",
   (string) (len=7) "version": (string) (len=7) "v2.25.2",
   (string) (len=22) "serviceMonitorSelector": (map[string]interface {}) {
   },
   (string) (len=8) "replicas": (*big.Float)(0xc000623dd0)(1),
   (string) (len=15) "securityContext": (map[string]interface {}) (len=3) {
    (string) (len=7) "fsGroup": (*big.Float)(0xc000278390)(2000),
    (string) (len=12) "runAsNonRoot": (bool) true,
    (string) (len=9) "runAsUser": (*big.Float)(0xc000278420)(1000)
   },
   (string) (len=31) "serviceMonitorNamespaceSelector": (map[string]interface {}) {
   },
   (string) (len=6) "thanos": (map[string]interface {}) (len=3) {
    (string) (len=7) "version": (string) (len=7) "v0.16.0",
    (string) (len=9) "baseImage": (string) (len=21) "quay.io/thanos/thanos",
    (string) (len=19) "objectStorageConfig": (map[string]interface {}) (len=2) {
     (string) (len=4) "name": (string) (len=22) "thanos-objstore-config",
     (string) (len=3) "key": (string) (len=11) "thanos.yaml"
    }
   },
   (string) (len=12) "nodeSelector": (map[string]interface {}) (len=1) {
    (string) (len=4) "role": (string) (len=8) "services"
   },
   (string) (len=27) "podMonitorNamespaceSelector": (map[string]interface {}) {
   },
   (string) (len=9) "resources": (map[string]interface {}) (len=2) {
    (string) (len=8) "requests": (map[string]interface {}) (len=2) {
     (string) (len=3) "cpu": (string) (len=4) "200m",
     (string) (len=6) "memory": (string) (len=5) "200Mi"
    },
    (string) (len=6) "limits": (map[string]interface {}) (len=2) {
     (string) (len=6) "memory": (string) (len=5) "250Mi",
     (string) (len=3) "cpu": (string) (len=4) "250m"
    }
   },
   (string) (len=7) "storage": (map[string]interface {}) (len=1) {
    (string) (len=19) "volumeClaimTemplate": (map[string]interface {}) (len=1) {
     (string) (len=4) "spec": (map[string]interface {}) (len=2) {
      (string) (len=9) "resources": (map[string]interface {}) (len=1) {
       (string) (len=8) "requests": (map[string]interface {}) (len=1) {
        (string) (len=7) "storage": (string) (len=4) "10Gi"
       }
      },
      (string) (len=16) "storageClassName": (string) (len=3) "gp2"
     }
    }
   },
   (string) (len=18) "podMonitorSelector": (map[string]interface {}) {
   },
   (string) (len=13) "probeSelector": (map[string]interface {}) {
   },
   (string) (len=18) "serviceAccountName": (string) (len=14) "prometheus-k8s",
   (string) (len=14) "externalLabels": (map[string]interface {}) (len=2) {
    (string) (len=7) "cluster": (string) (len=12) "my-cluster-2",
    (string) (len=7) "product": (string) (len=13) "api beep boop"
   }
  },
  (string) (len=10) "apiVersion": (string) (len=24) "monitoring.coreos.com/v1"
 }
}

RAW provider 2021/04/03 23:32:14 [ApplyResourceChange][Create] transformed new state:
(cty.Value) {
 ty: (cty.Type) {
  typeImpl: (cty.typeObject) {
   typeImplSigil: (cty.typeImplSigil) {
   },
   AttrTypes: (map[string]cty.Type) (len=3) {
    (string) (len=6) "object": (cty.Type) {
     typeImpl: (cty.typeObject) {
      typeImplSigil: (cty.typeImplSigil) {
      },
      AttrTypes: (map[string]cty.Type) (len=4) {
       (string) (len=4) "kind": (cty.Type) {
        typeImpl: (cty.primitiveType) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         Kind: (cty.primitiveTypeKind) 83
        }
       },
       (string) (len=8) "metadata": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) (len=2) {
          (string) (len=4) "name": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=9) "namespace": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          }
         }
        }
       },
       (string) (len=4) "spec": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) (len=19) {
          (string) (len=18) "podMonitorSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=27) "podMonitorNamespaceSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=9) "resources": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=2) {
             (string) (len=6) "limits": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=3) "cpu": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=6) "memory": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             },
             (string) (len=8) "requests": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=3) "cpu": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=6) "memory": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=7) "storage": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=1) {
             (string) (len=19) "volumeClaimTemplate": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=1) {
                (string) (len=4) "spec": (cty.Type) {
                 typeImpl: (cty.typeObject) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  AttrTypes: (map[string]cty.Type) (len=2) {
                   (string) (len=9) "resources": (cty.Type) {
                    typeImpl: (cty.typeObject) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     AttrTypes: (map[string]cty.Type) (len=1) {
                      (string) (len=8) "requests": (cty.Type) {
                       typeImpl: (cty.typeObject) {
                        typeImplSigil: (cty.typeImplSigil) {
                        },
                        AttrTypes: (map[string]cty.Type) (len=1) {
                         (string) (len=7) "storage": (cty.Type) {
                          typeImpl: (cty.primitiveType) {
                           typeImplSigil: (cty.typeImplSigil) {
                           },
                           Kind: (cty.primitiveTypeKind) 83
                          }
                         }
                        }
                       }
                      }
                     }
                    }
                   },
                   (string) (len=16) "storageClassName": (cty.Type) {
                    typeImpl: (cty.primitiveType) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     Kind: (cty.primitiveTypeKind) 83
                    }
                   }
                  }
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=12) "ruleSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=1) {
             (string) (len=11) "matchLabels": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=10) "prometheus": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=4) "role": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=6) "thanos": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=3) {
             (string) (len=9) "baseImage": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             },
             (string) (len=19) "objectStorageConfig": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=3) "key": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=4) "name": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             },
             (string) (len=7) "version": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             }
            }
           }
          },
          (string) (len=31) "serviceMonitorNamespaceSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=8) "replicas": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 78
           }
          },
          (string) (len=23) "additionalScrapeConfigs": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=2) {
             (string) (len=3) "key": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             },
             (string) (len=4) "name": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             }
            }
           }
          },
          (string) (len=14) "externalLabels": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=2) {
             (string) (len=7) "cluster": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             },
             (string) (len=7) "product": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             }
            }
           }
          },
          (string) (len=7) "version": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=22) "serviceMonitorSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=8) "alerting": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=1) {
             (string) (len=13) "alertmanagers": (cty.Type) {
              typeImpl: (cty.typeTuple) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               ElemTypes: ([]cty.Type) (len=1 cap=1) {
                (cty.Type) {
                 typeImpl: (cty.typeObject) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  AttrTypes: (map[string]cty.Type) (len=3) {
                   (string) (len=9) "namespace": (cty.Type) {
                    typeImpl: (cty.primitiveType) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     Kind: (cty.primitiveTypeKind) 83
                    }
                   },
                   (string) (len=4) "port": (cty.Type) {
                    typeImpl: (cty.primitiveType) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     Kind: (cty.primitiveTypeKind) 83
                    }
                   },
                   (string) (len=4) "name": (cty.Type) {
                    typeImpl: (cty.primitiveType) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     Kind: (cty.primitiveTypeKind) 83
                    }
                   }
                  }
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=5) "image": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=15) "securityContext": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=3) {
             (string) (len=7) "fsGroup": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 78
              }
             },
             (string) (len=12) "runAsNonRoot": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 66
              }
             },
             (string) (len=9) "runAsUser": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 78
              }
             }
            }
           }
          },
          (string) (len=18) "serviceAccountName": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=13) "probeSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=12) "nodeSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=1) {
             (string) (len=4) "role": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             }
            }
           }
          },
          (string) (len=22) "probeNamespaceSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          }
         }
        }
       },
       (string) (len=10) "apiVersion": (cty.Type) {
        typeImpl: (cty.primitiveType) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         Kind: (cty.primitiveTypeKind) 83
        }
       }
      }
     }
    },
    (string) (len=8) "wait_for": (cty.Type) {
     typeImpl: (cty.typeObject) {
      typeImplSigil: (cty.typeImplSigil) {
      },
      AttrTypes: (map[string]cty.Type) (len=1) {
       (string) (len=6) "fields": (cty.Type) {
        typeImpl: (cty.typeMap) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         ElementTypeT: (cty.Type) {
          typeImpl: (cty.primitiveType) {
           typeImplSigil: (cty.typeImplSigil) {
           },
           Kind: (cty.primitiveTypeKind) 83
          }
         }
        }
       }
      }
     }
    },
    (string) (len=8) "manifest": (cty.Type) {
     typeImpl: (cty.typeObject) {
      typeImplSigil: (cty.typeImplSigil) {
      },
      AttrTypes: (map[string]cty.Type) (len=4) {
       (string) (len=10) "apiVersion": (cty.Type) {
        typeImpl: (cty.primitiveType) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         Kind: (cty.primitiveTypeKind) 83
        }
       },
       (string) (len=4) "kind": (cty.Type) {
        typeImpl: (cty.primitiveType) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         Kind: (cty.primitiveTypeKind) 83
        }
       },
       (string) (len=8) "metadata": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) (len=2) {
          (string) (len=4) "name": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=9) "namespace": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          }
         }
        }
       },
       (string) (len=4) "spec": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) (len=21) {
          (string) (len=22) "probeNamespaceSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=5) "image": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=23) "additionalScrapeConfigs": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=2) {
             (string) (len=3) "key": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             },
             (string) (len=4) "name": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             }
            }
           }
          },
          (string) (len=7) "storage": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=1) {
             (string) (len=19) "volumeClaimTemplate": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=1) {
                (string) (len=4) "spec": (cty.Type) {
                 typeImpl: (cty.typeObject) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  AttrTypes: (map[string]cty.Type) (len=2) {
                   (string) (len=16) "storageClassName": (cty.Type) {
                    typeImpl: (cty.primitiveType) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     Kind: (cty.primitiveTypeKind) 83
                    }
                   },
                   (string) (len=9) "resources": (cty.Type) {
                    typeImpl: (cty.typeObject) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     AttrTypes: (map[string]cty.Type) (len=1) {
                      (string) (len=8) "requests": (cty.Type) {
                       typeImpl: (cty.typeObject) {
                        typeImplSigil: (cty.typeImplSigil) {
                        },
                        AttrTypes: (map[string]cty.Type) (len=1) {
                         (string) (len=7) "storage": (cty.Type) {
                          typeImpl: (cty.primitiveType) {
                           typeImplSigil: (cty.typeImplSigil) {
                           },
                           Kind: (cty.primitiveTypeKind) 83
                          }
                         }
                        }
                       }
                      }
                     }
                    }
                   }
                  }
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=31) "serviceMonitorNamespaceSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=8) "replicas": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 78
           }
          },
          (string) (len=22) "serviceMonitorSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=14) "externalLabels": (cty.Type) {
           typeImpl: (cty.typeMap) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            ElementTypeT: (cty.Type) {
             typeImpl: (cty.primitiveType) {
              typeImplSigil: (cty.typeImplSigil) {
              },
              Kind: (cty.primitiveTypeKind) 83
             }
            }
           }
          },
          (string) (len=7) "version": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=15) "securityContext": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=3) {
             (string) (len=9) "runAsUser": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 78
              }
             },
             (string) (len=7) "fsGroup": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 78
              }
             },
             (string) (len=12) "runAsNonRoot": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 66
              }
             }
            }
           }
          },
          (string) (len=4) "name": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=27) "podMonitorNamespaceSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=12) "nodeSelector": (cty.Type) {
           typeImpl: (cty.typeMap) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            ElementTypeT: (cty.Type) {
             typeImpl: (cty.primitiveType) {
              typeImplSigil: (cty.typeImplSigil) {
              },
              Kind: (cty.primitiveTypeKind) 83
             }
            }
           }
          },
          (string) (len=12) "ruleSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=1) {
             (string) (len=11) "matchLabels": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=10) "prometheus": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=4) "role": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=6) "thanos": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=3) {
             (string) (len=9) "baseImage": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             },
             (string) (len=19) "objectStorageConfig": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=4) "name": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=3) "key": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             },
             (string) (len=7) "version": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             }
            }
           }
          },
          (string) (len=9) "resources": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=2) {
             (string) (len=6) "limits": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=3) "cpu": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=6) "memory": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             },
             (string) (len=8) "requests": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=3) "cpu": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=6) "memory": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=13) "probeSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=18) "serviceAccountName": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=8) "alerting": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=1) {
             (string) (len=13) "alertmanagers": (cty.Type) {
              typeImpl: (cty.typeTuple) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               ElemTypes: ([]cty.Type) (len=1 cap=1) {
                (cty.Type) {
                 typeImpl: (cty.typeObject) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  AttrTypes: (map[string]cty.Type) (len=3) {
                   (string) (len=4) "name": (cty.Type) {
                    typeImpl: (cty.primitiveType) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     Kind: (cty.primitiveTypeKind) 83
                    }
                   },
                   (string) (len=9) "namespace": (cty.Type) {
                    typeImpl: (cty.primitiveType) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     Kind: (cty.primitiveTypeKind) 83
                    }
                   },
                   (string) (len=4) "port": (cty.Type) {
                    typeImpl: (cty.primitiveType) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     Kind: (cty.primitiveTypeKind) 83
                    }
                   }
                  }
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=18) "podMonitorSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=9) "namespace": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          }
         }
        }
       }
      }
     }
    }
   }
  }
 },
 v: (map[string]interface {}) (len=3) {
  (string) (len=8) "wait_for": (interface {}) <nil>,
  (string) (len=8) "manifest": (map[string]interface {}) (len=4) {
   (string) (len=4) "kind": (string) (len=10) "Prometheus",
   (string) (len=8) "metadata": (map[string]interface {}) (len=2) {
    (string) (len=9) "namespace": (string) (len=15) "test-operator-1",
    (string) (len=4) "name": (string) (len=6) "test-1"
   },
   (string) (len=4) "spec": (map[string]interface {}) (len=21) {
    (string) (len=14) "externalLabels": (map[string]interface {}) (len=2) {
     (string) (len=7) "cluster": (string) (len=12) "my-cluster-2",
     (string) (len=7) "product": (string) (len=13) "api beep boop"
    },
    (string) (len=15) "securityContext": (map[string]interface {}) (len=3) {
     (string) (len=9) "runAsUser": (*big.Float)(0xc000754de0)(1000),
     (string) (len=7) "fsGroup": (*big.Float)(0xc000754db0)(2000),
     (string) (len=12) "runAsNonRoot": (bool) true
    },
    (string) (len=18) "serviceAccountName": (string) (len=14) "prometheus-k8s",
    (string) (len=13) "probeSelector": (map[string]interface {}) {
    },
    (string) (len=12) "nodeSelector": (map[string]interface {}) (len=1) {
     (string) (len=4) "role": (string) (len=8) "services"
    },
    (string) (len=6) "thanos": (map[string]interface {}) (len=3) {
     (string) (len=19) "objectStorageConfig": (map[string]interface {}) (len=2) {
      (string) (len=4) "name": (string) (len=22) "thanos-objstore-config",
      (string) (len=3) "key": (string) (len=11) "thanos.yaml"
     },
     (string) (len=7) "version": (string) (len=7) "v0.16.0",
     (string) (len=9) "baseImage": (string) (len=21) "quay.io/thanos/thanos"
    },
    (string) (len=9) "resources": (map[string]interface {}) (len=2) {
     (string) (len=6) "limits": (map[string]interface {}) (len=2) {
      (string) (len=3) "cpu": (string) (len=4) "250m",
      (string) (len=6) "memory": (string) (len=5) "250Mi"
     },
     (string) (len=8) "requests": (map[string]interface {}) (len=2) {
      (string) (len=3) "cpu": (string) (len=4) "200m",
      (string) (len=6) "memory": (string) (len=5) "200Mi"
     }
    },
    (string) (len=7) "version": (string) (len=7) "v2.25.2",
    (string) (len=12) "ruleSelector": (map[string]interface {}) (len=1) {
     (string) (len=11) "matchLabels": (map[string]interface {}) (len=2) {
      (string) (len=10) "prometheus": (string) (len=3) "k8s",
      (string) (len=4) "role": (string) (len=11) "alert-rules"
     }
    },
    (string) (len=7) "storage": (map[string]interface {}) (len=1) {
     (string) (len=19) "volumeClaimTemplate": (map[string]interface {}) (len=1) {
      (string) (len=4) "spec": (map[string]interface {}) (len=2) {
       (string) (len=9) "resources": (map[string]interface {}) (len=1) {
        (string) (len=8) "requests": (map[string]interface {}) (len=1) {
         (string) (len=7) "storage": (string) (len=4) "10Gi"
        }
       },
       (string) (len=16) "storageClassName": (string) (len=3) "gp2"
      }
     }
    },
    (string) (len=4) "name": (string) (len=6) "test-1",
    (string) (len=27) "podMonitorNamespaceSelector": (map[string]interface {}) {
    },
    (string) (len=8) "alerting": (map[string]interface {}) (len=1) {
     (string) (len=13) "alertmanagers": ([]interface {}) (len=1 cap=1) {
      (map[string]interface {}) (len=3) {
       (string) (len=9) "namespace": (string) (len=10) "monitoring",
       (string) (len=4) "port": (string) (len=3) "web",
       (string) (len=4) "name": (string) (len=17) "alertmanager-main"
      }
     }
    },
    (string) (len=9) "namespace": (string) (len=15) "test-operator-1",
    (string) (len=31) "serviceMonitorNamespaceSelector": (map[string]interface {}) {
    },
    (string) (len=8) "replicas": (*big.Float)(0xc000754ba0)(1),
    (string) (len=23) "additionalScrapeConfigs": (map[string]interface {}) (len=2) {
     (string) (len=4) "name": (string) (len=25) "additional-scrape-configs",
     (string) (len=3) "key": (string) (len=26) "prometheus-additional.yaml"
    },
    (string) (len=5) "image": (string) (len=37) "quay.io/prometheus/prometheus:v2.25.2",
    (string) (len=18) "podMonitorSelector": (map[string]interface {}) {
    },
    (string) (len=22) "serviceMonitorSelector": (map[string]interface {}) {
    },
    (string) (len=22) "probeNamespaceSelector": (map[string]interface {}) {
    }
   },
   (string) (len=10) "apiVersion": (string) (len=24) "monitoring.coreos.com/v1"
  },
  (string) (len=6) "object": (map[string]interface {}) (len=4) {
   (string) (len=4) "spec": (map[string]interface {}) (len=19) {
    (string) (len=15) "securityContext": (map[string]interface {}) (len=3) {
     (string) (len=7) "fsGroup": (*big.Float)(0xc000278390)(2000),
     (string) (len=12) "runAsNonRoot": (bool) true,
     (string) (len=9) "runAsUser": (*big.Float)(0xc000278420)(1000)
    },
    (string) (len=31) "serviceMonitorNamespaceSelector": (map[string]interface {}) {
    },
    (string) (len=6) "thanos": (map[string]interface {}) (len=3) {
     (string) (len=19) "objectStorageConfig": (map[string]interface {}) (len=2) {
      (string) (len=4) "name": (string) (len=22) "thanos-objstore-config",
      (string) (len=3) "key": (string) (len=11) "thanos.yaml"
     },
     (string) (len=7) "version": (string) (len=7) "v0.16.0",
     (string) (len=9) "baseImage": (string) (len=21) "quay.io/thanos/thanos"
    },
    (string) (len=12) "nodeSelector": (map[string]interface {}) (len=1) {
     (string) (len=4) "role": (string) (len=8) "services"
    },
    (string) (len=27) "podMonitorNamespaceSelector": (map[string]interface {}) {
    },
    (string) (len=9) "resources": (map[string]interface {}) (len=2) {
     (string) (len=8) "requests": (map[string]interface {}) (len=2) {
      (string) (len=3) "cpu": (string) (len=4) "200m",
      (string) (len=6) "memory": (string) (len=5) "200Mi"
     },
     (string) (len=6) "limits": (map[string]interface {}) (len=2) {
      (string) (len=3) "cpu": (string) (len=4) "250m",
      (string) (len=6) "memory": (string) (len=5) "250Mi"
     }
    },
    (string) (len=7) "storage": (map[string]interface {}) (len=1) {
     (string) (len=19) "volumeClaimTemplate": (map[string]interface {}) (len=1) {
      (string) (len=4) "spec": (map[string]interface {}) (len=2) {
       (string) (len=9) "resources": (map[string]interface {}) (len=1) {
        (string) (len=8) "requests": (map[string]interface {}) (len=1) {
         (string) (len=7) "storage": (string) (len=4) "10Gi"
        }
       },
       (string) (len=16) "storageClassName": (string) (len=3) "gp2"
      }
     }
    },
    (string) (len=18) "podMonitorSelector": (map[string]interface {}) {
    },
    (string) (len=13) "probeSelector": (map[string]interface {}) {
    },
    (string) (len=18) "serviceAccountName": (string) (len=14) "prometheus-k8s",
    (string) (len=14) "externalLabels": (map[string]interface {}) (len=2) {
     (string) (len=7) "cluster": (string) (len=12) "my-cluster-2",
     (string) (len=7) "product": (string) (len=13) "api beep boop"
    },
    (string) (len=12) "ruleSelector": (map[string]interface {}) (len=1) {
     (string) (len=11) "matchLabels": (map[string]interface {}) (len=2) {
      (string) (len=10) "prometheus": (string) (len=3) "k8s",
      (string) (len=4) "role": (string) (len=11) "alert-rules"
     }
    },
    (string) (len=22) "probeNamespaceSelector": (map[string]interface {}) {
    },
    (string) (len=23) "additionalScrapeConfigs": (map[string]interface {}) (len=2) {
     (string) (len=3) "key": (string) (len=26) "prometheus-additional.yaml",
     (string) (len=4) "name": (string) (len=25) "additional-scrape-configs"
    },
    (string) (len=8) "alerting": (map[string]interface {}) (len=1) {
     (string) (len=13) "alertmanagers": ([]interface {}) (len=1 cap=1) {
      (map[string]interface {}) (len=3) {
       (string) (len=9) "namespace": (string) (len=10) "monitoring",
       (string) (len=4) "port": (string) (len=3) "web",
       (string) (len=4) "name": (string) (len=17) "alertmanager-main"
      }
     }
    },
    (string) (len=5) "image": (string) (len=37) "quay.io/prometheus/prometheus:v2.25.2",
    (string) (len=7) "version": (string) (len=7) "v2.25.2",
    (string) (len=22) "serviceMonitorSelector": (map[string]interface {}) {
    },
    (string) (len=8) "replicas": (*big.Float)(0xc000623dd0)(1)
   },
   (string) (len=10) "apiVersion": (string) (len=24) "monitoring.coreos.com/v1",
   (string) (len=4) "kind": (string) (len=10) "Prometheus",
   (string) (len=8) "metadata": (map[string]interface {}) (len=2) {
    (string) (len=9) "namespace": (string) (len=15) "test-operator-1",
    (string) (len=4) "name": (string) (len=6) "test-1"
   }
  }
 }
}
RAW provider 2021/04/03 23:32:14 Finished
RAW provider 2021/04/03 23:34:24 Starting up with command line: []string{".terraform/providers/registry.terraform.io/hashicorp/kubernetes-alpha/0.2.1/darwin_amd64/terraform-provider-kubernetes-alpha_v0.2.1_x5"}
RAW provider 2021/04/03 23:34:24 Finished
RAW provider 2021/04/03 23:34:25 Starting up with command line: []string{".terraform/providers/registry.terraform.io/hashicorp/kubernetes-alpha/0.2.1/darwin_amd64/terraform-provider-kubernetes-alpha_v0.2.1_x5"}
RAW provider 2021/04/03 23:34:25 Finished
RAW provider 2021/04/03 23:34:27 Starting up with command line: []string{".terraform/providers/registry.terraform.io/hashicorp/kubernetes-alpha/0.2.1/darwin_amd64/terraform-provider-kubernetes-alpha_v0.2.1_x5"}
RAW provider 2021/04/03 23:34:27 [Configure][ClientConfig] (rest.Config) &rest.Config{Host:"https://5BE469949E293A3A880C6FE683A7079F.gr7.us-east-1.eks.amazonaws.com", APIPath:"", ContentConfig:rest.ContentConfig{AcceptContentTypes:"", ContentType:"", GroupVersion:(*schema.GroupVersion)(nil), NegotiatedSerializer:runtime.NegotiatedSerializer(nil)}, Username:"", Password:"", BearerToken:"--- REDACTED ---", BearerTokenFile:"", Impersonate:rest.ImpersonationConfig{UserName:"", Groups:[]string(nil), Extra:map[string][]string(nil)}, AuthProvider:<nil>, AuthConfigPersister:rest.AuthProviderConfigPersister(nil), ExecProvider:<nil>, TLSClientConfig:rest.sanitizedTLSClientConfig{Insecure:false, ServerName:"", CertFile:"", KeyFile:"", CAFile:"", CertData:[]uint8(nil), KeyData:[]uint8(nil), CAData:[]uint8{0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x42, 0x45, 0x47, 0x49, 0x4e, 0x20, 0x43, 0x45, 0x52, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x45, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0xa, 0x4d, 0x49, 0x49, 0x43, 0x79, 0x44, 0x43, 0x43, 0x41, 0x62, 0x43, 0x67, 0x41, 0x77, 0x49, 0x42, 0x41, 0x67, 0x49, 0x42, 0x41, 0x44, 0x41, 0x4e, 0x42, 0x67, 0x6b, 0x71, 0x68, 0x6b, 0x69, 0x47, 0x39, 0x77, 0x30, 0x42, 0x41, 0x51, 0x73, 0x46, 0x41, 0x44, 0x41, 0x56, 0x4d, 0x52, 0x4d, 0x77, 0x45, 0x51, 0x59, 0x44, 0x56, 0x51, 0x51, 0x44, 0x45, 0x77, 0x70, 0x72, 0x64, 0x57, 0x4a, 0x6c, 0xa, 0x63, 0x6d, 0x35, 0x6c, 0x64, 0x47, 0x56, 0x7a, 0x4d, 0x42, 0x34, 0x58, 0x44, 0x54, 0x49, 0x77, 0x4d, 0x54, 0x41, 0x79, 0x4d, 0x54, 0x49, 0x78, 0x4e, 0x44, 0x63, 0x77, 0x4e, 0x46, 0x6f, 0x58, 0x44, 0x54, 0x4d, 0x77, 0x4d, 0x54, 0x41, 0x78, 0x4f, 0x54, 0x49, 0x78, 0x4e, 0x44, 0x63, 0x77, 0x4e, 0x46, 0x6f, 0x77, 0x46, 0x54, 0x45, 0x54, 0x4d, 0x42, 0x45, 0x47, 0x41, 0x31, 0x55, 0x45, 0xa, 0x41, 0x78, 0x4d, 0x4b, 0x61, 0x33, 0x56, 0x69, 0x5a, 0x58, 0x4a, 0x75, 0x5a, 0x58, 0x52, 0x6c, 0x63, 0x7a, 0x43, 0x43, 0x41, 0x53, 0x49, 0x77, 0x44, 0x51, 0x59, 0x4a, 0x4b, 0x6f, 0x5a, 0x49, 0x68, 0x76, 0x63, 0x4e, 0x41, 0x51, 0x45, 0x42, 0x42, 0x51, 0x41, 0x44, 0x67, 0x67, 0x45, 0x50, 0x41, 0x44, 0x43, 0x43, 0x41, 0x51, 0x6f, 0x43, 0x67, 0x67, 0x45, 0x42, 0x41, 0x4c, 0x42, 0x62, 0xa, 0x50, 0x46, 0x2b, 0x39, 0x30, 0x52, 0x6f, 0x67, 0x48, 0x58, 0x41, 0x79, 0x46, 0x56, 0x74, 0x41, 0x2b, 0x7a, 0x43, 0x46, 0x6d, 0x33, 0x56, 0x53, 0x31, 0x61, 0x59, 0x59, 0x79, 0x4c, 0x7a, 0x2f, 0x32, 0x51, 0x48, 0x76, 0x37, 0x4a, 0x65, 0x45, 0x48, 0x71, 0x49, 0x77, 0x66, 0x63, 0x75, 0x7a, 0x56, 0x71, 0x58, 0x38, 0x66, 0x4b, 0x70, 0x33, 0x68, 0x4c, 0x79, 0x79, 0x62, 0x6b, 0x2f, 0x64, 0xa, 0x55, 0x47, 0x49, 0x45, 0x41, 0x30, 0x75, 0x54, 0x6a, 0x4c, 0x67, 0x67, 0x71, 0x66, 0x66, 0x6f, 0x65, 0x6f, 0x31, 0x38, 0x7a, 0x35, 0x48, 0x4a, 0x6e, 0x73, 0x41, 0x6f, 0x6b, 0x43, 0x38, 0x64, 0x7a, 0x70, 0x5a, 0x43, 0x6b, 0x67, 0x31, 0x73, 0x78, 0x45, 0x79, 0x62, 0x2f, 0x2b, 0x39, 0x6d, 0x31, 0x69, 0x49, 0x67, 0x56, 0x33, 0x59, 0x39, 0x74, 0x48, 0x44, 0x45, 0x59, 0x4a, 0x6c, 0x37, 0xa, 0x56, 0x77, 0x51, 0x68, 0x70, 0x38, 0x48, 0x6e, 0x33, 0x46, 0x49, 0x2f, 0x4a, 0x63, 0x77, 0x44, 0x49, 0x6b, 0x55, 0x36, 0x45, 0x6a, 0x65, 0x46, 0x30, 0x71, 0x4c, 0x4b, 0x42, 0x75, 0x54, 0x31, 0x6e, 0x66, 0x45, 0x74, 0x6f, 0x68, 0x54, 0x4e, 0x37, 0x78, 0x70, 0x4e, 0x43, 0x76, 0x44, 0x61, 0x36, 0x44, 0x53, 0x32, 0x4c, 0x54, 0x57, 0x39, 0x6f, 0x6e, 0x74, 0x6d, 0x4b, 0x79, 0x45, 0x47, 0xa, 0x78, 0x6c, 0x73, 0x78, 0x74, 0x6b, 0x64, 0x47, 0x45, 0x37, 0x79, 0x55, 0x55, 0x67, 0x77, 0x52, 0x53, 0x72, 0x79, 0x6a, 0x41, 0x65, 0x76, 0x41, 0x79, 0x5a, 0x64, 0x37, 0x71, 0x45, 0x72, 0x67, 0x74, 0x41, 0x56, 0x6c, 0x35, 0x70, 0x44, 0x46, 0x48, 0x30, 0x74, 0x42, 0x48, 0x53, 0x74, 0x67, 0x6b, 0x41, 0x51, 0x59, 0x57, 0x48, 0x77, 0x78, 0x62, 0x62, 0x79, 0x70, 0x59, 0x37, 0x33, 0x4c, 0xa, 0x5a, 0x43, 0x51, 0x73, 0x2b, 0x4c, 0x35, 0x44, 0x6d, 0x67, 0x2f, 0x43, 0x6e, 0x57, 0x31, 0x75, 0x62, 0x47, 0x46, 0x32, 0x59, 0x75, 0x47, 0x33, 0x79, 0x46, 0x59, 0x4b, 0x31, 0x6c, 0x32, 0x4e, 0x46, 0x78, 0x2f, 0x74, 0x67, 0x48, 0x71, 0x4e, 0x78, 0x56, 0x48, 0x6a, 0x31, 0x53, 0x42, 0x5a, 0x32, 0x41, 0x54, 0x76, 0x61, 0x4b, 0x47, 0x6f, 0x6c, 0x56, 0x35, 0x53, 0x69, 0x57, 0x33, 0x49, 0xa, 0x68, 0x45, 0x46, 0x46, 0x2b, 0x77, 0x4b, 0x50, 0x73, 0x63, 0x46, 0x59, 0x4f, 0x49, 0x76, 0x53, 0x4d, 0x44, 0x38, 0x43, 0x41, 0x77, 0x45, 0x41, 0x41, 0x61, 0x4d, 0x6a, 0x4d, 0x43, 0x45, 0x77, 0x44, 0x67, 0x59, 0x44, 0x56, 0x52, 0x30, 0x50, 0x41, 0x51, 0x48, 0x2f, 0x42, 0x41, 0x51, 0x44, 0x41, 0x67, 0x4b, 0x6b, 0x4d, 0x41, 0x38, 0x47, 0x41, 0x31, 0x55, 0x64, 0x45, 0x77, 0x45, 0x42, 0xa, 0x2f, 0x77, 0x51, 0x46, 0x4d, 0x41, 0x4d, 0x42, 0x41, 0x66, 0x38, 0x77, 0x44, 0x51, 0x59, 0x4a, 0x4b, 0x6f, 0x5a, 0x49, 0x68, 0x76, 0x63, 0x4e, 0x41, 0x51, 0x45, 0x4c, 0x42, 0x51, 0x41, 0x44, 0x67, 0x67, 0x45, 0x42, 0x41, 0x46, 0x2b, 0x59, 0x44, 0x46, 0x31, 0x4e, 0x4b, 0x65, 0x6f, 0x41, 0x38, 0x49, 0x72, 0x65, 0x4f, 0x78, 0x4d, 0x2f, 0x4f, 0x45, 0x59, 0x70, 0x54, 0x44, 0x6a, 0x76, 0xa, 0x50, 0x64, 0x55, 0x69, 0x31, 0x61, 0x37, 0x79, 0x75, 0x74, 0x2b, 0x30, 0x39, 0x37, 0x70, 0x36, 0x6f, 0x2f, 0x32, 0x41, 0x53, 0x35, 0x56, 0x52, 0x6a, 0x70, 0x32, 0x57, 0x55, 0x7a, 0x72, 0x4b, 0x79, 0x73, 0x57, 0x75, 0x65, 0x74, 0x55, 0x45, 0x2b, 0x72, 0x6e, 0x41, 0x70, 0x33, 0x39, 0x37, 0x2f, 0x6a, 0x78, 0x75, 0x73, 0x54, 0x78, 0x2f, 0x50, 0x76, 0x58, 0x57, 0x44, 0x34, 0x75, 0x61, 0xa, 0x51, 0x32, 0x7a, 0x49, 0x38, 0x44, 0x59, 0x62, 0x6b, 0x64, 0x75, 0x63, 0x4f, 0x47, 0x67, 0x4a, 0x31, 0x78, 0x61, 0x4e, 0x70, 0x6b, 0x75, 0x62, 0x48, 0x33, 0x64, 0x61, 0x48, 0x59, 0x5a, 0x2b, 0x48, 0x38, 0x71, 0x42, 0x70, 0x2f, 0x74, 0x50, 0x41, 0x42, 0x57, 0x73, 0x32, 0x35, 0x66, 0x78, 0x78, 0x31, 0x53, 0x69, 0x75, 0x38, 0x4e, 0x38, 0x4b, 0x59, 0x4a, 0x2b, 0x32, 0x49, 0x68, 0x75, 0xa, 0x61, 0x64, 0x42, 0x71, 0x61, 0x73, 0x56, 0x4a, 0x6c, 0x79, 0x55, 0x4d, 0x79, 0x50, 0x49, 0x7a, 0x4b, 0x46, 0x36, 0x6e, 0x4c, 0x54, 0x57, 0x66, 0x59, 0x5a, 0x4f, 0x31, 0x76, 0x30, 0x32, 0x36, 0x4b, 0x36, 0x6f, 0x31, 0x63, 0x39, 0x78, 0x63, 0x74, 0x69, 0x77, 0x54, 0x6a, 0x54, 0x59, 0x43, 0x34, 0x7a, 0x38, 0x65, 0x4b, 0x69, 0x41, 0x4c, 0x49, 0x36, 0x33, 0x33, 0x34, 0x74, 0x4e, 0x51, 0xa, 0x33, 0x32, 0x5a, 0x77, 0x4f, 0x75, 0x73, 0x58, 0x6e, 0x4a, 0x33, 0x6b, 0x34, 0x75, 0x42, 0x57, 0x70, 0x79, 0x31, 0x69, 0x39, 0x6f, 0x4e, 0x6b, 0x75, 0x75, 0x48, 0x45, 0x64, 0x69, 0x48, 0x37, 0x36, 0x30, 0x35, 0x4a, 0x31, 0x66, 0x77, 0x57, 0x53, 0x30, 0x63, 0x65, 0x35, 0x67, 0x49, 0x50, 0x35, 0x6a, 0x6e, 0x4e, 0x73, 0x4d, 0x64, 0x61, 0x44, 0x49, 0x2f, 0x39, 0x54, 0x4a, 0x4e, 0x6e, 0xa, 0x70, 0x67, 0x2b, 0x41, 0x58, 0x55, 0x4a, 0x78, 0x46, 0x30, 0x4f, 0x77, 0x50, 0x42, 0x63, 0x45, 0x37, 0x4a, 0x41, 0x43, 0x64, 0x52, 0x6d, 0x58, 0x73, 0x2b, 0x33, 0x78, 0x6c, 0x54, 0x59, 0x4a, 0x76, 0x70, 0x53, 0x75, 0x32, 0x4b, 0x65, 0x6c, 0x4c, 0x55, 0x6a, 0x52, 0x34, 0x5a, 0x4c, 0x72, 0x5a, 0x34, 0x78, 0x39, 0x4c, 0x45, 0x36, 0x54, 0x65, 0x77, 0x34, 0x3d, 0xa, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x45, 0x4e, 0x44, 0x20, 0x43, 0x45, 0x52, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x45, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0xa}, NextProtos:[]string(nil)}, UserAgent:"", DisableCompression:false, Transport:http.RoundTripper(nil), WrapTransport:(transport.WrapperFunc)(nil), QPS:0, Burst:0, RateLimiter:flowcontrol.RateLimiter(nil), Timeout:0, Dial:(func(context.Context, string, string) (net.Conn, error))(nil)}

RAW provider 2021/04/03 23:34:32 Finished
RAW provider 2021/04/03 23:34:32 Starting up with command line: []string{".terraform/providers/registry.terraform.io/hashicorp/kubernetes-alpha/0.2.1/darwin_amd64/terraform-provider-kubernetes-alpha_v0.2.1_x5"}
RAW provider 2021/04/03 23:34:33 [Configure][ClientConfig] (rest.Config) &rest.Config{Host:"https://5BE469949E293A3A880C6FE683A7079F.gr7.us-east-1.eks.amazonaws.com", APIPath:"", ContentConfig:rest.ContentConfig{AcceptContentTypes:"", ContentType:"", GroupVersion:(*schema.GroupVersion)(nil), NegotiatedSerializer:runtime.NegotiatedSerializer(nil)}, Username:"", Password:"", BearerToken:"--- REDACTED ---", BearerTokenFile:"", Impersonate:rest.ImpersonationConfig{UserName:"", Groups:[]string(nil), Extra:map[string][]string(nil)}, AuthProvider:<nil>, AuthConfigPersister:rest.AuthProviderConfigPersister(nil), ExecProvider:<nil>, TLSClientConfig:rest.sanitizedTLSClientConfig{Insecure:false, ServerName:"", CertFile:"", KeyFile:"", CAFile:"", CertData:[]uint8(nil), KeyData:[]uint8(nil), CAData:[]uint8{0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x42, 0x45, 0x47, 0x49, 0x4e, 0x20, 0x43, 0x45, 0x52, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x45, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0xa, 0x4d, 0x49, 0x49, 0x43, 0x79, 0x44, 0x43, 0x43, 0x41, 0x62, 0x43, 0x67, 0x41, 0x77, 0x49, 0x42, 0x41, 0x67, 0x49, 0x42, 0x41, 0x44, 0x41, 0x4e, 0x42, 0x67, 0x6b, 0x71, 0x68, 0x6b, 0x69, 0x47, 0x39, 0x77, 0x30, 0x42, 0x41, 0x51, 0x73, 0x46, 0x41, 0x44, 0x41, 0x56, 0x4d, 0x52, 0x4d, 0x77, 0x45, 0x51, 0x59, 0x44, 0x56, 0x51, 0x51, 0x44, 0x45, 0x77, 0x70, 0x72, 0x64, 0x57, 0x4a, 0x6c, 0xa, 0x63, 0x6d, 0x35, 0x6c, 0x64, 0x47, 0x56, 0x7a, 0x4d, 0x42, 0x34, 0x58, 0x44, 0x54, 0x49, 0x77, 0x4d, 0x54, 0x41, 0x79, 0x4d, 0x54, 0x49, 0x78, 0x4e, 0x44, 0x63, 0x77, 0x4e, 0x46, 0x6f, 0x58, 0x44, 0x54, 0x4d, 0x77, 0x4d, 0x54, 0x41, 0x78, 0x4f, 0x54, 0x49, 0x78, 0x4e, 0x44, 0x63, 0x77, 0x4e, 0x46, 0x6f, 0x77, 0x46, 0x54, 0x45, 0x54, 0x4d, 0x42, 0x45, 0x47, 0x41, 0x31, 0x55, 0x45, 0xa, 0x41, 0x78, 0x4d, 0x4b, 0x61, 0x33, 0x56, 0x69, 0x5a, 0x58, 0x4a, 0x75, 0x5a, 0x58, 0x52, 0x6c, 0x63, 0x7a, 0x43, 0x43, 0x41, 0x53, 0x49, 0x77, 0x44, 0x51, 0x59, 0x4a, 0x4b, 0x6f, 0x5a, 0x49, 0x68, 0x76, 0x63, 0x4e, 0x41, 0x51, 0x45, 0x42, 0x42, 0x51, 0x41, 0x44, 0x67, 0x67, 0x45, 0x50, 0x41, 0x44, 0x43, 0x43, 0x41, 0x51, 0x6f, 0x43, 0x67, 0x67, 0x45, 0x42, 0x41, 0x4c, 0x42, 0x62, 0xa, 0x50, 0x46, 0x2b, 0x39, 0x30, 0x52, 0x6f, 0x67, 0x48, 0x58, 0x41, 0x79, 0x46, 0x56, 0x74, 0x41, 0x2b, 0x7a, 0x43, 0x46, 0x6d, 0x33, 0x56, 0x53, 0x31, 0x61, 0x59, 0x59, 0x79, 0x4c, 0x7a, 0x2f, 0x32, 0x51, 0x48, 0x76, 0x37, 0x4a, 0x65, 0x45, 0x48, 0x71, 0x49, 0x77, 0x66, 0x63, 0x75, 0x7a, 0x56, 0x71, 0x58, 0x38, 0x66, 0x4b, 0x70, 0x33, 0x68, 0x4c, 0x79, 0x79, 0x62, 0x6b, 0x2f, 0x64, 0xa, 0x55, 0x47, 0x49, 0x45, 0x41, 0x30, 0x75, 0x54, 0x6a, 0x4c, 0x67, 0x67, 0x71, 0x66, 0x66, 0x6f, 0x65, 0x6f, 0x31, 0x38, 0x7a, 0x35, 0x48, 0x4a, 0x6e, 0x73, 0x41, 0x6f, 0x6b, 0x43, 0x38, 0x64, 0x7a, 0x70, 0x5a, 0x43, 0x6b, 0x67, 0x31, 0x73, 0x78, 0x45, 0x79, 0x62, 0x2f, 0x2b, 0x39, 0x6d, 0x31, 0x69, 0x49, 0x67, 0x56, 0x33, 0x59, 0x39, 0x74, 0x48, 0x44, 0x45, 0x59, 0x4a, 0x6c, 0x37, 0xa, 0x56, 0x77, 0x51, 0x68, 0x70, 0x38, 0x48, 0x6e, 0x33, 0x46, 0x49, 0x2f, 0x4a, 0x63, 0x77, 0x44, 0x49, 0x6b, 0x55, 0x36, 0x45, 0x6a, 0x65, 0x46, 0x30, 0x71, 0x4c, 0x4b, 0x42, 0x75, 0x54, 0x31, 0x6e, 0x66, 0x45, 0x74, 0x6f, 0x68, 0x54, 0x4e, 0x37, 0x78, 0x70, 0x4e, 0x43, 0x76, 0x44, 0x61, 0x36, 0x44, 0x53, 0x32, 0x4c, 0x54, 0x57, 0x39, 0x6f, 0x6e, 0x74, 0x6d, 0x4b, 0x79, 0x45, 0x47, 0xa, 0x78, 0x6c, 0x73, 0x78, 0x74, 0x6b, 0x64, 0x47, 0x45, 0x37, 0x79, 0x55, 0x55, 0x67, 0x77, 0x52, 0x53, 0x72, 0x79, 0x6a, 0x41, 0x65, 0x76, 0x41, 0x79, 0x5a, 0x64, 0x37, 0x71, 0x45, 0x72, 0x67, 0x74, 0x41, 0x56, 0x6c, 0x35, 0x70, 0x44, 0x46, 0x48, 0x30, 0x74, 0x42, 0x48, 0x53, 0x74, 0x67, 0x6b, 0x41, 0x51, 0x59, 0x57, 0x48, 0x77, 0x78, 0x62, 0x62, 0x79, 0x70, 0x59, 0x37, 0x33, 0x4c, 0xa, 0x5a, 0x43, 0x51, 0x73, 0x2b, 0x4c, 0x35, 0x44, 0x6d, 0x67, 0x2f, 0x43, 0x6e, 0x57, 0x31, 0x75, 0x62, 0x47, 0x46, 0x32, 0x59, 0x75, 0x47, 0x33, 0x79, 0x46, 0x59, 0x4b, 0x31, 0x6c, 0x32, 0x4e, 0x46, 0x78, 0x2f, 0x74, 0x67, 0x48, 0x71, 0x4e, 0x78, 0x56, 0x48, 0x6a, 0x31, 0x53, 0x42, 0x5a, 0x32, 0x41, 0x54, 0x76, 0x61, 0x4b, 0x47, 0x6f, 0x6c, 0x56, 0x35, 0x53, 0x69, 0x57, 0x33, 0x49, 0xa, 0x68, 0x45, 0x46, 0x46, 0x2b, 0x77, 0x4b, 0x50, 0x73, 0x63, 0x46, 0x59, 0x4f, 0x49, 0x76, 0x53, 0x4d, 0x44, 0x38, 0x43, 0x41, 0x77, 0x45, 0x41, 0x41, 0x61, 0x4d, 0x6a, 0x4d, 0x43, 0x45, 0x77, 0x44, 0x67, 0x59, 0x44, 0x56, 0x52, 0x30, 0x50, 0x41, 0x51, 0x48, 0x2f, 0x42, 0x41, 0x51, 0x44, 0x41, 0x67, 0x4b, 0x6b, 0x4d, 0x41, 0x38, 0x47, 0x41, 0x31, 0x55, 0x64, 0x45, 0x77, 0x45, 0x42, 0xa, 0x2f, 0x77, 0x51, 0x46, 0x4d, 0x41, 0x4d, 0x42, 0x41, 0x66, 0x38, 0x77, 0x44, 0x51, 0x59, 0x4a, 0x4b, 0x6f, 0x5a, 0x49, 0x68, 0x76, 0x63, 0x4e, 0x41, 0x51, 0x45, 0x4c, 0x42, 0x51, 0x41, 0x44, 0x67, 0x67, 0x45, 0x42, 0x41, 0x46, 0x2b, 0x59, 0x44, 0x46, 0x31, 0x4e, 0x4b, 0x65, 0x6f, 0x41, 0x38, 0x49, 0x72, 0x65, 0x4f, 0x78, 0x4d, 0x2f, 0x4f, 0x45, 0x59, 0x70, 0x54, 0x44, 0x6a, 0x76, 0xa, 0x50, 0x64, 0x55, 0x69, 0x31, 0x61, 0x37, 0x79, 0x75, 0x74, 0x2b, 0x30, 0x39, 0x37, 0x70, 0x36, 0x6f, 0x2f, 0x32, 0x41, 0x53, 0x35, 0x56, 0x52, 0x6a, 0x70, 0x32, 0x57, 0x55, 0x7a, 0x72, 0x4b, 0x79, 0x73, 0x57, 0x75, 0x65, 0x74, 0x55, 0x45, 0x2b, 0x72, 0x6e, 0x41, 0x70, 0x33, 0x39, 0x37, 0x2f, 0x6a, 0x78, 0x75, 0x73, 0x54, 0x78, 0x2f, 0x50, 0x76, 0x58, 0x57, 0x44, 0x34, 0x75, 0x61, 0xa, 0x51, 0x32, 0x7a, 0x49, 0x38, 0x44, 0x59, 0x62, 0x6b, 0x64, 0x75, 0x63, 0x4f, 0x47, 0x67, 0x4a, 0x31, 0x78, 0x61, 0x4e, 0x70, 0x6b, 0x75, 0x62, 0x48, 0x33, 0x64, 0x61, 0x48, 0x59, 0x5a, 0x2b, 0x48, 0x38, 0x71, 0x42, 0x70, 0x2f, 0x74, 0x50, 0x41, 0x42, 0x57, 0x73, 0x32, 0x35, 0x66, 0x78, 0x78, 0x31, 0x53, 0x69, 0x75, 0x38, 0x4e, 0x38, 0x4b, 0x59, 0x4a, 0x2b, 0x32, 0x49, 0x68, 0x75, 0xa, 0x61, 0x64, 0x42, 0x71, 0x61, 0x73, 0x56, 0x4a, 0x6c, 0x79, 0x55, 0x4d, 0x79, 0x50, 0x49, 0x7a, 0x4b, 0x46, 0x36, 0x6e, 0x4c, 0x54, 0x57, 0x66, 0x59, 0x5a, 0x4f, 0x31, 0x76, 0x30, 0x32, 0x36, 0x4b, 0x36, 0x6f, 0x31, 0x63, 0x39, 0x78, 0x63, 0x74, 0x69, 0x77, 0x54, 0x6a, 0x54, 0x59, 0x43, 0x34, 0x7a, 0x38, 0x65, 0x4b, 0x69, 0x41, 0x4c, 0x49, 0x36, 0x33, 0x33, 0x34, 0x74, 0x4e, 0x51, 0xa, 0x33, 0x32, 0x5a, 0x77, 0x4f, 0x75, 0x73, 0x58, 0x6e, 0x4a, 0x33, 0x6b, 0x34, 0x75, 0x42, 0x57, 0x70, 0x79, 0x31, 0x69, 0x39, 0x6f, 0x4e, 0x6b, 0x75, 0x75, 0x48, 0x45, 0x64, 0x69, 0x48, 0x37, 0x36, 0x30, 0x35, 0x4a, 0x31, 0x66, 0x77, 0x57, 0x53, 0x30, 0x63, 0x65, 0x35, 0x67, 0x49, 0x50, 0x35, 0x6a, 0x6e, 0x4e, 0x73, 0x4d, 0x64, 0x61, 0x44, 0x49, 0x2f, 0x39, 0x54, 0x4a, 0x4e, 0x6e, 0xa, 0x70, 0x67, 0x2b, 0x41, 0x58, 0x55, 0x4a, 0x78, 0x46, 0x30, 0x4f, 0x77, 0x50, 0x42, 0x63, 0x45, 0x37, 0x4a, 0x41, 0x43, 0x64, 0x52, 0x6d, 0x58, 0x73, 0x2b, 0x33, 0x78, 0x6c, 0x54, 0x59, 0x4a, 0x76, 0x70, 0x53, 0x75, 0x32, 0x4b, 0x65, 0x6c, 0x4c, 0x55, 0x6a, 0x52, 0x34, 0x5a, 0x4c, 0x72, 0x5a, 0x34, 0x78, 0x39, 0x4c, 0x45, 0x36, 0x54, 0x65, 0x77, 0x34, 0x3d, 0xa, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x45, 0x4e, 0x44, 0x20, 0x43, 0x45, 0x52, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x45, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0xa}, NextProtos:[]string(nil)}, UserAgent:"", DisableCompression:false, Transport:http.RoundTripper(nil), WrapTransport:(transport.WrapperFunc)(nil), QPS:0, Burst:0, RateLimiter:flowcontrol.RateLimiter(nil), Timeout:0, Dial:(func(context.Context, string, string) (net.Conn, error))(nil)}

RAW provider 2021/04/03 23:34:34 [ApplyResourceChange][Request][PlannedState]
(cty.Value) {
 ty: (cty.Type) {
  typeImpl: (cty.typeObject) {
   typeImplSigil: (cty.typeImplSigil) {
   },
   AttrTypes: (map[string]cty.Type) (len=3) {
    (string) (len=8) "manifest": (cty.Type) {
     typeImpl: (cty.typeObject) {
      typeImplSigil: (cty.typeImplSigil) {
      },
      AttrTypes: (map[string]cty.Type) (len=4) {
       (string) (len=10) "apiVersion": (cty.Type) {
        typeImpl: (cty.primitiveType) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         Kind: (cty.primitiveTypeKind) 83
        }
       },
       (string) (len=4) "kind": (cty.Type) {
        typeImpl: (cty.primitiveType) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         Kind: (cty.primitiveTypeKind) 83
        }
       },
       (string) (len=8) "metadata": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) (len=2) {
          (string) (len=9) "namespace": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=4) "name": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          }
         }
        }
       },
       (string) (len=4) "spec": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) (len=21) {
          (string) (len=8) "replicas": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 78
           }
          },
          (string) (len=9) "namespace": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=18) "serviceAccountName": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=4) "name": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=18) "podMonitorSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=27) "podMonitorNamespaceSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=12) "nodeSelector": (cty.Type) {
           typeImpl: (cty.typeMap) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            ElementTypeT: (cty.Type) {
             typeImpl: (cty.primitiveType) {
              typeImplSigil: (cty.typeImplSigil) {
              },
              Kind: (cty.primitiveTypeKind) 83
             }
            }
           }
          },
          (string) (len=23) "additionalScrapeConfigs": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=2) {
             (string) (len=3) "key": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             },
             (string) (len=4) "name": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             }
            }
           }
          },
          (string) (len=6) "thanos": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=3) {
             (string) (len=19) "objectStorageConfig": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=3) "key": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=4) "name": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             },
             (string) (len=7) "version": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             },
             (string) (len=9) "baseImage": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             }
            }
           }
          },
          (string) (len=22) "probeNamespaceSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=12) "ruleSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=1) {
             (string) (len=11) "matchLabels": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=10) "prometheus": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=4) "role": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=7) "version": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=13) "probeSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=14) "externalLabels": (cty.Type) {
           typeImpl: (cty.typeMap) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            ElementTypeT: (cty.Type) {
             typeImpl: (cty.primitiveType) {
              typeImplSigil: (cty.typeImplSigil) {
              },
              Kind: (cty.primitiveTypeKind) 83
             }
            }
           }
          },
          (string) (len=8) "alerting": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=1) {
             (string) (len=13) "alertmanagers": (cty.Type) {
              typeImpl: (cty.typeTuple) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               ElemTypes: ([]cty.Type) (len=1 cap=1) {
                (cty.Type) {
                 typeImpl: (cty.typeObject) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  AttrTypes: (map[string]cty.Type) (len=3) {
                   (string) (len=9) "namespace": (cty.Type) {
                    typeImpl: (cty.primitiveType) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     Kind: (cty.primitiveTypeKind) 83
                    }
                   },
                   (string) (len=4) "port": (cty.Type) {
                    typeImpl: (cty.primitiveType) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     Kind: (cty.primitiveTypeKind) 83
                    }
                   },
                   (string) (len=4) "name": (cty.Type) {
                    typeImpl: (cty.primitiveType) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     Kind: (cty.primitiveTypeKind) 83
                    }
                   }
                  }
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=22) "serviceMonitorSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=7) "storage": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=1) {
             (string) (len=19) "volumeClaimTemplate": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=1) {
                (string) (len=4) "spec": (cty.Type) {
                 typeImpl: (cty.typeObject) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  AttrTypes: (map[string]cty.Type) (len=2) {
                   (string) (len=9) "resources": (cty.Type) {
                    typeImpl: (cty.typeObject) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     AttrTypes: (map[string]cty.Type) (len=1) {
                      (string) (len=8) "requests": (cty.Type) {
                       typeImpl: (cty.typeObject) {
                        typeImplSigil: (cty.typeImplSigil) {
                        },
                        AttrTypes: (map[string]cty.Type) (len=1) {
                         (string) (len=7) "storage": (cty.Type) {
                          typeImpl: (cty.primitiveType) {
                           typeImplSigil: (cty.typeImplSigil) {
                           },
                           Kind: (cty.primitiveTypeKind) 83
                          }
                         }
                        }
                       }
                      }
                     }
                    }
                   },
                   (string) (len=16) "storageClassName": (cty.Type) {
                    typeImpl: (cty.primitiveType) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     Kind: (cty.primitiveTypeKind) 83
                    }
                   }
                  }
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=9) "resources": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=2) {
             (string) (len=8) "requests": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=6) "memory": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=3) "cpu": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             },
             (string) (len=6) "limits": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=3) "cpu": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=6) "memory": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=15) "securityContext": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=3) {
             (string) (len=7) "fsGroup": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 78
              }
             },
             (string) (len=12) "runAsNonRoot": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 66
              }
             },
             (string) (len=9) "runAsUser": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 78
              }
             }
            }
           }
          },
          (string) (len=5) "image": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=31) "serviceMonitorNamespaceSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          }
         }
        }
       }
      }
     }
    },
    (string) (len=6) "object": (cty.Type) {
     typeImpl: (cty.typeObject) {
      typeImplSigil: (cty.typeImplSigil) {
      },
      AttrTypes: (map[string]cty.Type) (len=4) {
       (string) (len=8) "metadata": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) (len=2) {
          (string) (len=4) "name": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=9) "namespace": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          }
         }
        }
       },
       (string) (len=4) "spec": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) (len=19) {
          (string) (len=22) "probeNamespaceSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=8) "replicas": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 78
           }
          },
          (string) (len=6) "thanos": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=3) {
             (string) (len=9) "baseImage": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             },
             (string) (len=19) "objectStorageConfig": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=3) "key": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=4) "name": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             },
             (string) (len=7) "version": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             }
            }
           }
          },
          (string) (len=23) "additionalScrapeConfigs": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=2) {
             (string) (len=4) "name": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             },
             (string) (len=3) "key": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             }
            }
           }
          },
          (string) (len=7) "storage": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=1) {
             (string) (len=19) "volumeClaimTemplate": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=1) {
                (string) (len=4) "spec": (cty.Type) {
                 typeImpl: (cty.typeObject) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  AttrTypes: (map[string]cty.Type) (len=2) {
                   (string) (len=9) "resources": (cty.Type) {
                    typeImpl: (cty.typeObject) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     AttrTypes: (map[string]cty.Type) (len=1) {
                      (string) (len=8) "requests": (cty.Type) {
                       typeImpl: (cty.typeObject) {
                        typeImplSigil: (cty.typeImplSigil) {
                        },
                        AttrTypes: (map[string]cty.Type) (len=1) {
                         (string) (len=7) "storage": (cty.Type) {
                          typeImpl: (cty.primitiveType) {
                           typeImplSigil: (cty.typeImplSigil) {
                           },
                           Kind: (cty.primitiveTypeKind) 83
                          }
                         }
                        }
                       }
                      }
                     }
                    }
                   },
                   (string) (len=16) "storageClassName": (cty.Type) {
                    typeImpl: (cty.primitiveType) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     Kind: (cty.primitiveTypeKind) 83
                    }
                   }
                  }
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=15) "securityContext": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=3) {
             (string) (len=7) "fsGroup": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 78
              }
             },
             (string) (len=12) "runAsNonRoot": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 66
              }
             },
             (string) (len=9) "runAsUser": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 78
              }
             }
            }
           }
          },
          (string) (len=12) "ruleSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=1) {
             (string) (len=11) "matchLabels": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=10) "prometheus": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=4) "role": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=31) "serviceMonitorNamespaceSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=9) "resources": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=2) {
             (string) (len=8) "requests": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=3) "cpu": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=6) "memory": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             },
             (string) (len=6) "limits": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=6) "memory": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=3) "cpu": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=12) "nodeSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=1) {
             (string) (len=4) "role": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             }
            }
           }
          },
          (string) (len=8) "alerting": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=1) {
             (string) (len=13) "alertmanagers": (cty.Type) {
              typeImpl: (cty.typeTuple) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               ElemTypes: ([]cty.Type) (len=1 cap=1) {
                (cty.Type) {
                 typeImpl: (cty.typeObject) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  AttrTypes: (map[string]cty.Type) (len=3) {
                   (string) (len=4) "port": (cty.Type) {
                    typeImpl: (cty.primitiveType) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     Kind: (cty.primitiveTypeKind) 83
                    }
                   },
                   (string) (len=4) "name": (cty.Type) {
                    typeImpl: (cty.primitiveType) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     Kind: (cty.primitiveTypeKind) 83
                    }
                   },
                   (string) (len=9) "namespace": (cty.Type) {
                    typeImpl: (cty.primitiveType) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     Kind: (cty.primitiveTypeKind) 83
                    }
                   }
                  }
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=7) "version": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=14) "externalLabels": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=2) {
             (string) (len=7) "cluster": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             },
             (string) (len=7) "product": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             }
            }
           }
          },
          (string) (len=18) "serviceAccountName": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=13) "probeSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=18) "podMonitorSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=5) "image": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=22) "serviceMonitorSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=27) "podMonitorNamespaceSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          }
         }
        }
       },
       (string) (len=10) "apiVersion": (cty.Type) {
        typeImpl: (cty.primitiveType) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         Kind: (cty.primitiveTypeKind) 83
        }
       },
       (string) (len=4) "kind": (cty.Type) {
        typeImpl: (cty.primitiveType) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         Kind: (cty.primitiveTypeKind) 83
        }
       }
      }
     }
    },
    (string) (len=8) "wait_for": (cty.Type) {
     typeImpl: (cty.typeObject) {
      typeImplSigil: (cty.typeImplSigil) {
      },
      AttrTypes: (map[string]cty.Type) (len=1) {
       (string) (len=6) "fields": (cty.Type) {
        typeImpl: (cty.typeMap) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         ElementTypeT: (cty.Type) {
          typeImpl: (cty.primitiveType) {
           typeImplSigil: (cty.typeImplSigil) {
           },
           Kind: (cty.primitiveTypeKind) 83
          }
         }
        }
       }
      }
     }
    }
   }
  }
 },
 v: (map[string]interface {}) (len=3) {
  (string) (len=8) "manifest": (map[string]interface {}) (len=4) {
   (string) (len=10) "apiVersion": (string) (len=24) "monitoring.coreos.com/v1",
   (string) (len=4) "kind": (string) (len=10) "Prometheus",
   (string) (len=8) "metadata": (map[string]interface {}) (len=2) {
    (string) (len=9) "namespace": (string) (len=15) "test-operator-1",
    (string) (len=4) "name": (string) (len=6) "test-1"
   },
   (string) (len=4) "spec": (map[string]interface {}) (len=21) {
    (string) (len=23) "additionalScrapeConfigs": (map[string]interface {}) (len=2) {
     (string) (len=3) "key": (string) (len=26) "prometheus-additional.yaml",
     (string) (len=4) "name": (string) (len=25) "additional-scrape-configs"
    },
    (string) (len=4) "name": (string) (len=6) "test-1",
    (string) (len=5) "image": (string) (len=37) "quay.io/prometheus/prometheus:v2.25.2",
    (string) (len=18) "podMonitorSelector": (map[string]interface {}) {
    },
    (string) (len=12) "ruleSelector": (map[string]interface {}) (len=1) {
     (string) (len=11) "matchLabels": (map[string]interface {}) (len=2) {
      (string) (len=10) "prometheus": (string) (len=3) "k8s",
      (string) (len=4) "role": (string) (len=11) "alert-rules"
     }
    },
    (string) (len=22) "serviceMonitorSelector": (map[string]interface {}) {
    },
    (string) (len=27) "podMonitorNamespaceSelector": (map[string]interface {}) {
    },
    (string) (len=15) "securityContext": (map[string]interface {}) (len=3) {
     (string) (len=7) "fsGroup": (*big.Float)(0xc0005b8150)(2000),
     (string) (len=12) "runAsNonRoot": (bool) true,
     (string) (len=9) "runAsUser": (*big.Float)(0xc0005b8180)(1000)
    },
    (string) (len=8) "alerting": (map[string]interface {}) (len=1) {
     (string) (len=13) "alertmanagers": ([]interface {}) (len=1 cap=1) {
      (map[string]interface {}) (len=3) {
       (string) (len=4) "port": (string) (len=3) "web",
       (string) (len=4) "name": (string) (len=17) "alertmanager-main",
       (string) (len=9) "namespace": (string) (len=10) "monitoring"
      }
     }
    },
    (string) (len=13) "probeSelector": (map[string]interface {}) {
    },
    (string) (len=8) "replicas": (*big.Float)(0xc0004d1e60)(1),
    (string) (len=9) "namespace": (string) (len=15) "test-operator-1",
    (string) (len=12) "nodeSelector": (map[string]interface {}) (len=1) {
     (string) (len=4) "role": (string) (len=8) "services"
    },
    (string) (len=31) "serviceMonitorNamespaceSelector": (map[string]interface {}) {
    },
    (string) (len=14) "externalLabels": (map[string]interface {}) (len=2) {
     (string) (len=7) "cluster": (string) (len=12) "my-cluster-2",
     (string) (len=7) "product": (string) (len=13) "api beep boop"
    },
    (string) (len=7) "storage": (map[string]interface {}) (len=1) {
     (string) (len=19) "volumeClaimTemplate": (map[string]interface {}) (len=1) {
      (string) (len=4) "spec": (map[string]interface {}) (len=2) {
       (string) (len=9) "resources": (map[string]interface {}) (len=1) {
        (string) (len=8) "requests": (map[string]interface {}) (len=1) {
         (string) (len=7) "storage": (string) (len=4) "10Gi"
        }
       },
       (string) (len=16) "storageClassName": (string) (len=3) "gp2"
      }
     }
    },
    (string) (len=9) "resources": (map[string]interface {}) (len=2) {
     (string) (len=6) "limits": (map[string]interface {}) (len=2) {
      (string) (len=3) "cpu": (string) (len=4) "250m",
      (string) (len=6) "memory": (string) (len=5) "512Mi"
     },
     (string) (len=8) "requests": (map[string]interface {}) (len=2) {
      (string) (len=6) "memory": (string) (len=5) "200Mi",
      (string) (len=3) "cpu": (string) (len=4) "200m"
     }
    },
    (string) (len=6) "thanos": (map[string]interface {}) (len=3) {
     (string) (len=7) "version": (string) (len=7) "v0.16.0",
     (string) (len=9) "baseImage": (string) (len=21) "quay.io/thanos/thanos",
     (string) (len=19) "objectStorageConfig": (map[string]interface {}) (len=2) {
      (string) (len=4) "name": (string) (len=22) "thanos-objstore-config",
      (string) (len=3) "key": (string) (len=11) "thanos.yaml"
     }
    },
    (string) (len=22) "probeNamespaceSelector": (map[string]interface {}) {
    },
    (string) (len=18) "serviceAccountName": (string) (len=14) "prometheus-k8s",
    (string) (len=7) "version": (string) (len=7) "v2.25.2"
   }
  },
  (string) (len=6) "object": (map[string]interface {}) (len=4) {
   (string) (len=10) "apiVersion": (string) (len=24) "monitoring.coreos.com/v1",
   (string) (len=4) "kind": (string) (len=10) "Prometheus",
   (string) (len=8) "metadata": (map[string]interface {}) (len=2) {
    (string) (len=9) "namespace": (string) (len=15) "test-operator-1",
    (string) (len=4) "name": (string) (len=6) "test-1"
   },
   (string) (len=4) "spec": (map[string]interface {}) (len=19) {
    (string) (len=14) "externalLabels": (map[string]interface {}) (len=2) {
     (string) (len=7) "cluster": (string) (len=12) "my-cluster-2",
     (string) (len=7) "product": (string) (len=13) "api beep boop"
    },
    (string) (len=9) "resources": (map[string]interface {}) (len=2) {
     (string) (len=6) "limits": (map[string]interface {}) (len=2) {
      (string) (len=6) "memory": (string) (len=5) "512Mi",
      (string) (len=3) "cpu": (string) (len=4) "250m"
     },
     (string) (len=8) "requests": (map[string]interface {}) (len=2) {
      (string) (len=3) "cpu": (string) (len=4) "200m",
      (string) (len=6) "memory": (string) (len=5) "200Mi"
     }
    },
    (string) (len=18) "serviceAccountName": (string) (len=14) "prometheus-k8s",
    (string) (len=31) "serviceMonitorNamespaceSelector": (map[string]interface {}) {
    },
    (string) (len=8) "alerting": (map[string]interface {}) (len=1) {
     (string) (len=13) "alertmanagers": ([]interface {}) (len=1 cap=1) {
      (map[string]interface {}) (len=3) {
       (string) (len=4) "name": (string) (len=17) "alertmanager-main",
       (string) (len=9) "namespace": (string) (len=10) "monitoring",
       (string) (len=4) "port": (string) (len=3) "web"
      }
     }
    },
    (string) (len=15) "securityContext": (map[string]interface {}) (len=3) {
     (string) (len=7) "fsGroup": (*big.Float)(0xc0005ba180)(2000),
     (string) (len=12) "runAsNonRoot": (bool) true,
     (string) (len=9) "runAsUser": (*big.Float)(0xc0005ba1b0)(1000)
    },
    (string) (len=23) "additionalScrapeConfigs": (map[string]interface {}) (len=2) {
     (string) (len=3) "key": (string) (len=26) "prometheus-additional.yaml",
     (string) (len=4) "name": (string) (len=25) "additional-scrape-configs"
    },
    (string) (len=6) "thanos": (map[string]interface {}) (len=3) {
     (string) (len=9) "baseImage": (string) (len=21) "quay.io/thanos/thanos",
     (string) (len=19) "objectStorageConfig": (map[string]interface {}) (len=2) {
      (string) (len=3) "key": (string) (len=11) "thanos.yaml",
      (string) (len=4) "name": (string) (len=22) "thanos-objstore-config"
     },
     (string) (len=7) "version": (string) (len=7) "v0.16.0"
    },
    (string) (len=22) "probeNamespaceSelector": (map[string]interface {}) {
    },
    (string) (len=12) "ruleSelector": (map[string]interface {}) (len=1) {
     (string) (len=11) "matchLabels": (map[string]interface {}) (len=2) {
      (string) (len=4) "role": (string) (len=11) "alert-rules",
      (string) (len=10) "prometheus": (string) (len=3) "k8s"
     }
    },
    (string) (len=12) "nodeSelector": (map[string]interface {}) (len=1) {
     (string) (len=4) "role": (string) (len=8) "services"
    },
    (string) (len=18) "podMonitorSelector": (map[string]interface {}) {
    },
    (string) (len=7) "storage": (map[string]interface {}) (len=1) {
     (string) (len=19) "volumeClaimTemplate": (map[string]interface {}) (len=1) {
      (string) (len=4) "spec": (map[string]interface {}) (len=2) {
       (string) (len=9) "resources": (map[string]interface {}) (len=1) {
        (string) (len=8) "requests": (map[string]interface {}) (len=1) {
         (string) (len=7) "storage": (string) (len=4) "10Gi"
        }
       },
       (string) (len=16) "storageClassName": (string) (len=3) "gp2"
      }
     }
    },
    (string) (len=22) "serviceMonitorSelector": (map[string]interface {}) {
    },
    (string) (len=5) "image": (string) (len=37) "quay.io/prometheus/prometheus:v2.25.2",
    (string) (len=13) "probeSelector": (map[string]interface {}) {
    },
    (string) (len=8) "replicas": (*big.Float)(0xc0005b9f50)(1),
    (string) (len=7) "version": (string) (len=7) "v2.25.2",
    (string) (len=27) "podMonitorNamespaceSelector": (map[string]interface {}) {
    }
   }
  },
  (string) (len=8) "wait_for": (interface {}) <nil>
 }
}

RAW provider 2021/04/03 23:34:34 [ApplyResourceChange][Request][PriorState]
(cty.Value) {
 ty: (cty.Type) {
  typeImpl: (cty.typeObject) {
   typeImplSigil: (cty.typeImplSigil) {
   },
   AttrTypes: (map[string]cty.Type) (len=3) {
    (string) (len=8) "wait_for": (cty.Type) {
     typeImpl: (cty.typeObject) {
      typeImplSigil: (cty.typeImplSigil) {
      },
      AttrTypes: (map[string]cty.Type) (len=1) {
       (string) (len=6) "fields": (cty.Type) {
        typeImpl: (cty.typeMap) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         ElementTypeT: (cty.Type) {
          typeImpl: (cty.primitiveType) {
           typeImplSigil: (cty.typeImplSigil) {
           },
           Kind: (cty.primitiveTypeKind) 83
          }
         }
        }
       }
      }
     }
    },
    (string) (len=8) "manifest": (cty.Type) {
     typeImpl: (cty.typeObject) {
      typeImplSigil: (cty.typeImplSigil) {
      },
      AttrTypes: (map[string]cty.Type) (len=4) {
       (string) (len=4) "spec": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) (len=21) {
          (string) (len=6) "thanos": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=3) {
             (string) (len=9) "baseImage": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             },
             (string) (len=19) "objectStorageConfig": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=4) "name": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=3) "key": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             },
             (string) (len=7) "version": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             }
            }
           }
          },
          (string) (len=13) "probeSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=15) "securityContext": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=3) {
             (string) (len=9) "runAsUser": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 78
              }
             },
             (string) (len=7) "fsGroup": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 78
              }
             },
             (string) (len=12) "runAsNonRoot": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 66
              }
             }
            }
           }
          },
          (string) (len=12) "nodeSelector": (cty.Type) {
           typeImpl: (cty.typeMap) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            ElementTypeT: (cty.Type) {
             typeImpl: (cty.primitiveType) {
              typeImplSigil: (cty.typeImplSigil) {
              },
              Kind: (cty.primitiveTypeKind) 83
             }
            }
           }
          },
          (string) (len=18) "serviceAccountName": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=9) "namespace": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=22) "serviceMonitorSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=22) "probeNamespaceSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=8) "alerting": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=1) {
             (string) (len=13) "alertmanagers": (cty.Type) {
              typeImpl: (cty.typeTuple) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               ElemTypes: ([]cty.Type) (len=1 cap=1) {
                (cty.Type) {
                 typeImpl: (cty.typeObject) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  AttrTypes: (map[string]cty.Type) (len=3) {
                   (string) (len=4) "port": (cty.Type) {
                    typeImpl: (cty.primitiveType) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     Kind: (cty.primitiveTypeKind) 83
                    }
                   },
                   (string) (len=4) "name": (cty.Type) {
                    typeImpl: (cty.primitiveType) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     Kind: (cty.primitiveTypeKind) 83
                    }
                   },
                   (string) (len=9) "namespace": (cty.Type) {
                    typeImpl: (cty.primitiveType) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     Kind: (cty.primitiveTypeKind) 83
                    }
                   }
                  }
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=7) "storage": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=1) {
             (string) (len=19) "volumeClaimTemplate": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=1) {
                (string) (len=4) "spec": (cty.Type) {
                 typeImpl: (cty.typeObject) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  AttrTypes: (map[string]cty.Type) (len=2) {
                   (string) (len=9) "resources": (cty.Type) {
                    typeImpl: (cty.typeObject) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     AttrTypes: (map[string]cty.Type) (len=1) {
                      (string) (len=8) "requests": (cty.Type) {
                       typeImpl: (cty.typeObject) {
                        typeImplSigil: (cty.typeImplSigil) {
                        },
                        AttrTypes: (map[string]cty.Type) (len=1) {
                         (string) (len=7) "storage": (cty.Type) {
                          typeImpl: (cty.primitiveType) {
                           typeImplSigil: (cty.typeImplSigil) {
                           },
                           Kind: (cty.primitiveTypeKind) 83
                          }
                         }
                        }
                       }
                      }
                     }
                    }
                   },
                   (string) (len=16) "storageClassName": (cty.Type) {
                    typeImpl: (cty.primitiveType) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     Kind: (cty.primitiveTypeKind) 83
                    }
                   }
                  }
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=9) "resources": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=2) {
             (string) (len=8) "requests": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=3) "cpu": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=6) "memory": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             },
             (string) (len=6) "limits": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=3) "cpu": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=6) "memory": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=31) "serviceMonitorNamespaceSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=23) "additionalScrapeConfigs": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=2) {
             (string) (len=4) "name": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             },
             (string) (len=3) "key": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             }
            }
           }
          },
          (string) (len=7) "version": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=4) "name": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=8) "replicas": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 78
           }
          },
          (string) (len=18) "podMonitorSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=12) "ruleSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=1) {
             (string) (len=11) "matchLabels": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=10) "prometheus": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=4) "role": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=14) "externalLabels": (cty.Type) {
           typeImpl: (cty.typeMap) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            ElementTypeT: (cty.Type) {
             typeImpl: (cty.primitiveType) {
              typeImplSigil: (cty.typeImplSigil) {
              },
              Kind: (cty.primitiveTypeKind) 83
             }
            }
           }
          },
          (string) (len=27) "podMonitorNamespaceSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=5) "image": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          }
         }
        }
       },
       (string) (len=10) "apiVersion": (cty.Type) {
        typeImpl: (cty.primitiveType) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         Kind: (cty.primitiveTypeKind) 83
        }
       },
       (string) (len=4) "kind": (cty.Type) {
        typeImpl: (cty.primitiveType) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         Kind: (cty.primitiveTypeKind) 83
        }
       },
       (string) (len=8) "metadata": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) (len=2) {
          (string) (len=4) "name": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=9) "namespace": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          }
         }
        }
       }
      }
     }
    },
    (string) (len=6) "object": (cty.Type) {
     typeImpl: (cty.typeObject) {
      typeImplSigil: (cty.typeImplSigil) {
      },
      AttrTypes: (map[string]cty.Type) (len=4) {
       (string) (len=4) "kind": (cty.Type) {
        typeImpl: (cty.primitiveType) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         Kind: (cty.primitiveTypeKind) 83
        }
       },
       (string) (len=8) "metadata": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) (len=2) {
          (string) (len=9) "namespace": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=4) "name": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          }
         }
        }
       },
       (string) (len=4) "spec": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) (len=19) {
          (string) (len=22) "serviceMonitorSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=12) "nodeSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=1) {
             (string) (len=4) "role": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             }
            }
           }
          },
          (string) (len=5) "image": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=14) "externalLabels": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=2) {
             (string) (len=7) "product": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             },
             (string) (len=7) "cluster": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             }
            }
           }
          },
          (string) (len=22) "probeNamespaceSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=8) "replicas": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 78
           }
          },
          (string) (len=12) "ruleSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=1) {
             (string) (len=11) "matchLabels": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=10) "prometheus": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=4) "role": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=7) "storage": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=1) {
             (string) (len=19) "volumeClaimTemplate": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=1) {
                (string) (len=4) "spec": (cty.Type) {
                 typeImpl: (cty.typeObject) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  AttrTypes: (map[string]cty.Type) (len=2) {
                   (string) (len=9) "resources": (cty.Type) {
                    typeImpl: (cty.typeObject) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     AttrTypes: (map[string]cty.Type) (len=1) {
                      (string) (len=8) "requests": (cty.Type) {
                       typeImpl: (cty.typeObject) {
                        typeImplSigil: (cty.typeImplSigil) {
                        },
                        AttrTypes: (map[string]cty.Type) (len=1) {
                         (string) (len=7) "storage": (cty.Type) {
                          typeImpl: (cty.primitiveType) {
                           typeImplSigil: (cty.typeImplSigil) {
                           },
                           Kind: (cty.primitiveTypeKind) 83
                          }
                         }
                        }
                       }
                      }
                     }
                    }
                   },
                   (string) (len=16) "storageClassName": (cty.Type) {
                    typeImpl: (cty.primitiveType) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     Kind: (cty.primitiveTypeKind) 83
                    }
                   }
                  }
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=7) "version": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=27) "podMonitorNamespaceSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=13) "probeSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=6) "thanos": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=3) {
             (string) (len=7) "version": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             },
             (string) (len=9) "baseImage": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             },
             (string) (len=19) "objectStorageConfig": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=3) "key": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=4) "name": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=18) "podMonitorSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=18) "serviceAccountName": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=8) "alerting": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=1) {
             (string) (len=13) "alertmanagers": (cty.Type) {
              typeImpl: (cty.typeTuple) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               ElemTypes: ([]cty.Type) (len=1 cap=1) {
                (cty.Type) {
                 typeImpl: (cty.typeObject) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  AttrTypes: (map[string]cty.Type) (len=3) {
                   (string) (len=4) "port": (cty.Type) {
                    typeImpl: (cty.primitiveType) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     Kind: (cty.primitiveTypeKind) 83
                    }
                   },
                   (string) (len=4) "name": (cty.Type) {
                    typeImpl: (cty.primitiveType) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     Kind: (cty.primitiveTypeKind) 83
                    }
                   },
                   (string) (len=9) "namespace": (cty.Type) {
                    typeImpl: (cty.primitiveType) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     Kind: (cty.primitiveTypeKind) 83
                    }
                   }
                  }
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=9) "resources": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=2) {
             (string) (len=6) "limits": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=3) "cpu": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=6) "memory": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             },
             (string) (len=8) "requests": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=6) "memory": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=3) "cpu": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=23) "additionalScrapeConfigs": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=2) {
             (string) (len=3) "key": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             },
             (string) (len=4) "name": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             }
            }
           }
          },
          (string) (len=15) "securityContext": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=3) {
             (string) (len=9) "runAsUser": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 78
              }
             },
             (string) (len=7) "fsGroup": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 78
              }
             },
             (string) (len=12) "runAsNonRoot": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 66
              }
             }
            }
           }
          },
          (string) (len=31) "serviceMonitorNamespaceSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          }
         }
        }
       },
       (string) (len=10) "apiVersion": (cty.Type) {
        typeImpl: (cty.primitiveType) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         Kind: (cty.primitiveTypeKind) 83
        }
       }
      }
     }
    }
   }
  }
 },
 v: (map[string]interface {}) (len=3) {
  (string) (len=8) "manifest": (map[string]interface {}) (len=4) {
   (string) (len=10) "apiVersion": (string) (len=24) "monitoring.coreos.com/v1",
   (string) (len=4) "kind": (string) (len=10) "Prometheus",
   (string) (len=8) "metadata": (map[string]interface {}) (len=2) {
    (string) (len=4) "name": (string) (len=6) "test-1",
    (string) (len=9) "namespace": (string) (len=15) "test-operator-1"
   },
   (string) (len=4) "spec": (map[string]interface {}) (len=21) {
    (string) (len=27) "podMonitorNamespaceSelector": (map[string]interface {}) {
    },
    (string) (len=23) "additionalScrapeConfigs": (map[string]interface {}) (len=2) {
     (string) (len=3) "key": (string) (len=26) "prometheus-additional.yaml",
     (string) (len=4) "name": (string) (len=25) "additional-scrape-configs"
    },
    (string) (len=13) "probeSelector": (map[string]interface {}) {
    },
    (string) (len=18) "serviceAccountName": (string) (len=14) "prometheus-k8s",
    (string) (len=8) "replicas": (*big.Float)(0xc00033f4d0)(1),
    (string) (len=31) "serviceMonitorNamespaceSelector": (map[string]interface {}) {
    },
    (string) (len=12) "nodeSelector": (map[string]interface {}) (len=1) {
     (string) (len=4) "role": (string) (len=8) "services"
    },
    (string) (len=5) "image": (string) (len=37) "quay.io/prometheus/prometheus:v2.25.2",
    (string) (len=6) "thanos": (map[string]interface {}) (len=3) {
     (string) (len=9) "baseImage": (string) (len=21) "quay.io/thanos/thanos",
     (string) (len=19) "objectStorageConfig": (map[string]interface {}) (len=2) {
      (string) (len=3) "key": (string) (len=11) "thanos.yaml",
      (string) (len=4) "name": (string) (len=22) "thanos-objstore-config"
     },
     (string) (len=7) "version": (string) (len=7) "v0.16.0"
    },
    (string) (len=22) "serviceMonitorSelector": (map[string]interface {}) {
    },
    (string) (len=7) "version": (string) (len=7) "v2.25.2",
    (string) (len=18) "podMonitorSelector": (map[string]interface {}) {
    },
    (string) (len=4) "name": (string) (len=6) "test-1",
    (string) (len=9) "namespace": (string) (len=15) "test-operator-1",
    (string) (len=9) "resources": (map[string]interface {}) (len=2) {
     (string) (len=8) "requests": (map[string]interface {}) (len=2) {
      (string) (len=3) "cpu": (string) (len=4) "200m",
      (string) (len=6) "memory": (string) (len=5) "200Mi"
     },
     (string) (len=6) "limits": (map[string]interface {}) (len=2) {
      (string) (len=6) "memory": (string) (len=5) "250Mi",
      (string) (len=3) "cpu": (string) (len=4) "250m"
     }
    },
    (string) (len=22) "probeNamespaceSelector": (map[string]interface {}) {
    },
    (string) (len=15) "securityContext": (map[string]interface {}) (len=3) {
     (string) (len=7) "fsGroup": (*big.Float)(0xc00033f920)(2000),
     (string) (len=12) "runAsNonRoot": (bool) true,
     (string) (len=9) "runAsUser": (*big.Float)(0xc00033f950)(1000)
    },
    (string) (len=12) "ruleSelector": (map[string]interface {}) (len=1) {
     (string) (len=11) "matchLabels": (map[string]interface {}) (len=2) {
      (string) (len=10) "prometheus": (string) (len=3) "k8s",
      (string) (len=4) "role": (string) (len=11) "alert-rules"
     }
    },
    (string) (len=7) "storage": (map[string]interface {}) (len=1) {
     (string) (len=19) "volumeClaimTemplate": (map[string]interface {}) (len=1) {
      (string) (len=4) "spec": (map[string]interface {}) (len=2) {
       (string) (len=9) "resources": (map[string]interface {}) (len=1) {
        (string) (len=8) "requests": (map[string]interface {}) (len=1) {
         (string) (len=7) "storage": (string) (len=4) "10Gi"
        }
       },
       (string) (len=16) "storageClassName": (string) (len=3) "gp2"
      }
     }
    },
    (string) (len=8) "alerting": (map[string]interface {}) (len=1) {
     (string) (len=13) "alertmanagers": ([]interface {}) (len=1 cap=1) {
      (map[string]interface {}) (len=3) {
       (string) (len=4) "name": (string) (len=17) "alertmanager-main",
       (string) (len=9) "namespace": (string) (len=10) "monitoring",
       (string) (len=4) "port": (string) (len=3) "web"
      }
     }
    },
    (string) (len=14) "externalLabels": (map[string]interface {}) (len=2) {
     (string) (len=7) "cluster": (string) (len=12) "my-cluster-2",
     (string) (len=7) "product": (string) (len=13) "api beep boop"
    }
   }
  },
  (string) (len=6) "object": (map[string]interface {}) (len=4) {
   (string) (len=4) "kind": (string) (len=10) "Prometheus",
   (string) (len=8) "metadata": (map[string]interface {}) (len=2) {
    (string) (len=4) "name": (string) (len=6) "test-1",
    (string) (len=9) "namespace": (string) (len=15) "test-operator-1"
   },
   (string) (len=4) "spec": (map[string]interface {}) (len=19) {
    (string) (len=7) "version": (string) (len=7) "v2.25.2",
    (string) (len=8) "alerting": (map[string]interface {}) (len=1) {
     (string) (len=13) "alertmanagers": ([]interface {}) (len=1 cap=1) {
      (map[string]interface {}) (len=3) {
       (string) (len=4) "name": (string) (len=17) "alertmanager-main",
       (string) (len=9) "namespace": (string) (len=10) "monitoring",
       (string) (len=4) "port": (string) (len=3) "web"
      }
     }
    },
    (string) (len=5) "image": (string) (len=37) "quay.io/prometheus/prometheus:v2.25.2",
    (string) (len=12) "ruleSelector": (map[string]interface {}) (len=1) {
     (string) (len=11) "matchLabels": (map[string]interface {}) (len=2) {
      (string) (len=4) "role": (string) (len=11) "alert-rules",
      (string) (len=10) "prometheus": (string) (len=3) "k8s"
     }
    },
    (string) (len=18) "serviceAccountName": (string) (len=14) "prometheus-k8s",
    (string) (len=31) "serviceMonitorNamespaceSelector": (map[string]interface {}) {
    },
    (string) (len=22) "probeNamespaceSelector": (map[string]interface {}) {
    },
    (string) (len=15) "securityContext": (map[string]interface {}) (len=3) {
     (string) (len=12) "runAsNonRoot": (bool) true,
     (string) (len=9) "runAsUser": (*big.Float)(0xc00051f770)(1000),
     (string) (len=7) "fsGroup": (*big.Float)(0xc00051f740)(2000)
    },
    (string) (len=12) "nodeSelector": (map[string]interface {}) (len=1) {
     (string) (len=4) "role": (string) (len=8) "services"
    },
    (string) (len=13) "probeSelector": (map[string]interface {}) {
    },
    (string) (len=18) "podMonitorSelector": (map[string]interface {}) {
    },
    (string) (len=22) "serviceMonitorSelector": (map[string]interface {}) {
    },
    (string) (len=8) "replicas": (*big.Float)(0xc00051f530)(1),
    (string) (len=7) "storage": (map[string]interface {}) (len=1) {
     (string) (len=19) "volumeClaimTemplate": (map[string]interface {}) (len=1) {
      (string) (len=4) "spec": (map[string]interface {}) (len=2) {
       (string) (len=9) "resources": (map[string]interface {}) (len=1) {
        (string) (len=8) "requests": (map[string]interface {}) (len=1) {
         (string) (len=7) "storage": (string) (len=4) "10Gi"
        }
       },
       (string) (len=16) "storageClassName": (string) (len=3) "gp2"
      }
     }
    },
    (string) (len=27) "podMonitorNamespaceSelector": (map[string]interface {}) {
    },
    (string) (len=9) "resources": (map[string]interface {}) (len=2) {
     (string) (len=8) "requests": (map[string]interface {}) (len=2) {
      (string) (len=3) "cpu": (string) (len=4) "200m",
      (string) (len=6) "memory": (string) (len=5) "200Mi"
     },
     (string) (len=6) "limits": (map[string]interface {}) (len=2) {
      (string) (len=3) "cpu": (string) (len=4) "250m",
      (string) (len=6) "memory": (string) (len=5) "250Mi"
     }
    },
    (string) (len=23) "additionalScrapeConfigs": (map[string]interface {}) (len=2) {
     (string) (len=3) "key": (string) (len=26) "prometheus-additional.yaml",
     (string) (len=4) "name": (string) (len=25) "additional-scrape-configs"
    },
    (string) (len=14) "externalLabels": (map[string]interface {}) (len=2) {
     (string) (len=7) "product": (string) (len=13) "api beep boop",
     (string) (len=7) "cluster": (string) (len=12) "my-cluster-2"
    },
    (string) (len=6) "thanos": (map[string]interface {}) (len=3) {
     (string) (len=19) "objectStorageConfig": (map[string]interface {}) (len=2) {
      (string) (len=3) "key": (string) (len=11) "thanos.yaml",
      (string) (len=4) "name": (string) (len=22) "thanos-objstore-config"
     },
     (string) (len=7) "version": (string) (len=7) "v0.16.0",
     (string) (len=9) "baseImage": (string) (len=21) "quay.io/thanos/thanos"
    }
   },
   (string) (len=10) "apiVersion": (string) (len=24) "monitoring.coreos.com/v1"
  },
  (string) (len=8) "wait_for": (interface {}) <nil>
 }
}

RAW provider 2021/04/03 23:34:34 [ApplyResourceChange][Request][PlannedPrivate]
([]uint8) <nil>

RAW provider 2021/04/03 23:34:34 [ApplyResourceChange][Update] API response:
(*unstructured.Unstructured)(0xc0005ce000)({
 Object: (map[string]interface {}) (len=4) {
  (string) (len=10) "apiVersion": (string) (len=24) "monitoring.coreos.com/v1",
  (string) (len=4) "kind": (string) (len=10) "Prometheus",
  (string) (len=8) "metadata": (map[string]interface {}) (len=8) {
   (string) (len=17) "creationTimestamp": (string) (len=20) "2021-04-04T03:32:14Z",
   (string) (len=10) "generation": (int64) 2,
   (string) (len=13) "managedFields": ([]interface {}) (len=1 cap=1) {
    (map[string]interface {}) (len=6) {
     (string) (len=10) "apiVersion": (string) (len=24) "monitoring.coreos.com/v1",
     (string) (len=10) "fieldsType": (string) (len=8) "FieldsV1",
     (string) (len=8) "fieldsV1": (map[string]interface {}) (len=1) {
      (string) (len=6) "f:spec": (map[string]interface {}) (len=20) {
       (string) (len=16) "f:externalLabels": (map[string]interface {}) (len=3) {
        (string) (len=9) "f:product": (map[string]interface {}) {
        },
        (string) (len=1) ".": (map[string]interface {}) {
        },
        (string) (len=9) "f:cluster": (map[string]interface {}) {
        }
       },
       (string) (len=10) "f:replicas": (map[string]interface {}) {
       },
       (string) (len=14) "f:ruleSelector": (map[string]interface {}) (len=2) {
        (string) (len=1) ".": (map[string]interface {}) {
        },
        (string) (len=13) "f:matchLabels": (map[string]interface {}) (len=3) {
         (string) (len=1) ".": (map[string]interface {}) {
         },
         (string) (len=12) "f:prometheus": (map[string]interface {}) {
         },
         (string) (len=6) "f:role": (map[string]interface {}) {
         }
        }
       },
       (string) (len=33) "f:serviceMonitorNamespaceSelector": (map[string]interface {}) {
       },
       (string) (len=24) "f:serviceMonitorSelector": (map[string]interface {}) {
       },
       (string) (len=9) "f:version": (map[string]interface {}) {
       },
       (string) (len=29) "f:podMonitorNamespaceSelector": (map[string]interface {}) {
       },
       (string) (len=24) "f:probeNamespaceSelector": (map[string]interface {}) {
       },
       (string) (len=11) "f:resources": (map[string]interface {}) (len=3) {
        (string) (len=1) ".": (map[string]interface {}) {
        },
        (string) (len=8) "f:limits": (map[string]interface {}) (len=3) {
         (string) (len=1) ".": (map[string]interface {}) {
         },
         (string) (len=5) "f:cpu": (map[string]interface {}) {
         },
         (string) (len=8) "f:memory": (map[string]interface {}) {
         }
        },
        (string) (len=10) "f:requests": (map[string]interface {}) (len=3) {
         (string) (len=1) ".": (map[string]interface {}) {
         },
         (string) (len=5) "f:cpu": (map[string]interface {}) {
         },
         (string) (len=8) "f:memory": (map[string]interface {}) {
         }
        }
       },
       (string) (len=20) "f:serviceAccountName": (map[string]interface {}) {
       },
       (string) (len=8) "f:thanos": (map[string]interface {}) (len=4) {
        (string) (len=9) "f:version": (map[string]interface {}) {
        },
        (string) (len=1) ".": (map[string]interface {}) {
        },
        (string) (len=11) "f:baseImage": (map[string]interface {}) {
        },
        (string) (len=21) "f:objectStorageConfig": (map[string]interface {}) (len=3) {
         (string) (len=1) ".": (map[string]interface {}) {
         },
         (string) (len=5) "f:key": (map[string]interface {}) {
         },
         (string) (len=6) "f:name": (map[string]interface {}) {
         }
        }
       },
       (string) (len=10) "f:alerting": (map[string]interface {}) (len=2) {
        (string) (len=1) ".": (map[string]interface {}) {
        },
        (string) (len=15) "f:alertmanagers": (map[string]interface {}) {
        }
       },
       (string) (len=7) "f:image": (map[string]interface {}) {
       },
       (string) (len=14) "f:nodeSelector": (map[string]interface {}) (len=2) {
        (string) (len=1) ".": (map[string]interface {}) {
        },
        (string) (len=6) "f:role": (map[string]interface {}) {
        }
       },
       (string) (len=17) "f:securityContext": (map[string]interface {}) (len=4) {
        (string) (len=1) ".": (map[string]interface {}) {
        },
        (string) (len=9) "f:fsGroup": (map[string]interface {}) {
        },
        (string) (len=14) "f:runAsNonRoot": (map[string]interface {}) {
        },
        (string) (len=11) "f:runAsUser": (map[string]interface {}) {
        }
       },
       (string) (len=1) ".": (map[string]interface {}) {
       },
       (string) (len=25) "f:additionalScrapeConfigs": (map[string]interface {}) (len=3) {
        (string) (len=5) "f:key": (map[string]interface {}) {
        },
        (string) (len=6) "f:name": (map[string]interface {}) {
        },
        (string) (len=1) ".": (map[string]interface {}) {
        }
       },
       (string) (len=20) "f:podMonitorSelector": (map[string]interface {}) {
       },
       (string) (len=15) "f:probeSelector": (map[string]interface {}) {
       },
       (string) (len=9) "f:storage": (map[string]interface {}) (len=2) {
        (string) (len=1) ".": (map[string]interface {}) {
        },
        (string) (len=21) "f:volumeClaimTemplate": (map[string]interface {}) (len=2) {
         (string) (len=6) "f:spec": (map[string]interface {}) (len=3) {
          (string) (len=11) "f:resources": (map[string]interface {}) (len=2) {
           (string) (len=1) ".": (map[string]interface {}) {
           },
           (string) (len=10) "f:requests": (map[string]interface {}) (len=2) {
            (string) (len=9) "f:storage": (map[string]interface {}) {
            },
            (string) (len=1) ".": (map[string]interface {}) {
            }
           }
          },
          (string) (len=18) "f:storageClassName": (map[string]interface {}) {
          },
          (string) (len=1) ".": (map[string]interface {}) {
          }
         },
         (string) (len=1) ".": (map[string]interface {}) {
         }
        }
       }
      }
     },
     (string) (len=7) "manager": (string) (len=9) "Terraform",
     (string) (len=9) "operation": (string) (len=5) "Apply",
     (string) (len=4) "time": (string) (len=20) "2021-04-04T03:34:34Z"
    }
   },
   (string) (len=4) "name": (string) (len=6) "test-1",
   (string) (len=9) "namespace": (string) (len=15) "test-operator-1",
   (string) (len=15) "resourceVersion": (string) (len=8) "50987786",
   (string) (len=8) "selfLink": (string) (len=77) "/apis/monitoring.coreos.com/v1/namespaces/test-operator-1/prometheuses/test-1",
   (string) (len=3) "uid": (string) (len=36) "c0e4570b-f184-40d1-a1c5-84aef7046605"
  },
  (string) (len=4) "spec": (map[string]interface {}) (len=19) {
   (string) (len=14) "externalLabels": (map[string]interface {}) (len=2) {
    (string) (len=7) "cluster": (string) (len=12) "my-cluster-2",
    (string) (len=7) "product": (string) (len=13) "api beep boop"
   },
   (string) (len=22) "probeNamespaceSelector": (map[string]interface {}) {
   },
   (string) (len=13) "probeSelector": (map[string]interface {}) {
   },
   (string) (len=12) "ruleSelector": (map[string]interface {}) (len=1) {
    (string) (len=11) "matchLabels": (map[string]interface {}) (len=2) {
     (string) (len=10) "prometheus": (string) (len=3) "k8s",
     (string) (len=4) "role": (string) (len=11) "alert-rules"
    }
   },
   (string) (len=31) "serviceMonitorNamespaceSelector": (map[string]interface {}) {
   },
   (string) (len=6) "thanos": (map[string]interface {}) (len=3) {
    (string) (len=9) "baseImage": (string) (len=21) "quay.io/thanos/thanos",
    (string) (len=19) "objectStorageConfig": (map[string]interface {}) (len=2) {
     (string) (len=3) "key": (string) (len=11) "thanos.yaml",
     (string) (len=4) "name": (string) (len=22) "thanos-objstore-config"
    },
    (string) (len=7) "version": (string) (len=7) "v0.16.0"
   },
   (string) (len=8) "alerting": (map[string]interface {}) (len=1) {
    (string) (len=13) "alertmanagers": ([]interface {}) (len=1 cap=1) {
     (map[string]interface {}) (len=3) {
      (string) (len=9) "namespace": (string) (len=10) "monitoring",
      (string) (len=4) "port": (string) (len=3) "web",
      (string) (len=4) "name": (string) (len=17) "alertmanager-main"
     }
    }
   },
   (string) (len=12) "nodeSelector": (map[string]interface {}) (len=1) {
    (string) (len=4) "role": (string) (len=8) "services"
   },
   (string) (len=27) "podMonitorNamespaceSelector": (map[string]interface {}) {
   },
   (string) (len=18) "serviceAccountName": (string) (len=14) "prometheus-k8s",
   (string) (len=7) "version": (string) (len=7) "v2.25.2",
   (string) (len=5) "image": (string) (len=37) "quay.io/prometheus/prometheus:v2.25.2",
   (string) (len=18) "podMonitorSelector": (map[string]interface {}) {
   },
   (string) (len=15) "securityContext": (map[string]interface {}) (len=3) {
    (string) (len=7) "fsGroup": (int64) 2000,
    (string) (len=12) "runAsNonRoot": (bool) true,
    (string) (len=9) "runAsUser": (int64) 1000
   },
   (string) (len=23) "additionalScrapeConfigs": (map[string]interface {}) (len=2) {
    (string) (len=3) "key": (string) (len=26) "prometheus-additional.yaml",
    (string) (len=4) "name": (string) (len=25) "additional-scrape-configs"
   },
   (string) (len=8) "replicas": (int64) 1,
   (string) (len=9) "resources": (map[string]interface {}) (len=2) {
    (string) (len=6) "limits": (map[string]interface {}) (len=2) {
     (string) (len=3) "cpu": (string) (len=4) "250m",
     (string) (len=6) "memory": (string) (len=5) "512Mi"
    },
    (string) (len=8) "requests": (map[string]interface {}) (len=2) {
     (string) (len=3) "cpu": (string) (len=4) "200m",
     (string) (len=6) "memory": (string) (len=5) "200Mi"
    }
   },
   (string) (len=22) "serviceMonitorSelector": (map[string]interface {}) {
   },
   (string) (len=7) "storage": (map[string]interface {}) (len=1) {
    (string) (len=19) "volumeClaimTemplate": (map[string]interface {}) (len=1) {
     (string) (len=4) "spec": (map[string]interface {}) (len=2) {
      (string) (len=9) "resources": (map[string]interface {}) (len=1) {
       (string) (len=8) "requests": (map[string]interface {}) (len=1) {
        (string) (len=7) "storage": (string) (len=4) "10Gi"
       }
      },
      (string) (len=16) "storageClassName": (string) (len=3) "gp2"
     }
    }
   }
  }
 }
})

RAW provider 2021/04/03 23:34:34 [ApplyResourceChange][Update] transformed response:
(cty.Value) {
 ty: (cty.Type) {
  typeImpl: (cty.typeObject) {
   typeImplSigil: (cty.typeImplSigil) {
   },
   AttrTypes: (map[string]cty.Type) (len=4) {
    (string) (len=10) "apiVersion": (cty.Type) {
     typeImpl: (cty.primitiveType) {
      typeImplSigil: (cty.typeImplSigil) {
      },
      Kind: (cty.primitiveTypeKind) 83
     }
    },
    (string) (len=4) "kind": (cty.Type) {
     typeImpl: (cty.primitiveType) {
      typeImplSigil: (cty.typeImplSigil) {
      },
      Kind: (cty.primitiveTypeKind) 83
     }
    },
    (string) (len=8) "metadata": (cty.Type) {
     typeImpl: (cty.typeObject) {
      typeImplSigil: (cty.typeImplSigil) {
      },
      AttrTypes: (map[string]cty.Type) (len=2) {
       (string) (len=4) "name": (cty.Type) {
        typeImpl: (cty.primitiveType) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         Kind: (cty.primitiveTypeKind) 83
        }
       },
       (string) (len=9) "namespace": (cty.Type) {
        typeImpl: (cty.primitiveType) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         Kind: (cty.primitiveTypeKind) 83
        }
       }
      }
     }
    },
    (string) (len=4) "spec": (cty.Type) {
     typeImpl: (cty.typeObject) {
      typeImplSigil: (cty.typeImplSigil) {
      },
      AttrTypes: (map[string]cty.Type) (len=19) {
       (string) (len=12) "nodeSelector": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) (len=1) {
          (string) (len=4) "role": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          }
         }
        }
       },
       (string) (len=18) "podMonitorSelector": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) {
         }
        }
       },
       (string) (len=23) "additionalScrapeConfigs": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) (len=2) {
          (string) (len=3) "key": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=4) "name": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          }
         }
        }
       },
       (string) (len=8) "alerting": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) (len=1) {
          (string) (len=13) "alertmanagers": (cty.Type) {
           typeImpl: (cty.typeTuple) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            ElemTypes: ([]cty.Type) (len=1 cap=1) {
             (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=3) {
                (string) (len=4) "port": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=4) "name": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=9) "namespace": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             }
            }
           }
          }
         }
        }
       },
       (string) (len=15) "securityContext": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) (len=3) {
          (string) (len=12) "runAsNonRoot": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 66
           }
          },
          (string) (len=9) "runAsUser": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 78
           }
          },
          (string) (len=7) "fsGroup": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 78
           }
          }
         }
        }
       },
       (string) (len=22) "probeNamespaceSelector": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) {
         }
        }
       },
       (string) (len=22) "serviceMonitorSelector": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) {
         }
        }
       },
       (string) (len=14) "externalLabels": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) (len=2) {
          (string) (len=7) "product": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=7) "cluster": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          }
         }
        }
       },
       (string) (len=8) "replicas": (cty.Type) {
        typeImpl: (cty.primitiveType) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         Kind: (cty.primitiveTypeKind) 78
        }
       },
       (string) (len=12) "ruleSelector": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) (len=1) {
          (string) (len=11) "matchLabels": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=2) {
             (string) (len=10) "prometheus": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             },
             (string) (len=4) "role": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             }
            }
           }
          }
         }
        }
       },
       (string) (len=9) "resources": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) (len=2) {
          (string) (len=8) "requests": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=2) {
             (string) (len=3) "cpu": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             },
             (string) (len=6) "memory": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             }
            }
           }
          },
          (string) (len=6) "limits": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=2) {
             (string) (len=3) "cpu": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             },
             (string) (len=6) "memory": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             }
            }
           }
          }
         }
        }
       },
       (string) (len=7) "version": (cty.Type) {
        typeImpl: (cty.primitiveType) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         Kind: (cty.primitiveTypeKind) 83
        }
       },
       (string) (len=7) "storage": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) (len=1) {
          (string) (len=19) "volumeClaimTemplate": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=1) {
             (string) (len=4) "spec": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=9) "resources": (cty.Type) {
                 typeImpl: (cty.typeObject) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  AttrTypes: (map[string]cty.Type) (len=1) {
                   (string) (len=8) "requests": (cty.Type) {
                    typeImpl: (cty.typeObject) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     AttrTypes: (map[string]cty.Type) (len=1) {
                      (string) (len=7) "storage": (cty.Type) {
                       typeImpl: (cty.primitiveType) {
                        typeImplSigil: (cty.typeImplSigil) {
                        },
                        Kind: (cty.primitiveTypeKind) 83
                       }
                      }
                     }
                    }
                   }
                  }
                 }
                },
                (string) (len=16) "storageClassName": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             }
            }
           }
          }
         }
        }
       },
       (string) (len=31) "serviceMonitorNamespaceSelector": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) {
         }
        }
       },
       (string) (len=6) "thanos": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) (len=3) {
          (string) (len=9) "baseImage": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=19) "objectStorageConfig": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=2) {
             (string) (len=3) "key": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             },
             (string) (len=4) "name": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             }
            }
           }
          },
          (string) (len=7) "version": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          }
         }
        }
       },
       (string) (len=13) "probeSelector": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) {
         }
        }
       },
       (string) (len=18) "serviceAccountName": (cty.Type) {
        typeImpl: (cty.primitiveType) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         Kind: (cty.primitiveTypeKind) 83
        }
       },
       (string) (len=5) "image": (cty.Type) {
        typeImpl: (cty.primitiveType) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         Kind: (cty.primitiveTypeKind) 83
        }
       },
       (string) (len=27) "podMonitorNamespaceSelector": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) {
         }
        }
       }
      }
     }
    }
   }
  }
 },
 v: (map[string]interface {}) (len=4) {
  (string) (len=10) "apiVersion": (string) (len=24) "monitoring.coreos.com/v1",
  (string) (len=4) "kind": (string) (len=10) "Prometheus",
  (string) (len=8) "metadata": (map[string]interface {}) (len=2) {
   (string) (len=4) "name": (string) (len=6) "test-1",
   (string) (len=9) "namespace": (string) (len=15) "test-operator-1"
  },
  (string) (len=4) "spec": (map[string]interface {}) (len=19) {
   (string) (len=18) "serviceAccountName": (string) (len=14) "prometheus-k8s",
   (string) (len=18) "podMonitorSelector": (map[string]interface {}) {
   },
   (string) (len=22) "probeNamespaceSelector": (map[string]interface {}) {
   },
   (string) (len=7) "storage": (map[string]interface {}) (len=1) {
    (string) (len=19) "volumeClaimTemplate": (map[string]interface {}) (len=1) {
     (string) (len=4) "spec": (map[string]interface {}) (len=2) {
      (string) (len=9) "resources": (map[string]interface {}) (len=1) {
       (string) (len=8) "requests": (map[string]interface {}) (len=1) {
        (string) (len=7) "storage": (string) (len=4) "10Gi"
       }
      },
      (string) (len=16) "storageClassName": (string) (len=3) "gp2"
     }
    }
   },
   (string) (len=31) "serviceMonitorNamespaceSelector": (map[string]interface {}) {
   },
   (string) (len=6) "thanos": (map[string]interface {}) (len=3) {
    (string) (len=7) "version": (string) (len=7) "v0.16.0",
    (string) (len=9) "baseImage": (string) (len=21) "quay.io/thanos/thanos",
    (string) (len=19) "objectStorageConfig": (map[string]interface {}) (len=2) {
     (string) (len=3) "key": (string) (len=11) "thanos.yaml",
     (string) (len=4) "name": (string) (len=22) "thanos-objstore-config"
    }
   },
   (string) (len=9) "resources": (map[string]interface {}) (len=2) {
    (string) (len=8) "requests": (map[string]interface {}) (len=2) {
     (string) (len=3) "cpu": (string) (len=4) "200m",
     (string) (len=6) "memory": (string) (len=5) "200Mi"
    },
    (string) (len=6) "limits": (map[string]interface {}) (len=2) {
     (string) (len=3) "cpu": (string) (len=4) "250m",
     (string) (len=6) "memory": (string) (len=5) "512Mi"
    }
   },
   (string) (len=23) "additionalScrapeConfigs": (map[string]interface {}) (len=2) {
    (string) (len=3) "key": (string) (len=26) "prometheus-additional.yaml",
    (string) (len=4) "name": (string) (len=25) "additional-scrape-configs"
   },
   (string) (len=27) "podMonitorNamespaceSelector": (map[string]interface {}) {
   },
   (string) (len=7) "version": (string) (len=7) "v2.25.2",
   (string) (len=8) "alerting": (map[string]interface {}) (len=1) {
    (string) (len=13) "alertmanagers": ([]interface {}) (len=1 cap=1) {
     (map[string]interface {}) (len=3) {
      (string) (len=4) "name": (string) (len=17) "alertmanager-main",
      (string) (len=9) "namespace": (string) (len=10) "monitoring",
      (string) (len=4) "port": (string) (len=3) "web"
     }
    }
   },
   (string) (len=12) "nodeSelector": (map[string]interface {}) (len=1) {
    (string) (len=4) "role": (string) (len=8) "services"
   },
   (string) (len=8) "replicas": (*big.Float)(0xc00059a8a0)(1),
   (string) (len=5) "image": (string) (len=37) "quay.io/prometheus/prometheus:v2.25.2",
   (string) (len=13) "probeSelector": (map[string]interface {}) {
   },
   (string) (len=12) "ruleSelector": (map[string]interface {}) (len=1) {
    (string) (len=11) "matchLabels": (map[string]interface {}) (len=2) {
     (string) (len=10) "prometheus": (string) (len=3) "k8s",
     (string) (len=4) "role": (string) (len=11) "alert-rules"
    }
   },
   (string) (len=15) "securityContext": (map[string]interface {}) (len=3) {
    (string) (len=12) "runAsNonRoot": (bool) true,
    (string) (len=9) "runAsUser": (*big.Float)(0xc00059aed0)(1000),
    (string) (len=7) "fsGroup": (*big.Float)(0xc00059ae40)(2000)
   },
   (string) (len=22) "serviceMonitorSelector": (map[string]interface {}) {
   },
   (string) (len=14) "externalLabels": (map[string]interface {}) (len=2) {
    (string) (len=7) "product": (string) (len=13) "api beep boop",
    (string) (len=7) "cluster": (string) (len=12) "my-cluster-2"
   }
  }
 }
}
RAW provider 2021/04/03 23:34:34 [ApplyResourceChange][Update] transformed new state:
(cty.Value) {
 ty: (cty.Type) {
  typeImpl: (cty.typeObject) {
   typeImplSigil: (cty.typeImplSigil) {
   },
   AttrTypes: (map[string]cty.Type) (len=3) {
    (string) (len=8) "manifest": (cty.Type) {
     typeImpl: (cty.typeObject) {
      typeImplSigil: (cty.typeImplSigil) {
      },
      AttrTypes: (map[string]cty.Type) (len=4) {
       (string) (len=10) "apiVersion": (cty.Type) {
        typeImpl: (cty.primitiveType) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         Kind: (cty.primitiveTypeKind) 83
        }
       },
       (string) (len=4) "kind": (cty.Type) {
        typeImpl: (cty.primitiveType) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         Kind: (cty.primitiveTypeKind) 83
        }
       },
       (string) (len=8) "metadata": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) (len=2) {
          (string) (len=9) "namespace": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=4) "name": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          }
         }
        }
       },
       (string) (len=4) "spec": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) (len=21) {
          (string) (len=5) "image": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=6) "thanos": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=3) {
             (string) (len=9) "baseImage": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             },
             (string) (len=19) "objectStorageConfig": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=4) "name": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=3) "key": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             },
             (string) (len=7) "version": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             }
            }
           }
          },
          (string) (len=12) "ruleSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=1) {
             (string) (len=11) "matchLabels": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=10) "prometheus": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=4) "role": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=4) "name": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=13) "probeSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=18) "serviceAccountName": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=14) "externalLabels": (cty.Type) {
           typeImpl: (cty.typeMap) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            ElementTypeT: (cty.Type) {
             typeImpl: (cty.primitiveType) {
              typeImplSigil: (cty.typeImplSigil) {
              },
              Kind: (cty.primitiveTypeKind) 83
             }
            }
           }
          },
          (string) (len=23) "additionalScrapeConfigs": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=2) {
             (string) (len=3) "key": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             },
             (string) (len=4) "name": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             }
            }
           }
          },
          (string) (len=27) "podMonitorNamespaceSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=18) "podMonitorSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=9) "namespace": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=22) "probeNamespaceSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=22) "serviceMonitorSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=15) "securityContext": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=3) {
             (string) (len=9) "runAsUser": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 78
              }
             },
             (string) (len=7) "fsGroup": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 78
              }
             },
             (string) (len=12) "runAsNonRoot": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 66
              }
             }
            }
           }
          },
          (string) (len=12) "nodeSelector": (cty.Type) {
           typeImpl: (cty.typeMap) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            ElementTypeT: (cty.Type) {
             typeImpl: (cty.primitiveType) {
              typeImplSigil: (cty.typeImplSigil) {
              },
              Kind: (cty.primitiveTypeKind) 83
             }
            }
           }
          },
          (string) (len=8) "alerting": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=1) {
             (string) (len=13) "alertmanagers": (cty.Type) {
              typeImpl: (cty.typeTuple) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               ElemTypes: ([]cty.Type) (len=1 cap=1) {
                (cty.Type) {
                 typeImpl: (cty.typeObject) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  AttrTypes: (map[string]cty.Type) (len=3) {
                   (string) (len=4) "name": (cty.Type) {
                    typeImpl: (cty.primitiveType) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     Kind: (cty.primitiveTypeKind) 83
                    }
                   },
                   (string) (len=9) "namespace": (cty.Type) {
                    typeImpl: (cty.primitiveType) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     Kind: (cty.primitiveTypeKind) 83
                    }
                   },
                   (string) (len=4) "port": (cty.Type) {
                    typeImpl: (cty.primitiveType) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     Kind: (cty.primitiveTypeKind) 83
                    }
                   }
                  }
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=31) "serviceMonitorNamespaceSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=7) "version": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=7) "storage": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=1) {
             (string) (len=19) "volumeClaimTemplate": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=1) {
                (string) (len=4) "spec": (cty.Type) {
                 typeImpl: (cty.typeObject) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  AttrTypes: (map[string]cty.Type) (len=2) {
                   (string) (len=9) "resources": (cty.Type) {
                    typeImpl: (cty.typeObject) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     AttrTypes: (map[string]cty.Type) (len=1) {
                      (string) (len=8) "requests": (cty.Type) {
                       typeImpl: (cty.typeObject) {
                        typeImplSigil: (cty.typeImplSigil) {
                        },
                        AttrTypes: (map[string]cty.Type) (len=1) {
                         (string) (len=7) "storage": (cty.Type) {
                          typeImpl: (cty.primitiveType) {
                           typeImplSigil: (cty.typeImplSigil) {
                           },
                           Kind: (cty.primitiveTypeKind) 83
                          }
                         }
                        }
                       }
                      }
                     }
                    }
                   },
                   (string) (len=16) "storageClassName": (cty.Type) {
                    typeImpl: (cty.primitiveType) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     Kind: (cty.primitiveTypeKind) 83
                    }
                   }
                  }
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=8) "replicas": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 78
           }
          },
          (string) (len=9) "resources": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=2) {
             (string) (len=6) "limits": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=6) "memory": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=3) "cpu": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             },
             (string) (len=8) "requests": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=3) "cpu": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=6) "memory": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             }
            }
           }
          }
         }
        }
       }
      }
     }
    },
    (string) (len=6) "object": (cty.Type) {
     typeImpl: (cty.typeObject) {
      typeImplSigil: (cty.typeImplSigil) {
      },
      AttrTypes: (map[string]cty.Type) (len=4) {
       (string) (len=8) "metadata": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) (len=2) {
          (string) (len=4) "name": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=9) "namespace": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          }
         }
        }
       },
       (string) (len=4) "spec": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) (len=19) {
          (string) (len=22) "serviceMonitorSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=14) "externalLabels": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=2) {
             (string) (len=7) "product": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             },
             (string) (len=7) "cluster": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             }
            }
           }
          },
          (string) (len=8) "replicas": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 78
           }
          },
          (string) (len=22) "probeNamespaceSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=12) "ruleSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=1) {
             (string) (len=11) "matchLabels": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=10) "prometheus": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=4) "role": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=9) "resources": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=2) {
             (string) (len=6) "limits": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=3) "cpu": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=6) "memory": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             },
             (string) (len=8) "requests": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=6) "memory": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=3) "cpu": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=7) "version": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=13) "probeSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=18) "serviceAccountName": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=5) "image": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=27) "podMonitorNamespaceSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=7) "storage": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=1) {
             (string) (len=19) "volumeClaimTemplate": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=1) {
                (string) (len=4) "spec": (cty.Type) {
                 typeImpl: (cty.typeObject) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  AttrTypes: (map[string]cty.Type) (len=2) {
                   (string) (len=9) "resources": (cty.Type) {
                    typeImpl: (cty.typeObject) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     AttrTypes: (map[string]cty.Type) (len=1) {
                      (string) (len=8) "requests": (cty.Type) {
                       typeImpl: (cty.typeObject) {
                        typeImplSigil: (cty.typeImplSigil) {
                        },
                        AttrTypes: (map[string]cty.Type) (len=1) {
                         (string) (len=7) "storage": (cty.Type) {
                          typeImpl: (cty.primitiveType) {
                           typeImplSigil: (cty.typeImplSigil) {
                           },
                           Kind: (cty.primitiveTypeKind) 83
                          }
                         }
                        }
                       }
                      }
                     }
                    }
                   },
                   (string) (len=16) "storageClassName": (cty.Type) {
                    typeImpl: (cty.primitiveType) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     Kind: (cty.primitiveTypeKind) 83
                    }
                   }
                  }
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=31) "serviceMonitorNamespaceSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=6) "thanos": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=3) {
             (string) (len=9) "baseImage": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             },
             (string) (len=19) "objectStorageConfig": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=4) "name": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=3) "key": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             },
             (string) (len=7) "version": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             }
            }
           }
          },
          (string) (len=23) "additionalScrapeConfigs": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=2) {
             (string) (len=3) "key": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             },
             (string) (len=4) "name": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             }
            }
           }
          },
          (string) (len=8) "alerting": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=1) {
             (string) (len=13) "alertmanagers": (cty.Type) {
              typeImpl: (cty.typeTuple) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               ElemTypes: ([]cty.Type) (len=1 cap=1) {
                (cty.Type) {
                 typeImpl: (cty.typeObject) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  AttrTypes: (map[string]cty.Type) (len=3) {
                   (string) (len=4) "name": (cty.Type) {
                    typeImpl: (cty.primitiveType) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     Kind: (cty.primitiveTypeKind) 83
                    }
                   },
                   (string) (len=9) "namespace": (cty.Type) {
                    typeImpl: (cty.primitiveType) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     Kind: (cty.primitiveTypeKind) 83
                    }
                   },
                   (string) (len=4) "port": (cty.Type) {
                    typeImpl: (cty.primitiveType) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     Kind: (cty.primitiveTypeKind) 83
                    }
                   }
                  }
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=15) "securityContext": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=3) {
             (string) (len=7) "fsGroup": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 78
              }
             },
             (string) (len=12) "runAsNonRoot": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 66
              }
             },
             (string) (len=9) "runAsUser": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 78
              }
             }
            }
           }
          },
          (string) (len=12) "nodeSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=1) {
             (string) (len=4) "role": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             }
            }
           }
          },
          (string) (len=18) "podMonitorSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          }
         }
        }
       },
       (string) (len=10) "apiVersion": (cty.Type) {
        typeImpl: (cty.primitiveType) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         Kind: (cty.primitiveTypeKind) 83
        }
       },
       (string) (len=4) "kind": (cty.Type) {
        typeImpl: (cty.primitiveType) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         Kind: (cty.primitiveTypeKind) 83
        }
       }
      }
     }
    },
    (string) (len=8) "wait_for": (cty.Type) {
     typeImpl: (cty.typeObject) {
      typeImplSigil: (cty.typeImplSigil) {
      },
      AttrTypes: (map[string]cty.Type) (len=1) {
       (string) (len=6) "fields": (cty.Type) {
        typeImpl: (cty.typeMap) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         ElementTypeT: (cty.Type) {
          typeImpl: (cty.primitiveType) {
           typeImplSigil: (cty.typeImplSigil) {
           },
           Kind: (cty.primitiveTypeKind) 83
          }
         }
        }
       }
      }
     }
    }
   }
  }
 },
 v: (map[string]interface {}) (len=3) {
  (string) (len=8) "manifest": (map[string]interface {}) (len=4) {
   (string) (len=8) "metadata": (map[string]interface {}) (len=2) {
    (string) (len=9) "namespace": (string) (len=15) "test-operator-1",
    (string) (len=4) "name": (string) (len=6) "test-1"
   },
   (string) (len=4) "spec": (map[string]interface {}) (len=21) {
    (string) (len=8) "replicas": (*big.Float)(0xc0004d1e60)(1),
    (string) (len=31) "serviceMonitorNamespaceSelector": (map[string]interface {}) {
    },
    (string) (len=13) "probeSelector": (map[string]interface {}) {
    },
    (string) (len=7) "version": (string) (len=7) "v2.25.2",
    (string) (len=22) "serviceMonitorSelector": (map[string]interface {}) {
    },
    (string) (len=15) "securityContext": (map[string]interface {}) (len=3) {
     (string) (len=12) "runAsNonRoot": (bool) true,
     (string) (len=9) "runAsUser": (*big.Float)(0xc0005b8180)(1000),
     (string) (len=7) "fsGroup": (*big.Float)(0xc0005b8150)(2000)
    },
    (string) (len=9) "resources": (map[string]interface {}) (len=2) {
     (string) (len=6) "limits": (map[string]interface {}) (len=2) {
      (string) (len=6) "memory": (string) (len=5) "512Mi",
      (string) (len=3) "cpu": (string) (len=4) "250m"
     },
     (string) (len=8) "requests": (map[string]interface {}) (len=2) {
      (string) (len=3) "cpu": (string) (len=4) "200m",
      (string) (len=6) "memory": (string) (len=5) "200Mi"
     }
    },
    (string) (len=23) "additionalScrapeConfigs": (map[string]interface {}) (len=2) {
     (string) (len=4) "name": (string) (len=25) "additional-scrape-configs",
     (string) (len=3) "key": (string) (len=26) "prometheus-additional.yaml"
    },
    (string) (len=12) "nodeSelector": (map[string]interface {}) (len=1) {
     (string) (len=4) "role": (string) (len=8) "services"
    },
    (string) (len=5) "image": (string) (len=37) "quay.io/prometheus/prometheus:v2.25.2",
    (string) (len=6) "thanos": (map[string]interface {}) (len=3) {
     (string) (len=9) "baseImage": (string) (len=21) "quay.io/thanos/thanos",
     (string) (len=19) "objectStorageConfig": (map[string]interface {}) (len=2) {
      (string) (len=4) "name": (string) (len=22) "thanos-objstore-config",
      (string) (len=3) "key": (string) (len=11) "thanos.yaml"
     },
     (string) (len=7) "version": (string) (len=7) "v0.16.0"
    },
    (string) (len=18) "podMonitorSelector": (map[string]interface {}) {
    },
    (string) (len=18) "serviceAccountName": (string) (len=14) "prometheus-k8s",
    (string) (len=12) "ruleSelector": (map[string]interface {}) (len=1) {
     (string) (len=11) "matchLabels": (map[string]interface {}) (len=2) {
      (string) (len=4) "role": (string) (len=11) "alert-rules",
      (string) (len=10) "prometheus": (string) (len=3) "k8s"
     }
    },
    (string) (len=9) "namespace": (string) (len=15) "test-operator-1",
    (string) (len=7) "storage": (map[string]interface {}) (len=1) {
     (string) (len=19) "volumeClaimTemplate": (map[string]interface {}) (len=1) {
      (string) (len=4) "spec": (map[string]interface {}) (len=2) {
       (string) (len=9) "resources": (map[string]interface {}) (len=1) {
        (string) (len=8) "requests": (map[string]interface {}) (len=1) {
         (string) (len=7) "storage": (string) (len=4) "10Gi"
        }
       },
       (string) (len=16) "storageClassName": (string) (len=3) "gp2"
      }
     }
    },
    (string) (len=22) "probeNamespaceSelector": (map[string]interface {}) {
    },
    (string) (len=14) "externalLabels": (map[string]interface {}) (len=2) {
     (string) (len=7) "cluster": (string) (len=12) "my-cluster-2",
     (string) (len=7) "product": (string) (len=13) "api beep boop"
    },
    (string) (len=8) "alerting": (map[string]interface {}) (len=1) {
     (string) (len=13) "alertmanagers": ([]interface {}) (len=1 cap=1) {
      (map[string]interface {}) (len=3) {
       (string) (len=4) "name": (string) (len=17) "alertmanager-main",
       (string) (len=9) "namespace": (string) (len=10) "monitoring",
       (string) (len=4) "port": (string) (len=3) "web"
      }
     }
    },
    (string) (len=4) "name": (string) (len=6) "test-1",
    (string) (len=27) "podMonitorNamespaceSelector": (map[string]interface {}) {
    }
   },
   (string) (len=10) "apiVersion": (string) (len=24) "monitoring.coreos.com/v1",
   (string) (len=4) "kind": (string) (len=10) "Prometheus"
  },
  (string) (len=6) "object": (map[string]interface {}) (len=4) {
   (string) (len=10) "apiVersion": (string) (len=24) "monitoring.coreos.com/v1",
   (string) (len=4) "kind": (string) (len=10) "Prometheus",
   (string) (len=8) "metadata": (map[string]interface {}) (len=2) {
    (string) (len=4) "name": (string) (len=6) "test-1",
    (string) (len=9) "namespace": (string) (len=15) "test-operator-1"
   },
   (string) (len=4) "spec": (map[string]interface {}) (len=19) {
    (string) (len=14) "externalLabels": (map[string]interface {}) (len=2) {
     (string) (len=7) "product": (string) (len=13) "api beep boop",
     (string) (len=7) "cluster": (string) (len=12) "my-cluster-2"
    },
    (string) (len=12) "ruleSelector": (map[string]interface {}) (len=1) {
     (string) (len=11) "matchLabels": (map[string]interface {}) (len=2) {
      (string) (len=10) "prometheus": (string) (len=3) "k8s",
      (string) (len=4) "role": (string) (len=11) "alert-rules"
     }
    },
    (string) (len=15) "securityContext": (map[string]interface {}) (len=3) {
     (string) (len=9) "runAsUser": (*big.Float)(0xc00059aed0)(1000),
     (string) (len=7) "fsGroup": (*big.Float)(0xc00059ae40)(2000),
     (string) (len=12) "runAsNonRoot": (bool) true
    },
    (string) (len=22) "serviceMonitorSelector": (map[string]interface {}) {
    },
    (string) (len=7) "storage": (map[string]interface {}) (len=1) {
     (string) (len=19) "volumeClaimTemplate": (map[string]interface {}) (len=1) {
      (string) (len=4) "spec": (map[string]interface {}) (len=2) {
       (string) (len=9) "resources": (map[string]interface {}) (len=1) {
        (string) (len=8) "requests": (map[string]interface {}) (len=1) {
         (string) (len=7) "storage": (string) (len=4) "10Gi"
        }
       },
       (string) (len=16) "storageClassName": (string) (len=3) "gp2"
      }
     }
    },
    (string) (len=31) "serviceMonitorNamespaceSelector": (map[string]interface {}) {
    },
    (string) (len=6) "thanos": (map[string]interface {}) (len=3) {
     (string) (len=7) "version": (string) (len=7) "v0.16.0",
     (string) (len=9) "baseImage": (string) (len=21) "quay.io/thanos/thanos",
     (string) (len=19) "objectStorageConfig": (map[string]interface {}) (len=2) {
      (string) (len=3) "key": (string) (len=11) "thanos.yaml",
      (string) (len=4) "name": (string) (len=22) "thanos-objstore-config"
     }
    },
    (string) (len=18) "serviceAccountName": (string) (len=14) "prometheus-k8s",
    (string) (len=18) "podMonitorSelector": (map[string]interface {}) {
    },
    (string) (len=22) "probeNamespaceSelector": (map[string]interface {}) {
    },
    (string) (len=7) "version": (string) (len=7) "v2.25.2",
    (string) (len=9) "resources": (map[string]interface {}) (len=2) {
     (string) (len=6) "limits": (map[string]interface {}) (len=2) {
      (string) (len=3) "cpu": (string) (len=4) "250m",
      (string) (len=6) "memory": (string) (len=5) "512Mi"
     },
     (string) (len=8) "requests": (map[string]interface {}) (len=2) {
      (string) (len=3) "cpu": (string) (len=4) "200m",
      (string) (len=6) "memory": (string) (len=5) "200Mi"
     }
    },
    (string) (len=23) "additionalScrapeConfigs": (map[string]interface {}) (len=2) {
     (string) (len=4) "name": (string) (len=25) "additional-scrape-configs",
     (string) (len=3) "key": (string) (len=26) "prometheus-additional.yaml"
    },
    (string) (len=27) "podMonitorNamespaceSelector": (map[string]interface {}) {
    },
    (string) (len=5) "image": (string) (len=37) "quay.io/prometheus/prometheus:v2.25.2",
    (string) (len=13) "probeSelector": (map[string]interface {}) {
    },
    (string) (len=8) "alerting": (map[string]interface {}) (len=1) {
     (string) (len=13) "alertmanagers": ([]interface {}) (len=1 cap=1) {
      (map[string]interface {}) (len=3) {
       (string) (len=4) "name": (string) (len=17) "alertmanager-main",
       (string) (len=9) "namespace": (string) (len=10) "monitoring",
       (string) (len=4) "port": (string) (len=3) "web"
      }
     }
    },
    (string) (len=12) "nodeSelector": (map[string]interface {}) (len=1) {
     (string) (len=4) "role": (string) (len=8) "services"
    },
    (string) (len=8) "replicas": (*big.Float)(0xc00059a8a0)(1)
   }
  },
  (string) (len=8) "wait_for": (interface {}) <nil>
 }
}
RAW provider 2021/04/03 23:34:34 Finished
RAW provider 2021/04/03 23:40:00 Starting up with command line: []string{".terraform/providers/registry.terraform.io/hashicorp/kubernetes-alpha/0.2.1/darwin_amd64/terraform-provider-kubernetes-alpha_v0.2.1_x5"}
RAW provider 2021/04/03 23:40:00 Finished
RAW provider 2021/04/03 23:40:00 Starting up with command line: []string{".terraform/providers/registry.terraform.io/hashicorp/kubernetes-alpha/0.2.1/darwin_amd64/terraform-provider-kubernetes-alpha_v0.2.1_x5"}
RAW provider 2021/04/03 23:40:01 Finished
RAW provider 2021/04/03 23:40:02 Starting up with command line: []string{".terraform/providers/registry.terraform.io/hashicorp/kubernetes-alpha/0.2.1/darwin_amd64/terraform-provider-kubernetes-alpha_v0.2.1_x5"}
RAW provider 2021/04/03 23:40:02 [Configure][ClientConfig] (rest.Config) &rest.Config{Host:"https://5BE469949E293A3A880C6FE683A7079F.gr7.us-east-1.eks.amazonaws.com", APIPath:"", ContentConfig:rest.ContentConfig{AcceptContentTypes:"", ContentType:"", GroupVersion:(*schema.GroupVersion)(nil), NegotiatedSerializer:runtime.NegotiatedSerializer(nil)}, Username:"", Password:"", BearerToken:"--- REDACTED ---", BearerTokenFile:"", Impersonate:rest.ImpersonationConfig{UserName:"", Groups:[]string(nil), Extra:map[string][]string(nil)}, AuthProvider:<nil>, AuthConfigPersister:rest.AuthProviderConfigPersister(nil), ExecProvider:<nil>, TLSClientConfig:rest.sanitizedTLSClientConfig{Insecure:false, ServerName:"", CertFile:"", KeyFile:"", CAFile:"", CertData:[]uint8(nil), KeyData:[]uint8(nil), CAData:[]uint8{0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x42, 0x45, 0x47, 0x49, 0x4e, 0x20, 0x43, 0x45, 0x52, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x45, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0xa, 0x4d, 0x49, 0x49, 0x43, 0x79, 0x44, 0x43, 0x43, 0x41, 0x62, 0x43, 0x67, 0x41, 0x77, 0x49, 0x42, 0x41, 0x67, 0x49, 0x42, 0x41, 0x44, 0x41, 0x4e, 0x42, 0x67, 0x6b, 0x71, 0x68, 0x6b, 0x69, 0x47, 0x39, 0x77, 0x30, 0x42, 0x41, 0x51, 0x73, 0x46, 0x41, 0x44, 0x41, 0x56, 0x4d, 0x52, 0x4d, 0x77, 0x45, 0x51, 0x59, 0x44, 0x56, 0x51, 0x51, 0x44, 0x45, 0x77, 0x70, 0x72, 0x64, 0x57, 0x4a, 0x6c, 0xa, 0x63, 0x6d, 0x35, 0x6c, 0x64, 0x47, 0x56, 0x7a, 0x4d, 0x42, 0x34, 0x58, 0x44, 0x54, 0x49, 0x77, 0x4d, 0x54, 0x41, 0x79, 0x4d, 0x54, 0x49, 0x78, 0x4e, 0x44, 0x63, 0x77, 0x4e, 0x46, 0x6f, 0x58, 0x44, 0x54, 0x4d, 0x77, 0x4d, 0x54, 0x41, 0x78, 0x4f, 0x54, 0x49, 0x78, 0x4e, 0x44, 0x63, 0x77, 0x4e, 0x46, 0x6f, 0x77, 0x46, 0x54, 0x45, 0x54, 0x4d, 0x42, 0x45, 0x47, 0x41, 0x31, 0x55, 0x45, 0xa, 0x41, 0x78, 0x4d, 0x4b, 0x61, 0x33, 0x56, 0x69, 0x5a, 0x58, 0x4a, 0x75, 0x5a, 0x58, 0x52, 0x6c, 0x63, 0x7a, 0x43, 0x43, 0x41, 0x53, 0x49, 0x77, 0x44, 0x51, 0x59, 0x4a, 0x4b, 0x6f, 0x5a, 0x49, 0x68, 0x76, 0x63, 0x4e, 0x41, 0x51, 0x45, 0x42, 0x42, 0x51, 0x41, 0x44, 0x67, 0x67, 0x45, 0x50, 0x41, 0x44, 0x43, 0x43, 0x41, 0x51, 0x6f, 0x43, 0x67, 0x67, 0x45, 0x42, 0x41, 0x4c, 0x42, 0x62, 0xa, 0x50, 0x46, 0x2b, 0x39, 0x30, 0x52, 0x6f, 0x67, 0x48, 0x58, 0x41, 0x79, 0x46, 0x56, 0x74, 0x41, 0x2b, 0x7a, 0x43, 0x46, 0x6d, 0x33, 0x56, 0x53, 0x31, 0x61, 0x59, 0x59, 0x79, 0x4c, 0x7a, 0x2f, 0x32, 0x51, 0x48, 0x76, 0x37, 0x4a, 0x65, 0x45, 0x48, 0x71, 0x49, 0x77, 0x66, 0x63, 0x75, 0x7a, 0x56, 0x71, 0x58, 0x38, 0x66, 0x4b, 0x70, 0x33, 0x68, 0x4c, 0x79, 0x79, 0x62, 0x6b, 0x2f, 0x64, 0xa, 0x55, 0x47, 0x49, 0x45, 0x41, 0x30, 0x75, 0x54, 0x6a, 0x4c, 0x67, 0x67, 0x71, 0x66, 0x66, 0x6f, 0x65, 0x6f, 0x31, 0x38, 0x7a, 0x35, 0x48, 0x4a, 0x6e, 0x73, 0x41, 0x6f, 0x6b, 0x43, 0x38, 0x64, 0x7a, 0x70, 0x5a, 0x43, 0x6b, 0x67, 0x31, 0x73, 0x78, 0x45, 0x79, 0x62, 0x2f, 0x2b, 0x39, 0x6d, 0x31, 0x69, 0x49, 0x67, 0x56, 0x33, 0x59, 0x39, 0x74, 0x48, 0x44, 0x45, 0x59, 0x4a, 0x6c, 0x37, 0xa, 0x56, 0x77, 0x51, 0x68, 0x70, 0x38, 0x48, 0x6e, 0x33, 0x46, 0x49, 0x2f, 0x4a, 0x63, 0x77, 0x44, 0x49, 0x6b, 0x55, 0x36, 0x45, 0x6a, 0x65, 0x46, 0x30, 0x71, 0x4c, 0x4b, 0x42, 0x75, 0x54, 0x31, 0x6e, 0x66, 0x45, 0x74, 0x6f, 0x68, 0x54, 0x4e, 0x37, 0x78, 0x70, 0x4e, 0x43, 0x76, 0x44, 0x61, 0x36, 0x44, 0x53, 0x32, 0x4c, 0x54, 0x57, 0x39, 0x6f, 0x6e, 0x74, 0x6d, 0x4b, 0x79, 0x45, 0x47, 0xa, 0x78, 0x6c, 0x73, 0x78, 0x74, 0x6b, 0x64, 0x47, 0x45, 0x37, 0x79, 0x55, 0x55, 0x67, 0x77, 0x52, 0x53, 0x72, 0x79, 0x6a, 0x41, 0x65, 0x76, 0x41, 0x79, 0x5a, 0x64, 0x37, 0x71, 0x45, 0x72, 0x67, 0x74, 0x41, 0x56, 0x6c, 0x35, 0x70, 0x44, 0x46, 0x48, 0x30, 0x74, 0x42, 0x48, 0x53, 0x74, 0x67, 0x6b, 0x41, 0x51, 0x59, 0x57, 0x48, 0x77, 0x78, 0x62, 0x62, 0x79, 0x70, 0x59, 0x37, 0x33, 0x4c, 0xa, 0x5a, 0x43, 0x51, 0x73, 0x2b, 0x4c, 0x35, 0x44, 0x6d, 0x67, 0x2f, 0x43, 0x6e, 0x57, 0x31, 0x75, 0x62, 0x47, 0x46, 0x32, 0x59, 0x75, 0x47, 0x33, 0x79, 0x46, 0x59, 0x4b, 0x31, 0x6c, 0x32, 0x4e, 0x46, 0x78, 0x2f, 0x74, 0x67, 0x48, 0x71, 0x4e, 0x78, 0x56, 0x48, 0x6a, 0x31, 0x53, 0x42, 0x5a, 0x32, 0x41, 0x54, 0x76, 0x61, 0x4b, 0x47, 0x6f, 0x6c, 0x56, 0x35, 0x53, 0x69, 0x57, 0x33, 0x49, 0xa, 0x68, 0x45, 0x46, 0x46, 0x2b, 0x77, 0x4b, 0x50, 0x73, 0x63, 0x46, 0x59, 0x4f, 0x49, 0x76, 0x53, 0x4d, 0x44, 0x38, 0x43, 0x41, 0x77, 0x45, 0x41, 0x41, 0x61, 0x4d, 0x6a, 0x4d, 0x43, 0x45, 0x77, 0x44, 0x67, 0x59, 0x44, 0x56, 0x52, 0x30, 0x50, 0x41, 0x51, 0x48, 0x2f, 0x42, 0x41, 0x51, 0x44, 0x41, 0x67, 0x4b, 0x6b, 0x4d, 0x41, 0x38, 0x47, 0x41, 0x31, 0x55, 0x64, 0x45, 0x77, 0x45, 0x42, 0xa, 0x2f, 0x77, 0x51, 0x46, 0x4d, 0x41, 0x4d, 0x42, 0x41, 0x66, 0x38, 0x77, 0x44, 0x51, 0x59, 0x4a, 0x4b, 0x6f, 0x5a, 0x49, 0x68, 0x76, 0x63, 0x4e, 0x41, 0x51, 0x45, 0x4c, 0x42, 0x51, 0x41, 0x44, 0x67, 0x67, 0x45, 0x42, 0x41, 0x46, 0x2b, 0x59, 0x44, 0x46, 0x31, 0x4e, 0x4b, 0x65, 0x6f, 0x41, 0x38, 0x49, 0x72, 0x65, 0x4f, 0x78, 0x4d, 0x2f, 0x4f, 0x45, 0x59, 0x70, 0x54, 0x44, 0x6a, 0x76, 0xa, 0x50, 0x64, 0x55, 0x69, 0x31, 0x61, 0x37, 0x79, 0x75, 0x74, 0x2b, 0x30, 0x39, 0x37, 0x70, 0x36, 0x6f, 0x2f, 0x32, 0x41, 0x53, 0x35, 0x56, 0x52, 0x6a, 0x70, 0x32, 0x57, 0x55, 0x7a, 0x72, 0x4b, 0x79, 0x73, 0x57, 0x75, 0x65, 0x74, 0x55, 0x45, 0x2b, 0x72, 0x6e, 0x41, 0x70, 0x33, 0x39, 0x37, 0x2f, 0x6a, 0x78, 0x75, 0x73, 0x54, 0x78, 0x2f, 0x50, 0x76, 0x58, 0x57, 0x44, 0x34, 0x75, 0x61, 0xa, 0x51, 0x32, 0x7a, 0x49, 0x38, 0x44, 0x59, 0x62, 0x6b, 0x64, 0x75, 0x63, 0x4f, 0x47, 0x67, 0x4a, 0x31, 0x78, 0x61, 0x4e, 0x70, 0x6b, 0x75, 0x62, 0x48, 0x33, 0x64, 0x61, 0x48, 0x59, 0x5a, 0x2b, 0x48, 0x38, 0x71, 0x42, 0x70, 0x2f, 0x74, 0x50, 0x41, 0x42, 0x57, 0x73, 0x32, 0x35, 0x66, 0x78, 0x78, 0x31, 0x53, 0x69, 0x75, 0x38, 0x4e, 0x38, 0x4b, 0x59, 0x4a, 0x2b, 0x32, 0x49, 0x68, 0x75, 0xa, 0x61, 0x64, 0x42, 0x71, 0x61, 0x73, 0x56, 0x4a, 0x6c, 0x79, 0x55, 0x4d, 0x79, 0x50, 0x49, 0x7a, 0x4b, 0x46, 0x36, 0x6e, 0x4c, 0x54, 0x57, 0x66, 0x59, 0x5a, 0x4f, 0x31, 0x76, 0x30, 0x32, 0x36, 0x4b, 0x36, 0x6f, 0x31, 0x63, 0x39, 0x78, 0x63, 0x74, 0x69, 0x77, 0x54, 0x6a, 0x54, 0x59, 0x43, 0x34, 0x7a, 0x38, 0x65, 0x4b, 0x69, 0x41, 0x4c, 0x49, 0x36, 0x33, 0x33, 0x34, 0x74, 0x4e, 0x51, 0xa, 0x33, 0x32, 0x5a, 0x77, 0x4f, 0x75, 0x73, 0x58, 0x6e, 0x4a, 0x33, 0x6b, 0x34, 0x75, 0x42, 0x57, 0x70, 0x79, 0x31, 0x69, 0x39, 0x6f, 0x4e, 0x6b, 0x75, 0x75, 0x48, 0x45, 0x64, 0x69, 0x48, 0x37, 0x36, 0x30, 0x35, 0x4a, 0x31, 0x66, 0x77, 0x57, 0x53, 0x30, 0x63, 0x65, 0x35, 0x67, 0x49, 0x50, 0x35, 0x6a, 0x6e, 0x4e, 0x73, 0x4d, 0x64, 0x61, 0x44, 0x49, 0x2f, 0x39, 0x54, 0x4a, 0x4e, 0x6e, 0xa, 0x70, 0x67, 0x2b, 0x41, 0x58, 0x55, 0x4a, 0x78, 0x46, 0x30, 0x4f, 0x77, 0x50, 0x42, 0x63, 0x45, 0x37, 0x4a, 0x41, 0x43, 0x64, 0x52, 0x6d, 0x58, 0x73, 0x2b, 0x33, 0x78, 0x6c, 0x54, 0x59, 0x4a, 0x76, 0x70, 0x53, 0x75, 0x32, 0x4b, 0x65, 0x6c, 0x4c, 0x55, 0x6a, 0x52, 0x34, 0x5a, 0x4c, 0x72, 0x5a, 0x34, 0x78, 0x39, 0x4c, 0x45, 0x36, 0x54, 0x65, 0x77, 0x34, 0x3d, 0xa, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x45, 0x4e, 0x44, 0x20, 0x43, 0x45, 0x52, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x45, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0xa}, NextProtos:[]string(nil)}, UserAgent:"", DisableCompression:false, Transport:http.RoundTripper(nil), WrapTransport:(transport.WrapperFunc)(nil), QPS:0, Burst:0, RateLimiter:flowcontrol.RateLimiter(nil), Timeout:0, Dial:(func(context.Context, string, string) (net.Conn, error))(nil)}

RAW provider 2021/04/03 23:40:02 Finished
RAW provider 2021/04/03 23:40:30 Starting up with command line: []string{".terraform/providers/registry.terraform.io/hashicorp/kubernetes-alpha/0.2.1/darwin_amd64/terraform-provider-kubernetes-alpha_v0.2.1_x5"}
RAW provider 2021/04/03 23:40:30 Finished
RAW provider 2021/04/03 23:40:30 Starting up with command line: []string{".terraform/providers/registry.terraform.io/hashicorp/kubernetes-alpha/0.2.1/darwin_amd64/terraform-provider-kubernetes-alpha_v0.2.1_x5"}
RAW provider 2021/04/03 23:40:30 Finished
RAW provider 2021/04/03 23:40:32 Starting up with command line: []string{".terraform/providers/registry.terraform.io/hashicorp/kubernetes-alpha/0.2.1/darwin_amd64/terraform-provider-kubernetes-alpha_v0.2.1_x5"}
RAW provider 2021/04/03 23:40:32 [Configure][ClientConfig] (rest.Config) &rest.Config{Host:"https://5BE469949E293A3A880C6FE683A7079F.gr7.us-east-1.eks.amazonaws.com", APIPath:"", ContentConfig:rest.ContentConfig{AcceptContentTypes:"", ContentType:"", GroupVersion:(*schema.GroupVersion)(nil), NegotiatedSerializer:runtime.NegotiatedSerializer(nil)}, Username:"", Password:"", BearerToken:"--- REDACTED ---", BearerTokenFile:"", Impersonate:rest.ImpersonationConfig{UserName:"", Groups:[]string(nil), Extra:map[string][]string(nil)}, AuthProvider:<nil>, AuthConfigPersister:rest.AuthProviderConfigPersister(nil), ExecProvider:<nil>, TLSClientConfig:rest.sanitizedTLSClientConfig{Insecure:false, ServerName:"", CertFile:"", KeyFile:"", CAFile:"", CertData:[]uint8(nil), KeyData:[]uint8(nil), CAData:[]uint8{0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x42, 0x45, 0x47, 0x49, 0x4e, 0x20, 0x43, 0x45, 0x52, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x45, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0xa, 0x4d, 0x49, 0x49, 0x43, 0x79, 0x44, 0x43, 0x43, 0x41, 0x62, 0x43, 0x67, 0x41, 0x77, 0x49, 0x42, 0x41, 0x67, 0x49, 0x42, 0x41, 0x44, 0x41, 0x4e, 0x42, 0x67, 0x6b, 0x71, 0x68, 0x6b, 0x69, 0x47, 0x39, 0x77, 0x30, 0x42, 0x41, 0x51, 0x73, 0x46, 0x41, 0x44, 0x41, 0x56, 0x4d, 0x52, 0x4d, 0x77, 0x45, 0x51, 0x59, 0x44, 0x56, 0x51, 0x51, 0x44, 0x45, 0x77, 0x70, 0x72, 0x64, 0x57, 0x4a, 0x6c, 0xa, 0x63, 0x6d, 0x35, 0x6c, 0x64, 0x47, 0x56, 0x7a, 0x4d, 0x42, 0x34, 0x58, 0x44, 0x54, 0x49, 0x77, 0x4d, 0x54, 0x41, 0x79, 0x4d, 0x54, 0x49, 0x78, 0x4e, 0x44, 0x63, 0x77, 0x4e, 0x46, 0x6f, 0x58, 0x44, 0x54, 0x4d, 0x77, 0x4d, 0x54, 0x41, 0x78, 0x4f, 0x54, 0x49, 0x78, 0x4e, 0x44, 0x63, 0x77, 0x4e, 0x46, 0x6f, 0x77, 0x46, 0x54, 0x45, 0x54, 0x4d, 0x42, 0x45, 0x47, 0x41, 0x31, 0x55, 0x45, 0xa, 0x41, 0x78, 0x4d, 0x4b, 0x61, 0x33, 0x56, 0x69, 0x5a, 0x58, 0x4a, 0x75, 0x5a, 0x58, 0x52, 0x6c, 0x63, 0x7a, 0x43, 0x43, 0x41, 0x53, 0x49, 0x77, 0x44, 0x51, 0x59, 0x4a, 0x4b, 0x6f, 0x5a, 0x49, 0x68, 0x76, 0x63, 0x4e, 0x41, 0x51, 0x45, 0x42, 0x42, 0x51, 0x41, 0x44, 0x67, 0x67, 0x45, 0x50, 0x41, 0x44, 0x43, 0x43, 0x41, 0x51, 0x6f, 0x43, 0x67, 0x67, 0x45, 0x42, 0x41, 0x4c, 0x42, 0x62, 0xa, 0x50, 0x46, 0x2b, 0x39, 0x30, 0x52, 0x6f, 0x67, 0x48, 0x58, 0x41, 0x79, 0x46, 0x56, 0x74, 0x41, 0x2b, 0x7a, 0x43, 0x46, 0x6d, 0x33, 0x56, 0x53, 0x31, 0x61, 0x59, 0x59, 0x79, 0x4c, 0x7a, 0x2f, 0x32, 0x51, 0x48, 0x76, 0x37, 0x4a, 0x65, 0x45, 0x48, 0x71, 0x49, 0x77, 0x66, 0x63, 0x75, 0x7a, 0x56, 0x71, 0x58, 0x38, 0x66, 0x4b, 0x70, 0x33, 0x68, 0x4c, 0x79, 0x79, 0x62, 0x6b, 0x2f, 0x64, 0xa, 0x55, 0x47, 0x49, 0x45, 0x41, 0x30, 0x75, 0x54, 0x6a, 0x4c, 0x67, 0x67, 0x71, 0x66, 0x66, 0x6f, 0x65, 0x6f, 0x31, 0x38, 0x7a, 0x35, 0x48, 0x4a, 0x6e, 0x73, 0x41, 0x6f, 0x6b, 0x43, 0x38, 0x64, 0x7a, 0x70, 0x5a, 0x43, 0x6b, 0x67, 0x31, 0x73, 0x78, 0x45, 0x79, 0x62, 0x2f, 0x2b, 0x39, 0x6d, 0x31, 0x69, 0x49, 0x67, 0x56, 0x33, 0x59, 0x39, 0x74, 0x48, 0x44, 0x45, 0x59, 0x4a, 0x6c, 0x37, 0xa, 0x56, 0x77, 0x51, 0x68, 0x70, 0x38, 0x48, 0x6e, 0x33, 0x46, 0x49, 0x2f, 0x4a, 0x63, 0x77, 0x44, 0x49, 0x6b, 0x55, 0x36, 0x45, 0x6a, 0x65, 0x46, 0x30, 0x71, 0x4c, 0x4b, 0x42, 0x75, 0x54, 0x31, 0x6e, 0x66, 0x45, 0x74, 0x6f, 0x68, 0x54, 0x4e, 0x37, 0x78, 0x70, 0x4e, 0x43, 0x76, 0x44, 0x61, 0x36, 0x44, 0x53, 0x32, 0x4c, 0x54, 0x57, 0x39, 0x6f, 0x6e, 0x74, 0x6d, 0x4b, 0x79, 0x45, 0x47, 0xa, 0x78, 0x6c, 0x73, 0x78, 0x74, 0x6b, 0x64, 0x47, 0x45, 0x37, 0x79, 0x55, 0x55, 0x67, 0x77, 0x52, 0x53, 0x72, 0x79, 0x6a, 0x41, 0x65, 0x76, 0x41, 0x79, 0x5a, 0x64, 0x37, 0x71, 0x45, 0x72, 0x67, 0x74, 0x41, 0x56, 0x6c, 0x35, 0x70, 0x44, 0x46, 0x48, 0x30, 0x74, 0x42, 0x48, 0x53, 0x74, 0x67, 0x6b, 0x41, 0x51, 0x59, 0x57, 0x48, 0x77, 0x78, 0x62, 0x62, 0x79, 0x70, 0x59, 0x37, 0x33, 0x4c, 0xa, 0x5a, 0x43, 0x51, 0x73, 0x2b, 0x4c, 0x35, 0x44, 0x6d, 0x67, 0x2f, 0x43, 0x6e, 0x57, 0x31, 0x75, 0x62, 0x47, 0x46, 0x32, 0x59, 0x75, 0x47, 0x33, 0x79, 0x46, 0x59, 0x4b, 0x31, 0x6c, 0x32, 0x4e, 0x46, 0x78, 0x2f, 0x74, 0x67, 0x48, 0x71, 0x4e, 0x78, 0x56, 0x48, 0x6a, 0x31, 0x53, 0x42, 0x5a, 0x32, 0x41, 0x54, 0x76, 0x61, 0x4b, 0x47, 0x6f, 0x6c, 0x56, 0x35, 0x53, 0x69, 0x57, 0x33, 0x49, 0xa, 0x68, 0x45, 0x46, 0x46, 0x2b, 0x77, 0x4b, 0x50, 0x73, 0x63, 0x46, 0x59, 0x4f, 0x49, 0x76, 0x53, 0x4d, 0x44, 0x38, 0x43, 0x41, 0x77, 0x45, 0x41, 0x41, 0x61, 0x4d, 0x6a, 0x4d, 0x43, 0x45, 0x77, 0x44, 0x67, 0x59, 0x44, 0x56, 0x52, 0x30, 0x50, 0x41, 0x51, 0x48, 0x2f, 0x42, 0x41, 0x51, 0x44, 0x41, 0x67, 0x4b, 0x6b, 0x4d, 0x41, 0x38, 0x47, 0x41, 0x31, 0x55, 0x64, 0x45, 0x77, 0x45, 0x42, 0xa, 0x2f, 0x77, 0x51, 0x46, 0x4d, 0x41, 0x4d, 0x42, 0x41, 0x66, 0x38, 0x77, 0x44, 0x51, 0x59, 0x4a, 0x4b, 0x6f, 0x5a, 0x49, 0x68, 0x76, 0x63, 0x4e, 0x41, 0x51, 0x45, 0x4c, 0x42, 0x51, 0x41, 0x44, 0x67, 0x67, 0x45, 0x42, 0x41, 0x46, 0x2b, 0x59, 0x44, 0x46, 0x31, 0x4e, 0x4b, 0x65, 0x6f, 0x41, 0x38, 0x49, 0x72, 0x65, 0x4f, 0x78, 0x4d, 0x2f, 0x4f, 0x45, 0x59, 0x70, 0x54, 0x44, 0x6a, 0x76, 0xa, 0x50, 0x64, 0x55, 0x69, 0x31, 0x61, 0x37, 0x79, 0x75, 0x74, 0x2b, 0x30, 0x39, 0x37, 0x70, 0x36, 0x6f, 0x2f, 0x32, 0x41, 0x53, 0x35, 0x56, 0x52, 0x6a, 0x70, 0x32, 0x57, 0x55, 0x7a, 0x72, 0x4b, 0x79, 0x73, 0x57, 0x75, 0x65, 0x74, 0x55, 0x45, 0x2b, 0x72, 0x6e, 0x41, 0x70, 0x33, 0x39, 0x37, 0x2f, 0x6a, 0x78, 0x75, 0x73, 0x54, 0x78, 0x2f, 0x50, 0x76, 0x58, 0x57, 0x44, 0x34, 0x75, 0x61, 0xa, 0x51, 0x32, 0x7a, 0x49, 0x38, 0x44, 0x59, 0x62, 0x6b, 0x64, 0x75, 0x63, 0x4f, 0x47, 0x67, 0x4a, 0x31, 0x78, 0x61, 0x4e, 0x70, 0x6b, 0x75, 0x62, 0x48, 0x33, 0x64, 0x61, 0x48, 0x59, 0x5a, 0x2b, 0x48, 0x38, 0x71, 0x42, 0x70, 0x2f, 0x74, 0x50, 0x41, 0x42, 0x57, 0x73, 0x32, 0x35, 0x66, 0x78, 0x78, 0x31, 0x53, 0x69, 0x75, 0x38, 0x4e, 0x38, 0x4b, 0x59, 0x4a, 0x2b, 0x32, 0x49, 0x68, 0x75, 0xa, 0x61, 0x64, 0x42, 0x71, 0x61, 0x73, 0x56, 0x4a, 0x6c, 0x79, 0x55, 0x4d, 0x79, 0x50, 0x49, 0x7a, 0x4b, 0x46, 0x36, 0x6e, 0x4c, 0x54, 0x57, 0x66, 0x59, 0x5a, 0x4f, 0x31, 0x76, 0x30, 0x32, 0x36, 0x4b, 0x36, 0x6f, 0x31, 0x63, 0x39, 0x78, 0x63, 0x74, 0x69, 0x77, 0x54, 0x6a, 0x54, 0x59, 0x43, 0x34, 0x7a, 0x38, 0x65, 0x4b, 0x69, 0x41, 0x4c, 0x49, 0x36, 0x33, 0x33, 0x34, 0x74, 0x4e, 0x51, 0xa, 0x33, 0x32, 0x5a, 0x77, 0x4f, 0x75, 0x73, 0x58, 0x6e, 0x4a, 0x33, 0x6b, 0x34, 0x75, 0x42, 0x57, 0x70, 0x79, 0x31, 0x69, 0x39, 0x6f, 0x4e, 0x6b, 0x75, 0x75, 0x48, 0x45, 0x64, 0x69, 0x48, 0x37, 0x36, 0x30, 0x35, 0x4a, 0x31, 0x66, 0x77, 0x57, 0x53, 0x30, 0x63, 0x65, 0x35, 0x67, 0x49, 0x50, 0x35, 0x6a, 0x6e, 0x4e, 0x73, 0x4d, 0x64, 0x61, 0x44, 0x49, 0x2f, 0x39, 0x54, 0x4a, 0x4e, 0x6e, 0xa, 0x70, 0x67, 0x2b, 0x41, 0x58, 0x55, 0x4a, 0x78, 0x46, 0x30, 0x4f, 0x77, 0x50, 0x42, 0x63, 0x45, 0x37, 0x4a, 0x41, 0x43, 0x64, 0x52, 0x6d, 0x58, 0x73, 0x2b, 0x33, 0x78, 0x6c, 0x54, 0x59, 0x4a, 0x76, 0x70, 0x53, 0x75, 0x32, 0x4b, 0x65, 0x6c, 0x4c, 0x55, 0x6a, 0x52, 0x34, 0x5a, 0x4c, 0x72, 0x5a, 0x34, 0x78, 0x39, 0x4c, 0x45, 0x36, 0x54, 0x65, 0x77, 0x34, 0x3d, 0xa, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x45, 0x4e, 0x44, 0x20, 0x43, 0x45, 0x52, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x45, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0xa}, NextProtos:[]string(nil)}, UserAgent:"", DisableCompression:false, Transport:http.RoundTripper(nil), WrapTransport:(transport.WrapperFunc)(nil), QPS:0, Burst:0, RateLimiter:flowcontrol.RateLimiter(nil), Timeout:0, Dial:(func(context.Context, string, string) (net.Conn, error))(nil)}

RAW provider 2021/04/03 23:40:37 Finished
RAW provider 2021/04/03 23:40:37 Starting up with command line: []string{".terraform/providers/registry.terraform.io/hashicorp/kubernetes-alpha/0.2.1/darwin_amd64/terraform-provider-kubernetes-alpha_v0.2.1_x5"}
RAW provider 2021/04/03 23:40:37 [Configure][ClientConfig] (rest.Config) &rest.Config{Host:"https://5BE469949E293A3A880C6FE683A7079F.gr7.us-east-1.eks.amazonaws.com", APIPath:"", ContentConfig:rest.ContentConfig{AcceptContentTypes:"", ContentType:"", GroupVersion:(*schema.GroupVersion)(nil), NegotiatedSerializer:runtime.NegotiatedSerializer(nil)}, Username:"", Password:"", BearerToken:"--- REDACTED ---", BearerTokenFile:"", Impersonate:rest.ImpersonationConfig{UserName:"", Groups:[]string(nil), Extra:map[string][]string(nil)}, AuthProvider:<nil>, AuthConfigPersister:rest.AuthProviderConfigPersister(nil), ExecProvider:<nil>, TLSClientConfig:rest.sanitizedTLSClientConfig{Insecure:false, ServerName:"", CertFile:"", KeyFile:"", CAFile:"", CertData:[]uint8(nil), KeyData:[]uint8(nil), CAData:[]uint8{0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x42, 0x45, 0x47, 0x49, 0x4e, 0x20, 0x43, 0x45, 0x52, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x45, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0xa, 0x4d, 0x49, 0x49, 0x43, 0x79, 0x44, 0x43, 0x43, 0x41, 0x62, 0x43, 0x67, 0x41, 0x77, 0x49, 0x42, 0x41, 0x67, 0x49, 0x42, 0x41, 0x44, 0x41, 0x4e, 0x42, 0x67, 0x6b, 0x71, 0x68, 0x6b, 0x69, 0x47, 0x39, 0x77, 0x30, 0x42, 0x41, 0x51, 0x73, 0x46, 0x41, 0x44, 0x41, 0x56, 0x4d, 0x52, 0x4d, 0x77, 0x45, 0x51, 0x59, 0x44, 0x56, 0x51, 0x51, 0x44, 0x45, 0x77, 0x70, 0x72, 0x64, 0x57, 0x4a, 0x6c, 0xa, 0x63, 0x6d, 0x35, 0x6c, 0x64, 0x47, 0x56, 0x7a, 0x4d, 0x42, 0x34, 0x58, 0x44, 0x54, 0x49, 0x77, 0x4d, 0x54, 0x41, 0x79, 0x4d, 0x54, 0x49, 0x78, 0x4e, 0x44, 0x63, 0x77, 0x4e, 0x46, 0x6f, 0x58, 0x44, 0x54, 0x4d, 0x77, 0x4d, 0x54, 0x41, 0x78, 0x4f, 0x54, 0x49, 0x78, 0x4e, 0x44, 0x63, 0x77, 0x4e, 0x46, 0x6f, 0x77, 0x46, 0x54, 0x45, 0x54, 0x4d, 0x42, 0x45, 0x47, 0x41, 0x31, 0x55, 0x45, 0xa, 0x41, 0x78, 0x4d, 0x4b, 0x61, 0x33, 0x56, 0x69, 0x5a, 0x58, 0x4a, 0x75, 0x5a, 0x58, 0x52, 0x6c, 0x63, 0x7a, 0x43, 0x43, 0x41, 0x53, 0x49, 0x77, 0x44, 0x51, 0x59, 0x4a, 0x4b, 0x6f, 0x5a, 0x49, 0x68, 0x76, 0x63, 0x4e, 0x41, 0x51, 0x45, 0x42, 0x42, 0x51, 0x41, 0x44, 0x67, 0x67, 0x45, 0x50, 0x41, 0x44, 0x43, 0x43, 0x41, 0x51, 0x6f, 0x43, 0x67, 0x67, 0x45, 0x42, 0x41, 0x4c, 0x42, 0x62, 0xa, 0x50, 0x46, 0x2b, 0x39, 0x30, 0x52, 0x6f, 0x67, 0x48, 0x58, 0x41, 0x79, 0x46, 0x56, 0x74, 0x41, 0x2b, 0x7a, 0x43, 0x46, 0x6d, 0x33, 0x56, 0x53, 0x31, 0x61, 0x59, 0x59, 0x79, 0x4c, 0x7a, 0x2f, 0x32, 0x51, 0x48, 0x76, 0x37, 0x4a, 0x65, 0x45, 0x48, 0x71, 0x49, 0x77, 0x66, 0x63, 0x75, 0x7a, 0x56, 0x71, 0x58, 0x38, 0x66, 0x4b, 0x70, 0x33, 0x68, 0x4c, 0x79, 0x79, 0x62, 0x6b, 0x2f, 0x64, 0xa, 0x55, 0x47, 0x49, 0x45, 0x41, 0x30, 0x75, 0x54, 0x6a, 0x4c, 0x67, 0x67, 0x71, 0x66, 0x66, 0x6f, 0x65, 0x6f, 0x31, 0x38, 0x7a, 0x35, 0x48, 0x4a, 0x6e, 0x73, 0x41, 0x6f, 0x6b, 0x43, 0x38, 0x64, 0x7a, 0x70, 0x5a, 0x43, 0x6b, 0x67, 0x31, 0x73, 0x78, 0x45, 0x79, 0x62, 0x2f, 0x2b, 0x39, 0x6d, 0x31, 0x69, 0x49, 0x67, 0x56, 0x33, 0x59, 0x39, 0x74, 0x48, 0x44, 0x45, 0x59, 0x4a, 0x6c, 0x37, 0xa, 0x56, 0x77, 0x51, 0x68, 0x70, 0x38, 0x48, 0x6e, 0x33, 0x46, 0x49, 0x2f, 0x4a, 0x63, 0x77, 0x44, 0x49, 0x6b, 0x55, 0x36, 0x45, 0x6a, 0x65, 0x46, 0x30, 0x71, 0x4c, 0x4b, 0x42, 0x75, 0x54, 0x31, 0x6e, 0x66, 0x45, 0x74, 0x6f, 0x68, 0x54, 0x4e, 0x37, 0x78, 0x70, 0x4e, 0x43, 0x76, 0x44, 0x61, 0x36, 0x44, 0x53, 0x32, 0x4c, 0x54, 0x57, 0x39, 0x6f, 0x6e, 0x74, 0x6d, 0x4b, 0x79, 0x45, 0x47, 0xa, 0x78, 0x6c, 0x73, 0x78, 0x74, 0x6b, 0x64, 0x47, 0x45, 0x37, 0x79, 0x55, 0x55, 0x67, 0x77, 0x52, 0x53, 0x72, 0x79, 0x6a, 0x41, 0x65, 0x76, 0x41, 0x79, 0x5a, 0x64, 0x37, 0x71, 0x45, 0x72, 0x67, 0x74, 0x41, 0x56, 0x6c, 0x35, 0x70, 0x44, 0x46, 0x48, 0x30, 0x74, 0x42, 0x48, 0x53, 0x74, 0x67, 0x6b, 0x41, 0x51, 0x59, 0x57, 0x48, 0x77, 0x78, 0x62, 0x62, 0x79, 0x70, 0x59, 0x37, 0x33, 0x4c, 0xa, 0x5a, 0x43, 0x51, 0x73, 0x2b, 0x4c, 0x35, 0x44, 0x6d, 0x67, 0x2f, 0x43, 0x6e, 0x57, 0x31, 0x75, 0x62, 0x47, 0x46, 0x32, 0x59, 0x75, 0x47, 0x33, 0x79, 0x46, 0x59, 0x4b, 0x31, 0x6c, 0x32, 0x4e, 0x46, 0x78, 0x2f, 0x74, 0x67, 0x48, 0x71, 0x4e, 0x78, 0x56, 0x48, 0x6a, 0x31, 0x53, 0x42, 0x5a, 0x32, 0x41, 0x54, 0x76, 0x61, 0x4b, 0x47, 0x6f, 0x6c, 0x56, 0x35, 0x53, 0x69, 0x57, 0x33, 0x49, 0xa, 0x68, 0x45, 0x46, 0x46, 0x2b, 0x77, 0x4b, 0x50, 0x73, 0x63, 0x46, 0x59, 0x4f, 0x49, 0x76, 0x53, 0x4d, 0x44, 0x38, 0x43, 0x41, 0x77, 0x45, 0x41, 0x41, 0x61, 0x4d, 0x6a, 0x4d, 0x43, 0x45, 0x77, 0x44, 0x67, 0x59, 0x44, 0x56, 0x52, 0x30, 0x50, 0x41, 0x51, 0x48, 0x2f, 0x42, 0x41, 0x51, 0x44, 0x41, 0x67, 0x4b, 0x6b, 0x4d, 0x41, 0x38, 0x47, 0x41, 0x31, 0x55, 0x64, 0x45, 0x77, 0x45, 0x42, 0xa, 0x2f, 0x77, 0x51, 0x46, 0x4d, 0x41, 0x4d, 0x42, 0x41, 0x66, 0x38, 0x77, 0x44, 0x51, 0x59, 0x4a, 0x4b, 0x6f, 0x5a, 0x49, 0x68, 0x76, 0x63, 0x4e, 0x41, 0x51, 0x45, 0x4c, 0x42, 0x51, 0x41, 0x44, 0x67, 0x67, 0x45, 0x42, 0x41, 0x46, 0x2b, 0x59, 0x44, 0x46, 0x31, 0x4e, 0x4b, 0x65, 0x6f, 0x41, 0x38, 0x49, 0x72, 0x65, 0x4f, 0x78, 0x4d, 0x2f, 0x4f, 0x45, 0x59, 0x70, 0x54, 0x44, 0x6a, 0x76, 0xa, 0x50, 0x64, 0x55, 0x69, 0x31, 0x61, 0x37, 0x79, 0x75, 0x74, 0x2b, 0x30, 0x39, 0x37, 0x70, 0x36, 0x6f, 0x2f, 0x32, 0x41, 0x53, 0x35, 0x56, 0x52, 0x6a, 0x70, 0x32, 0x57, 0x55, 0x7a, 0x72, 0x4b, 0x79, 0x73, 0x57, 0x75, 0x65, 0x74, 0x55, 0x45, 0x2b, 0x72, 0x6e, 0x41, 0x70, 0x33, 0x39, 0x37, 0x2f, 0x6a, 0x78, 0x75, 0x73, 0x54, 0x78, 0x2f, 0x50, 0x76, 0x58, 0x57, 0x44, 0x34, 0x75, 0x61, 0xa, 0x51, 0x32, 0x7a, 0x49, 0x38, 0x44, 0x59, 0x62, 0x6b, 0x64, 0x75, 0x63, 0x4f, 0x47, 0x67, 0x4a, 0x31, 0x78, 0x61, 0x4e, 0x70, 0x6b, 0x75, 0x62, 0x48, 0x33, 0x64, 0x61, 0x48, 0x59, 0x5a, 0x2b, 0x48, 0x38, 0x71, 0x42, 0x70, 0x2f, 0x74, 0x50, 0x41, 0x42, 0x57, 0x73, 0x32, 0x35, 0x66, 0x78, 0x78, 0x31, 0x53, 0x69, 0x75, 0x38, 0x4e, 0x38, 0x4b, 0x59, 0x4a, 0x2b, 0x32, 0x49, 0x68, 0x75, 0xa, 0x61, 0x64, 0x42, 0x71, 0x61, 0x73, 0x56, 0x4a, 0x6c, 0x79, 0x55, 0x4d, 0x79, 0x50, 0x49, 0x7a, 0x4b, 0x46, 0x36, 0x6e, 0x4c, 0x54, 0x57, 0x66, 0x59, 0x5a, 0x4f, 0x31, 0x76, 0x30, 0x32, 0x36, 0x4b, 0x36, 0x6f, 0x31, 0x63, 0x39, 0x78, 0x63, 0x74, 0x69, 0x77, 0x54, 0x6a, 0x54, 0x59, 0x43, 0x34, 0x7a, 0x38, 0x65, 0x4b, 0x69, 0x41, 0x4c, 0x49, 0x36, 0x33, 0x33, 0x34, 0x74, 0x4e, 0x51, 0xa, 0x33, 0x32, 0x5a, 0x77, 0x4f, 0x75, 0x73, 0x58, 0x6e, 0x4a, 0x33, 0x6b, 0x34, 0x75, 0x42, 0x57, 0x70, 0x79, 0x31, 0x69, 0x39, 0x6f, 0x4e, 0x6b, 0x75, 0x75, 0x48, 0x45, 0x64, 0x69, 0x48, 0x37, 0x36, 0x30, 0x35, 0x4a, 0x31, 0x66, 0x77, 0x57, 0x53, 0x30, 0x63, 0x65, 0x35, 0x67, 0x49, 0x50, 0x35, 0x6a, 0x6e, 0x4e, 0x73, 0x4d, 0x64, 0x61, 0x44, 0x49, 0x2f, 0x39, 0x54, 0x4a, 0x4e, 0x6e, 0xa, 0x70, 0x67, 0x2b, 0x41, 0x58, 0x55, 0x4a, 0x78, 0x46, 0x30, 0x4f, 0x77, 0x50, 0x42, 0x63, 0x45, 0x37, 0x4a, 0x41, 0x43, 0x64, 0x52, 0x6d, 0x58, 0x73, 0x2b, 0x33, 0x78, 0x6c, 0x54, 0x59, 0x4a, 0x76, 0x70, 0x53, 0x75, 0x32, 0x4b, 0x65, 0x6c, 0x4c, 0x55, 0x6a, 0x52, 0x34, 0x5a, 0x4c, 0x72, 0x5a, 0x34, 0x78, 0x39, 0x4c, 0x45, 0x36, 0x54, 0x65, 0x77, 0x34, 0x3d, 0xa, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x45, 0x4e, 0x44, 0x20, 0x43, 0x45, 0x52, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x45, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0xa}, NextProtos:[]string(nil)}, UserAgent:"", DisableCompression:false, Transport:http.RoundTripper(nil), WrapTransport:(transport.WrapperFunc)(nil), QPS:0, Burst:0, RateLimiter:flowcontrol.RateLimiter(nil), Timeout:0, Dial:(func(context.Context, string, string) (net.Conn, error))(nil)}

RAW provider 2021/04/03 23:40:37 Finished
RAW provider 2021/04/03 23:41:22 Starting up with command line: []string{".terraform/providers/registry.terraform.io/hashicorp/kubernetes-alpha/0.2.1/darwin_amd64/terraform-provider-kubernetes-alpha_v0.2.1_x5"}
RAW provider 2021/04/03 23:41:22 Finished
RAW provider 2021/04/03 23:41:23 Starting up with command line: []string{".terraform/providers/registry.terraform.io/hashicorp/kubernetes-alpha/0.2.1/darwin_amd64/terraform-provider-kubernetes-alpha_v0.2.1_x5"}
RAW provider 2021/04/03 23:41:23 Finished
RAW provider 2021/04/03 23:41:24 Starting up with command line: []string{".terraform/providers/registry.terraform.io/hashicorp/kubernetes-alpha/0.2.1/darwin_amd64/terraform-provider-kubernetes-alpha_v0.2.1_x5"}
RAW provider 2021/04/03 23:41:25 [Configure][ClientConfig] (rest.Config) &rest.Config{Host:"https://5BE469949E293A3A880C6FE683A7079F.gr7.us-east-1.eks.amazonaws.com", APIPath:"", ContentConfig:rest.ContentConfig{AcceptContentTypes:"", ContentType:"", GroupVersion:(*schema.GroupVersion)(nil), NegotiatedSerializer:runtime.NegotiatedSerializer(nil)}, Username:"", Password:"", BearerToken:"--- REDACTED ---", BearerTokenFile:"", Impersonate:rest.ImpersonationConfig{UserName:"", Groups:[]string(nil), Extra:map[string][]string(nil)}, AuthProvider:<nil>, AuthConfigPersister:rest.AuthProviderConfigPersister(nil), ExecProvider:<nil>, TLSClientConfig:rest.sanitizedTLSClientConfig{Insecure:false, ServerName:"", CertFile:"", KeyFile:"", CAFile:"", CertData:[]uint8(nil), KeyData:[]uint8(nil), CAData:[]uint8{0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x42, 0x45, 0x47, 0x49, 0x4e, 0x20, 0x43, 0x45, 0x52, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x45, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0xa, 0x4d, 0x49, 0x49, 0x43, 0x79, 0x44, 0x43, 0x43, 0x41, 0x62, 0x43, 0x67, 0x41, 0x77, 0x49, 0x42, 0x41, 0x67, 0x49, 0x42, 0x41, 0x44, 0x41, 0x4e, 0x42, 0x67, 0x6b, 0x71, 0x68, 0x6b, 0x69, 0x47, 0x39, 0x77, 0x30, 0x42, 0x41, 0x51, 0x73, 0x46, 0x41, 0x44, 0x41, 0x56, 0x4d, 0x52, 0x4d, 0x77, 0x45, 0x51, 0x59, 0x44, 0x56, 0x51, 0x51, 0x44, 0x45, 0x77, 0x70, 0x72, 0x64, 0x57, 0x4a, 0x6c, 0xa, 0x63, 0x6d, 0x35, 0x6c, 0x64, 0x47, 0x56, 0x7a, 0x4d, 0x42, 0x34, 0x58, 0x44, 0x54, 0x49, 0x77, 0x4d, 0x54, 0x41, 0x79, 0x4d, 0x54, 0x49, 0x78, 0x4e, 0x44, 0x63, 0x77, 0x4e, 0x46, 0x6f, 0x58, 0x44, 0x54, 0x4d, 0x77, 0x4d, 0x54, 0x41, 0x78, 0x4f, 0x54, 0x49, 0x78, 0x4e, 0x44, 0x63, 0x77, 0x4e, 0x46, 0x6f, 0x77, 0x46, 0x54, 0x45, 0x54, 0x4d, 0x42, 0x45, 0x47, 0x41, 0x31, 0x55, 0x45, 0xa, 0x41, 0x78, 0x4d, 0x4b, 0x61, 0x33, 0x56, 0x69, 0x5a, 0x58, 0x4a, 0x75, 0x5a, 0x58, 0x52, 0x6c, 0x63, 0x7a, 0x43, 0x43, 0x41, 0x53, 0x49, 0x77, 0x44, 0x51, 0x59, 0x4a, 0x4b, 0x6f, 0x5a, 0x49, 0x68, 0x76, 0x63, 0x4e, 0x41, 0x51, 0x45, 0x42, 0x42, 0x51, 0x41, 0x44, 0x67, 0x67, 0x45, 0x50, 0x41, 0x44, 0x43, 0x43, 0x41, 0x51, 0x6f, 0x43, 0x67, 0x67, 0x45, 0x42, 0x41, 0x4c, 0x42, 0x62, 0xa, 0x50, 0x46, 0x2b, 0x39, 0x30, 0x52, 0x6f, 0x67, 0x48, 0x58, 0x41, 0x79, 0x46, 0x56, 0x74, 0x41, 0x2b, 0x7a, 0x43, 0x46, 0x6d, 0x33, 0x56, 0x53, 0x31, 0x61, 0x59, 0x59, 0x79, 0x4c, 0x7a, 0x2f, 0x32, 0x51, 0x48, 0x76, 0x37, 0x4a, 0x65, 0x45, 0x48, 0x71, 0x49, 0x77, 0x66, 0x63, 0x75, 0x7a, 0x56, 0x71, 0x58, 0x38, 0x66, 0x4b, 0x70, 0x33, 0x68, 0x4c, 0x79, 0x79, 0x62, 0x6b, 0x2f, 0x64, 0xa, 0x55, 0x47, 0x49, 0x45, 0x41, 0x30, 0x75, 0x54, 0x6a, 0x4c, 0x67, 0x67, 0x71, 0x66, 0x66, 0x6f, 0x65, 0x6f, 0x31, 0x38, 0x7a, 0x35, 0x48, 0x4a, 0x6e, 0x73, 0x41, 0x6f, 0x6b, 0x43, 0x38, 0x64, 0x7a, 0x70, 0x5a, 0x43, 0x6b, 0x67, 0x31, 0x73, 0x78, 0x45, 0x79, 0x62, 0x2f, 0x2b, 0x39, 0x6d, 0x31, 0x69, 0x49, 0x67, 0x56, 0x33, 0x59, 0x39, 0x74, 0x48, 0x44, 0x45, 0x59, 0x4a, 0x6c, 0x37, 0xa, 0x56, 0x77, 0x51, 0x68, 0x70, 0x38, 0x48, 0x6e, 0x33, 0x46, 0x49, 0x2f, 0x4a, 0x63, 0x77, 0x44, 0x49, 0x6b, 0x55, 0x36, 0x45, 0x6a, 0x65, 0x46, 0x30, 0x71, 0x4c, 0x4b, 0x42, 0x75, 0x54, 0x31, 0x6e, 0x66, 0x45, 0x74, 0x6f, 0x68, 0x54, 0x4e, 0x37, 0x78, 0x70, 0x4e, 0x43, 0x76, 0x44, 0x61, 0x36, 0x44, 0x53, 0x32, 0x4c, 0x54, 0x57, 0x39, 0x6f, 0x6e, 0x74, 0x6d, 0x4b, 0x79, 0x45, 0x47, 0xa, 0x78, 0x6c, 0x73, 0x78, 0x74, 0x6b, 0x64, 0x47, 0x45, 0x37, 0x79, 0x55, 0x55, 0x67, 0x77, 0x52, 0x53, 0x72, 0x79, 0x6a, 0x41, 0x65, 0x76, 0x41, 0x79, 0x5a, 0x64, 0x37, 0x71, 0x45, 0x72, 0x67, 0x74, 0x41, 0x56, 0x6c, 0x35, 0x70, 0x44, 0x46, 0x48, 0x30, 0x74, 0x42, 0x48, 0x53, 0x74, 0x67, 0x6b, 0x41, 0x51, 0x59, 0x57, 0x48, 0x77, 0x78, 0x62, 0x62, 0x79, 0x70, 0x59, 0x37, 0x33, 0x4c, 0xa, 0x5a, 0x43, 0x51, 0x73, 0x2b, 0x4c, 0x35, 0x44, 0x6d, 0x67, 0x2f, 0x43, 0x6e, 0x57, 0x31, 0x75, 0x62, 0x47, 0x46, 0x32, 0x59, 0x75, 0x47, 0x33, 0x79, 0x46, 0x59, 0x4b, 0x31, 0x6c, 0x32, 0x4e, 0x46, 0x78, 0x2f, 0x74, 0x67, 0x48, 0x71, 0x4e, 0x78, 0x56, 0x48, 0x6a, 0x31, 0x53, 0x42, 0x5a, 0x32, 0x41, 0x54, 0x76, 0x61, 0x4b, 0x47, 0x6f, 0x6c, 0x56, 0x35, 0x53, 0x69, 0x57, 0x33, 0x49, 0xa, 0x68, 0x45, 0x46, 0x46, 0x2b, 0x77, 0x4b, 0x50, 0x73, 0x63, 0x46, 0x59, 0x4f, 0x49, 0x76, 0x53, 0x4d, 0x44, 0x38, 0x43, 0x41, 0x77, 0x45, 0x41, 0x41, 0x61, 0x4d, 0x6a, 0x4d, 0x43, 0x45, 0x77, 0x44, 0x67, 0x59, 0x44, 0x56, 0x52, 0x30, 0x50, 0x41, 0x51, 0x48, 0x2f, 0x42, 0x41, 0x51, 0x44, 0x41, 0x67, 0x4b, 0x6b, 0x4d, 0x41, 0x38, 0x47, 0x41, 0x31, 0x55, 0x64, 0x45, 0x77, 0x45, 0x42, 0xa, 0x2f, 0x77, 0x51, 0x46, 0x4d, 0x41, 0x4d, 0x42, 0x41, 0x66, 0x38, 0x77, 0x44, 0x51, 0x59, 0x4a, 0x4b, 0x6f, 0x5a, 0x49, 0x68, 0x76, 0x63, 0x4e, 0x41, 0x51, 0x45, 0x4c, 0x42, 0x51, 0x41, 0x44, 0x67, 0x67, 0x45, 0x42, 0x41, 0x46, 0x2b, 0x59, 0x44, 0x46, 0x31, 0x4e, 0x4b, 0x65, 0x6f, 0x41, 0x38, 0x49, 0x72, 0x65, 0x4f, 0x78, 0x4d, 0x2f, 0x4f, 0x45, 0x59, 0x70, 0x54, 0x44, 0x6a, 0x76, 0xa, 0x50, 0x64, 0x55, 0x69, 0x31, 0x61, 0x37, 0x79, 0x75, 0x74, 0x2b, 0x30, 0x39, 0x37, 0x70, 0x36, 0x6f, 0x2f, 0x32, 0x41, 0x53, 0x35, 0x56, 0x52, 0x6a, 0x70, 0x32, 0x57, 0x55, 0x7a, 0x72, 0x4b, 0x79, 0x73, 0x57, 0x75, 0x65, 0x74, 0x55, 0x45, 0x2b, 0x72, 0x6e, 0x41, 0x70, 0x33, 0x39, 0x37, 0x2f, 0x6a, 0x78, 0x75, 0x73, 0x54, 0x78, 0x2f, 0x50, 0x76, 0x58, 0x57, 0x44, 0x34, 0x75, 0x61, 0xa, 0x51, 0x32, 0x7a, 0x49, 0x38, 0x44, 0x59, 0x62, 0x6b, 0x64, 0x75, 0x63, 0x4f, 0x47, 0x67, 0x4a, 0x31, 0x78, 0x61, 0x4e, 0x70, 0x6b, 0x75, 0x62, 0x48, 0x33, 0x64, 0x61, 0x48, 0x59, 0x5a, 0x2b, 0x48, 0x38, 0x71, 0x42, 0x70, 0x2f, 0x74, 0x50, 0x41, 0x42, 0x57, 0x73, 0x32, 0x35, 0x66, 0x78, 0x78, 0x31, 0x53, 0x69, 0x75, 0x38, 0x4e, 0x38, 0x4b, 0x59, 0x4a, 0x2b, 0x32, 0x49, 0x68, 0x75, 0xa, 0x61, 0x64, 0x42, 0x71, 0x61, 0x73, 0x56, 0x4a, 0x6c, 0x79, 0x55, 0x4d, 0x79, 0x50, 0x49, 0x7a, 0x4b, 0x46, 0x36, 0x6e, 0x4c, 0x54, 0x57, 0x66, 0x59, 0x5a, 0x4f, 0x31, 0x76, 0x30, 0x32, 0x36, 0x4b, 0x36, 0x6f, 0x31, 0x63, 0x39, 0x78, 0x63, 0x74, 0x69, 0x77, 0x54, 0x6a, 0x54, 0x59, 0x43, 0x34, 0x7a, 0x38, 0x65, 0x4b, 0x69, 0x41, 0x4c, 0x49, 0x36, 0x33, 0x33, 0x34, 0x74, 0x4e, 0x51, 0xa, 0x33, 0x32, 0x5a, 0x77, 0x4f, 0x75, 0x73, 0x58, 0x6e, 0x4a, 0x33, 0x6b, 0x34, 0x75, 0x42, 0x57, 0x70, 0x79, 0x31, 0x69, 0x39, 0x6f, 0x4e, 0x6b, 0x75, 0x75, 0x48, 0x45, 0x64, 0x69, 0x48, 0x37, 0x36, 0x30, 0x35, 0x4a, 0x31, 0x66, 0x77, 0x57, 0x53, 0x30, 0x63, 0x65, 0x35, 0x67, 0x49, 0x50, 0x35, 0x6a, 0x6e, 0x4e, 0x73, 0x4d, 0x64, 0x61, 0x44, 0x49, 0x2f, 0x39, 0x54, 0x4a, 0x4e, 0x6e, 0xa, 0x70, 0x67, 0x2b, 0x41, 0x58, 0x55, 0x4a, 0x78, 0x46, 0x30, 0x4f, 0x77, 0x50, 0x42, 0x63, 0x45, 0x37, 0x4a, 0x41, 0x43, 0x64, 0x52, 0x6d, 0x58, 0x73, 0x2b, 0x33, 0x78, 0x6c, 0x54, 0x59, 0x4a, 0x76, 0x70, 0x53, 0x75, 0x32, 0x4b, 0x65, 0x6c, 0x4c, 0x55, 0x6a, 0x52, 0x34, 0x5a, 0x4c, 0x72, 0x5a, 0x34, 0x78, 0x39, 0x4c, 0x45, 0x36, 0x54, 0x65, 0x77, 0x34, 0x3d, 0xa, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x45, 0x4e, 0x44, 0x20, 0x43, 0x45, 0x52, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x45, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0xa}, NextProtos:[]string(nil)}, UserAgent:"", DisableCompression:false, Transport:http.RoundTripper(nil), WrapTransport:(transport.WrapperFunc)(nil), QPS:0, Burst:0, RateLimiter:flowcontrol.RateLimiter(nil), Timeout:0, Dial:(func(context.Context, string, string) (net.Conn, error))(nil)}

RAW provider 2021/04/03 23:41:29 Finished
RAW provider 2021/04/03 23:41:29 Starting up with command line: []string{".terraform/providers/registry.terraform.io/hashicorp/kubernetes-alpha/0.2.1/darwin_amd64/terraform-provider-kubernetes-alpha_v0.2.1_x5"}
RAW provider 2021/04/03 23:41:29 [Configure][ClientConfig] (rest.Config) &rest.Config{Host:"https://5BE469949E293A3A880C6FE683A7079F.gr7.us-east-1.eks.amazonaws.com", APIPath:"", ContentConfig:rest.ContentConfig{AcceptContentTypes:"", ContentType:"", GroupVersion:(*schema.GroupVersion)(nil), NegotiatedSerializer:runtime.NegotiatedSerializer(nil)}, Username:"", Password:"", BearerToken:"--- REDACTED ---", BearerTokenFile:"", Impersonate:rest.ImpersonationConfig{UserName:"", Groups:[]string(nil), Extra:map[string][]string(nil)}, AuthProvider:<nil>, AuthConfigPersister:rest.AuthProviderConfigPersister(nil), ExecProvider:<nil>, TLSClientConfig:rest.sanitizedTLSClientConfig{Insecure:false, ServerName:"", CertFile:"", KeyFile:"", CAFile:"", CertData:[]uint8(nil), KeyData:[]uint8(nil), CAData:[]uint8{0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x42, 0x45, 0x47, 0x49, 0x4e, 0x20, 0x43, 0x45, 0x52, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x45, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0xa, 0x4d, 0x49, 0x49, 0x43, 0x79, 0x44, 0x43, 0x43, 0x41, 0x62, 0x43, 0x67, 0x41, 0x77, 0x49, 0x42, 0x41, 0x67, 0x49, 0x42, 0x41, 0x44, 0x41, 0x4e, 0x42, 0x67, 0x6b, 0x71, 0x68, 0x6b, 0x69, 0x47, 0x39, 0x77, 0x30, 0x42, 0x41, 0x51, 0x73, 0x46, 0x41, 0x44, 0x41, 0x56, 0x4d, 0x52, 0x4d, 0x77, 0x45, 0x51, 0x59, 0x44, 0x56, 0x51, 0x51, 0x44, 0x45, 0x77, 0x70, 0x72, 0x64, 0x57, 0x4a, 0x6c, 0xa, 0x63, 0x6d, 0x35, 0x6c, 0x64, 0x47, 0x56, 0x7a, 0x4d, 0x42, 0x34, 0x58, 0x44, 0x54, 0x49, 0x77, 0x4d, 0x54, 0x41, 0x79, 0x4d, 0x54, 0x49, 0x78, 0x4e, 0x44, 0x63, 0x77, 0x4e, 0x46, 0x6f, 0x58, 0x44, 0x54, 0x4d, 0x77, 0x4d, 0x54, 0x41, 0x78, 0x4f, 0x54, 0x49, 0x78, 0x4e, 0x44, 0x63, 0x77, 0x4e, 0x46, 0x6f, 0x77, 0x46, 0x54, 0x45, 0x54, 0x4d, 0x42, 0x45, 0x47, 0x41, 0x31, 0x55, 0x45, 0xa, 0x41, 0x78, 0x4d, 0x4b, 0x61, 0x33, 0x56, 0x69, 0x5a, 0x58, 0x4a, 0x75, 0x5a, 0x58, 0x52, 0x6c, 0x63, 0x7a, 0x43, 0x43, 0x41, 0x53, 0x49, 0x77, 0x44, 0x51, 0x59, 0x4a, 0x4b, 0x6f, 0x5a, 0x49, 0x68, 0x76, 0x63, 0x4e, 0x41, 0x51, 0x45, 0x42, 0x42, 0x51, 0x41, 0x44, 0x67, 0x67, 0x45, 0x50, 0x41, 0x44, 0x43, 0x43, 0x41, 0x51, 0x6f, 0x43, 0x67, 0x67, 0x45, 0x42, 0x41, 0x4c, 0x42, 0x62, 0xa, 0x50, 0x46, 0x2b, 0x39, 0x30, 0x52, 0x6f, 0x67, 0x48, 0x58, 0x41, 0x79, 0x46, 0x56, 0x74, 0x41, 0x2b, 0x7a, 0x43, 0x46, 0x6d, 0x33, 0x56, 0x53, 0x31, 0x61, 0x59, 0x59, 0x79, 0x4c, 0x7a, 0x2f, 0x32, 0x51, 0x48, 0x76, 0x37, 0x4a, 0x65, 0x45, 0x48, 0x71, 0x49, 0x77, 0x66, 0x63, 0x75, 0x7a, 0x56, 0x71, 0x58, 0x38, 0x66, 0x4b, 0x70, 0x33, 0x68, 0x4c, 0x79, 0x79, 0x62, 0x6b, 0x2f, 0x64, 0xa, 0x55, 0x47, 0x49, 0x45, 0x41, 0x30, 0x75, 0x54, 0x6a, 0x4c, 0x67, 0x67, 0x71, 0x66, 0x66, 0x6f, 0x65, 0x6f, 0x31, 0x38, 0x7a, 0x35, 0x48, 0x4a, 0x6e, 0x73, 0x41, 0x6f, 0x6b, 0x43, 0x38, 0x64, 0x7a, 0x70, 0x5a, 0x43, 0x6b, 0x67, 0x31, 0x73, 0x78, 0x45, 0x79, 0x62, 0x2f, 0x2b, 0x39, 0x6d, 0x31, 0x69, 0x49, 0x67, 0x56, 0x33, 0x59, 0x39, 0x74, 0x48, 0x44, 0x45, 0x59, 0x4a, 0x6c, 0x37, 0xa, 0x56, 0x77, 0x51, 0x68, 0x70, 0x38, 0x48, 0x6e, 0x33, 0x46, 0x49, 0x2f, 0x4a, 0x63, 0x77, 0x44, 0x49, 0x6b, 0x55, 0x36, 0x45, 0x6a, 0x65, 0x46, 0x30, 0x71, 0x4c, 0x4b, 0x42, 0x75, 0x54, 0x31, 0x6e, 0x66, 0x45, 0x74, 0x6f, 0x68, 0x54, 0x4e, 0x37, 0x78, 0x70, 0x4e, 0x43, 0x76, 0x44, 0x61, 0x36, 0x44, 0x53, 0x32, 0x4c, 0x54, 0x57, 0x39, 0x6f, 0x6e, 0x74, 0x6d, 0x4b, 0x79, 0x45, 0x47, 0xa, 0x78, 0x6c, 0x73, 0x78, 0x74, 0x6b, 0x64, 0x47, 0x45, 0x37, 0x79, 0x55, 0x55, 0x67, 0x77, 0x52, 0x53, 0x72, 0x79, 0x6a, 0x41, 0x65, 0x76, 0x41, 0x79, 0x5a, 0x64, 0x37, 0x71, 0x45, 0x72, 0x67, 0x74, 0x41, 0x56, 0x6c, 0x35, 0x70, 0x44, 0x46, 0x48, 0x30, 0x74, 0x42, 0x48, 0x53, 0x74, 0x67, 0x6b, 0x41, 0x51, 0x59, 0x57, 0x48, 0x77, 0x78, 0x62, 0x62, 0x79, 0x70, 0x59, 0x37, 0x33, 0x4c, 0xa, 0x5a, 0x43, 0x51, 0x73, 0x2b, 0x4c, 0x35, 0x44, 0x6d, 0x67, 0x2f, 0x43, 0x6e, 0x57, 0x31, 0x75, 0x62, 0x47, 0x46, 0x32, 0x59, 0x75, 0x47, 0x33, 0x79, 0x46, 0x59, 0x4b, 0x31, 0x6c, 0x32, 0x4e, 0x46, 0x78, 0x2f, 0x74, 0x67, 0x48, 0x71, 0x4e, 0x78, 0x56, 0x48, 0x6a, 0x31, 0x53, 0x42, 0x5a, 0x32, 0x41, 0x54, 0x76, 0x61, 0x4b, 0x47, 0x6f, 0x6c, 0x56, 0x35, 0x53, 0x69, 0x57, 0x33, 0x49, 0xa, 0x68, 0x45, 0x46, 0x46, 0x2b, 0x77, 0x4b, 0x50, 0x73, 0x63, 0x46, 0x59, 0x4f, 0x49, 0x76, 0x53, 0x4d, 0x44, 0x38, 0x43, 0x41, 0x77, 0x45, 0x41, 0x41, 0x61, 0x4d, 0x6a, 0x4d, 0x43, 0x45, 0x77, 0x44, 0x67, 0x59, 0x44, 0x56, 0x52, 0x30, 0x50, 0x41, 0x51, 0x48, 0x2f, 0x42, 0x41, 0x51, 0x44, 0x41, 0x67, 0x4b, 0x6b, 0x4d, 0x41, 0x38, 0x47, 0x41, 0x31, 0x55, 0x64, 0x45, 0x77, 0x45, 0x42, 0xa, 0x2f, 0x77, 0x51, 0x46, 0x4d, 0x41, 0x4d, 0x42, 0x41, 0x66, 0x38, 0x77, 0x44, 0x51, 0x59, 0x4a, 0x4b, 0x6f, 0x5a, 0x49, 0x68, 0x76, 0x63, 0x4e, 0x41, 0x51, 0x45, 0x4c, 0x42, 0x51, 0x41, 0x44, 0x67, 0x67, 0x45, 0x42, 0x41, 0x46, 0x2b, 0x59, 0x44, 0x46, 0x31, 0x4e, 0x4b, 0x65, 0x6f, 0x41, 0x38, 0x49, 0x72, 0x65, 0x4f, 0x78, 0x4d, 0x2f, 0x4f, 0x45, 0x59, 0x70, 0x54, 0x44, 0x6a, 0x76, 0xa, 0x50, 0x64, 0x55, 0x69, 0x31, 0x61, 0x37, 0x79, 0x75, 0x74, 0x2b, 0x30, 0x39, 0x37, 0x70, 0x36, 0x6f, 0x2f, 0x32, 0x41, 0x53, 0x35, 0x56, 0x52, 0x6a, 0x70, 0x32, 0x57, 0x55, 0x7a, 0x72, 0x4b, 0x79, 0x73, 0x57, 0x75, 0x65, 0x74, 0x55, 0x45, 0x2b, 0x72, 0x6e, 0x41, 0x70, 0x33, 0x39, 0x37, 0x2f, 0x6a, 0x78, 0x75, 0x73, 0x54, 0x78, 0x2f, 0x50, 0x76, 0x58, 0x57, 0x44, 0x34, 0x75, 0x61, 0xa, 0x51, 0x32, 0x7a, 0x49, 0x38, 0x44, 0x59, 0x62, 0x6b, 0x64, 0x75, 0x63, 0x4f, 0x47, 0x67, 0x4a, 0x31, 0x78, 0x61, 0x4e, 0x70, 0x6b, 0x75, 0x62, 0x48, 0x33, 0x64, 0x61, 0x48, 0x59, 0x5a, 0x2b, 0x48, 0x38, 0x71, 0x42, 0x70, 0x2f, 0x74, 0x50, 0x41, 0x42, 0x57, 0x73, 0x32, 0x35, 0x66, 0x78, 0x78, 0x31, 0x53, 0x69, 0x75, 0x38, 0x4e, 0x38, 0x4b, 0x59, 0x4a, 0x2b, 0x32, 0x49, 0x68, 0x75, 0xa, 0x61, 0x64, 0x42, 0x71, 0x61, 0x73, 0x56, 0x4a, 0x6c, 0x79, 0x55, 0x4d, 0x79, 0x50, 0x49, 0x7a, 0x4b, 0x46, 0x36, 0x6e, 0x4c, 0x54, 0x57, 0x66, 0x59, 0x5a, 0x4f, 0x31, 0x76, 0x30, 0x32, 0x36, 0x4b, 0x36, 0x6f, 0x31, 0x63, 0x39, 0x78, 0x63, 0x74, 0x69, 0x77, 0x54, 0x6a, 0x54, 0x59, 0x43, 0x34, 0x7a, 0x38, 0x65, 0x4b, 0x69, 0x41, 0x4c, 0x49, 0x36, 0x33, 0x33, 0x34, 0x74, 0x4e, 0x51, 0xa, 0x33, 0x32, 0x5a, 0x77, 0x4f, 0x75, 0x73, 0x58, 0x6e, 0x4a, 0x33, 0x6b, 0x34, 0x75, 0x42, 0x57, 0x70, 0x79, 0x31, 0x69, 0x39, 0x6f, 0x4e, 0x6b, 0x75, 0x75, 0x48, 0x45, 0x64, 0x69, 0x48, 0x37, 0x36, 0x30, 0x35, 0x4a, 0x31, 0x66, 0x77, 0x57, 0x53, 0x30, 0x63, 0x65, 0x35, 0x67, 0x49, 0x50, 0x35, 0x6a, 0x6e, 0x4e, 0x73, 0x4d, 0x64, 0x61, 0x44, 0x49, 0x2f, 0x39, 0x54, 0x4a, 0x4e, 0x6e, 0xa, 0x70, 0x67, 0x2b, 0x41, 0x58, 0x55, 0x4a, 0x78, 0x46, 0x30, 0x4f, 0x77, 0x50, 0x42, 0x63, 0x45, 0x37, 0x4a, 0x41, 0x43, 0x64, 0x52, 0x6d, 0x58, 0x73, 0x2b, 0x33, 0x78, 0x6c, 0x54, 0x59, 0x4a, 0x76, 0x70, 0x53, 0x75, 0x32, 0x4b, 0x65, 0x6c, 0x4c, 0x55, 0x6a, 0x52, 0x34, 0x5a, 0x4c, 0x72, 0x5a, 0x34, 0x78, 0x39, 0x4c, 0x45, 0x36, 0x54, 0x65, 0x77, 0x34, 0x3d, 0xa, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x45, 0x4e, 0x44, 0x20, 0x43, 0x45, 0x52, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x45, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0xa}, NextProtos:[]string(nil)}, UserAgent:"", DisableCompression:false, Transport:http.RoundTripper(nil), WrapTransport:(transport.WrapperFunc)(nil), QPS:0, Burst:0, RateLimiter:flowcontrol.RateLimiter(nil), Timeout:0, Dial:(func(context.Context, string, string) (net.Conn, error))(nil)}

RAW provider 2021/04/03 23:41:29 Finished
RAW provider 2021/04/03 23:44:44 Starting up with command line: []string{".terraform/providers/registry.terraform.io/hashicorp/kubernetes-alpha/0.2.1/darwin_amd64/terraform-provider-kubernetes-alpha_v0.2.1_x5"}
RAW provider 2021/04/03 23:44:44 Finished
RAW provider 2021/04/03 23:44:45 Starting up with command line: []string{".terraform/providers/registry.terraform.io/hashicorp/kubernetes-alpha/0.2.1/darwin_amd64/terraform-provider-kubernetes-alpha_v0.2.1_x5"}
RAW provider 2021/04/03 23:44:45 Finished
RAW provider 2021/04/03 23:44:45 Starting up with command line: []string{".terraform/providers/registry.terraform.io/hashicorp/kubernetes-alpha/0.2.1/darwin_amd64/terraform-provider-kubernetes-alpha_v0.2.1_x5"}
RAW provider 2021/04/03 23:44:45 Finished
RAW provider 2021/04/03 23:44:46 Starting up with command line: []string{".terraform/providers/registry.terraform.io/hashicorp/kubernetes-alpha/0.2.1/darwin_amd64/terraform-provider-kubernetes-alpha_v0.2.1_x5"}
RAW provider 2021/04/03 23:44:46 [Configure][ClientConfig] (rest.Config) &rest.Config{Host:"https://5BE469949E293A3A880C6FE683A7079F.gr7.us-east-1.eks.amazonaws.com", APIPath:"", ContentConfig:rest.ContentConfig{AcceptContentTypes:"", ContentType:"", GroupVersion:(*schema.GroupVersion)(nil), NegotiatedSerializer:runtime.NegotiatedSerializer(nil)}, Username:"", Password:"", BearerToken:"--- REDACTED ---", BearerTokenFile:"", Impersonate:rest.ImpersonationConfig{UserName:"", Groups:[]string(nil), Extra:map[string][]string(nil)}, AuthProvider:<nil>, AuthConfigPersister:rest.AuthProviderConfigPersister(nil), ExecProvider:<nil>, TLSClientConfig:rest.sanitizedTLSClientConfig{Insecure:false, ServerName:"", CertFile:"", KeyFile:"", CAFile:"", CertData:[]uint8(nil), KeyData:[]uint8(nil), CAData:[]uint8{0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x42, 0x45, 0x47, 0x49, 0x4e, 0x20, 0x43, 0x45, 0x52, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x45, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0xa, 0x4d, 0x49, 0x49, 0x43, 0x79, 0x44, 0x43, 0x43, 0x41, 0x62, 0x43, 0x67, 0x41, 0x77, 0x49, 0x42, 0x41, 0x67, 0x49, 0x42, 0x41, 0x44, 0x41, 0x4e, 0x42, 0x67, 0x6b, 0x71, 0x68, 0x6b, 0x69, 0x47, 0x39, 0x77, 0x30, 0x42, 0x41, 0x51, 0x73, 0x46, 0x41, 0x44, 0x41, 0x56, 0x4d, 0x52, 0x4d, 0x77, 0x45, 0x51, 0x59, 0x44, 0x56, 0x51, 0x51, 0x44, 0x45, 0x77, 0x70, 0x72, 0x64, 0x57, 0x4a, 0x6c, 0xa, 0x63, 0x6d, 0x35, 0x6c, 0x64, 0x47, 0x56, 0x7a, 0x4d, 0x42, 0x34, 0x58, 0x44, 0x54, 0x49, 0x77, 0x4d, 0x54, 0x41, 0x79, 0x4d, 0x54, 0x49, 0x78, 0x4e, 0x44, 0x63, 0x77, 0x4e, 0x46, 0x6f, 0x58, 0x44, 0x54, 0x4d, 0x77, 0x4d, 0x54, 0x41, 0x78, 0x4f, 0x54, 0x49, 0x78, 0x4e, 0x44, 0x63, 0x77, 0x4e, 0x46, 0x6f, 0x77, 0x46, 0x54, 0x45, 0x54, 0x4d, 0x42, 0x45, 0x47, 0x41, 0x31, 0x55, 0x45, 0xa, 0x41, 0x78, 0x4d, 0x4b, 0x61, 0x33, 0x56, 0x69, 0x5a, 0x58, 0x4a, 0x75, 0x5a, 0x58, 0x52, 0x6c, 0x63, 0x7a, 0x43, 0x43, 0x41, 0x53, 0x49, 0x77, 0x44, 0x51, 0x59, 0x4a, 0x4b, 0x6f, 0x5a, 0x49, 0x68, 0x76, 0x63, 0x4e, 0x41, 0x51, 0x45, 0x42, 0x42, 0x51, 0x41, 0x44, 0x67, 0x67, 0x45, 0x50, 0x41, 0x44, 0x43, 0x43, 0x41, 0x51, 0x6f, 0x43, 0x67, 0x67, 0x45, 0x42, 0x41, 0x4c, 0x42, 0x62, 0xa, 0x50, 0x46, 0x2b, 0x39, 0x30, 0x52, 0x6f, 0x67, 0x48, 0x58, 0x41, 0x79, 0x46, 0x56, 0x74, 0x41, 0x2b, 0x7a, 0x43, 0x46, 0x6d, 0x33, 0x56, 0x53, 0x31, 0x61, 0x59, 0x59, 0x79, 0x4c, 0x7a, 0x2f, 0x32, 0x51, 0x48, 0x76, 0x37, 0x4a, 0x65, 0x45, 0x48, 0x71, 0x49, 0x77, 0x66, 0x63, 0x75, 0x7a, 0x56, 0x71, 0x58, 0x38, 0x66, 0x4b, 0x70, 0x33, 0x68, 0x4c, 0x79, 0x79, 0x62, 0x6b, 0x2f, 0x64, 0xa, 0x55, 0x47, 0x49, 0x45, 0x41, 0x30, 0x75, 0x54, 0x6a, 0x4c, 0x67, 0x67, 0x71, 0x66, 0x66, 0x6f, 0x65, 0x6f, 0x31, 0x38, 0x7a, 0x35, 0x48, 0x4a, 0x6e, 0x73, 0x41, 0x6f, 0x6b, 0x43, 0x38, 0x64, 0x7a, 0x70, 0x5a, 0x43, 0x6b, 0x67, 0x31, 0x73, 0x78, 0x45, 0x79, 0x62, 0x2f, 0x2b, 0x39, 0x6d, 0x31, 0x69, 0x49, 0x67, 0x56, 0x33, 0x59, 0x39, 0x74, 0x48, 0x44, 0x45, 0x59, 0x4a, 0x6c, 0x37, 0xa, 0x56, 0x77, 0x51, 0x68, 0x70, 0x38, 0x48, 0x6e, 0x33, 0x46, 0x49, 0x2f, 0x4a, 0x63, 0x77, 0x44, 0x49, 0x6b, 0x55, 0x36, 0x45, 0x6a, 0x65, 0x46, 0x30, 0x71, 0x4c, 0x4b, 0x42, 0x75, 0x54, 0x31, 0x6e, 0x66, 0x45, 0x74, 0x6f, 0x68, 0x54, 0x4e, 0x37, 0x78, 0x70, 0x4e, 0x43, 0x76, 0x44, 0x61, 0x36, 0x44, 0x53, 0x32, 0x4c, 0x54, 0x57, 0x39, 0x6f, 0x6e, 0x74, 0x6d, 0x4b, 0x79, 0x45, 0x47, 0xa, 0x78, 0x6c, 0x73, 0x78, 0x74, 0x6b, 0x64, 0x47, 0x45, 0x37, 0x79, 0x55, 0x55, 0x67, 0x77, 0x52, 0x53, 0x72, 0x79, 0x6a, 0x41, 0x65, 0x76, 0x41, 0x79, 0x5a, 0x64, 0x37, 0x71, 0x45, 0x72, 0x67, 0x74, 0x41, 0x56, 0x6c, 0x35, 0x70, 0x44, 0x46, 0x48, 0x30, 0x74, 0x42, 0x48, 0x53, 0x74, 0x67, 0x6b, 0x41, 0x51, 0x59, 0x57, 0x48, 0x77, 0x78, 0x62, 0x62, 0x79, 0x70, 0x59, 0x37, 0x33, 0x4c, 0xa, 0x5a, 0x43, 0x51, 0x73, 0x2b, 0x4c, 0x35, 0x44, 0x6d, 0x67, 0x2f, 0x43, 0x6e, 0x57, 0x31, 0x75, 0x62, 0x47, 0x46, 0x32, 0x59, 0x75, 0x47, 0x33, 0x79, 0x46, 0x59, 0x4b, 0x31, 0x6c, 0x32, 0x4e, 0x46, 0x78, 0x2f, 0x74, 0x67, 0x48, 0x71, 0x4e, 0x78, 0x56, 0x48, 0x6a, 0x31, 0x53, 0x42, 0x5a, 0x32, 0x41, 0x54, 0x76, 0x61, 0x4b, 0x47, 0x6f, 0x6c, 0x56, 0x35, 0x53, 0x69, 0x57, 0x33, 0x49, 0xa, 0x68, 0x45, 0x46, 0x46, 0x2b, 0x77, 0x4b, 0x50, 0x73, 0x63, 0x46, 0x59, 0x4f, 0x49, 0x76, 0x53, 0x4d, 0x44, 0x38, 0x43, 0x41, 0x77, 0x45, 0x41, 0x41, 0x61, 0x4d, 0x6a, 0x4d, 0x43, 0x45, 0x77, 0x44, 0x67, 0x59, 0x44, 0x56, 0x52, 0x30, 0x50, 0x41, 0x51, 0x48, 0x2f, 0x42, 0x41, 0x51, 0x44, 0x41, 0x67, 0x4b, 0x6b, 0x4d, 0x41, 0x38, 0x47, 0x41, 0x31, 0x55, 0x64, 0x45, 0x77, 0x45, 0x42, 0xa, 0x2f, 0x77, 0x51, 0x46, 0x4d, 0x41, 0x4d, 0x42, 0x41, 0x66, 0x38, 0x77, 0x44, 0x51, 0x59, 0x4a, 0x4b, 0x6f, 0x5a, 0x49, 0x68, 0x76, 0x63, 0x4e, 0x41, 0x51, 0x45, 0x4c, 0x42, 0x51, 0x41, 0x44, 0x67, 0x67, 0x45, 0x42, 0x41, 0x46, 0x2b, 0x59, 0x44, 0x46, 0x31, 0x4e, 0x4b, 0x65, 0x6f, 0x41, 0x38, 0x49, 0x72, 0x65, 0x4f, 0x78, 0x4d, 0x2f, 0x4f, 0x45, 0x59, 0x70, 0x54, 0x44, 0x6a, 0x76, 0xa, 0x50, 0x64, 0x55, 0x69, 0x31, 0x61, 0x37, 0x79, 0x75, 0x74, 0x2b, 0x30, 0x39, 0x37, 0x70, 0x36, 0x6f, 0x2f, 0x32, 0x41, 0x53, 0x35, 0x56, 0x52, 0x6a, 0x70, 0x32, 0x57, 0x55, 0x7a, 0x72, 0x4b, 0x79, 0x73, 0x57, 0x75, 0x65, 0x74, 0x55, 0x45, 0x2b, 0x72, 0x6e, 0x41, 0x70, 0x33, 0x39, 0x37, 0x2f, 0x6a, 0x78, 0x75, 0x73, 0x54, 0x78, 0x2f, 0x50, 0x76, 0x58, 0x57, 0x44, 0x34, 0x75, 0x61, 0xa, 0x51, 0x32, 0x7a, 0x49, 0x38, 0x44, 0x59, 0x62, 0x6b, 0x64, 0x75, 0x63, 0x4f, 0x47, 0x67, 0x4a, 0x31, 0x78, 0x61, 0x4e, 0x70, 0x6b, 0x75, 0x62, 0x48, 0x33, 0x64, 0x61, 0x48, 0x59, 0x5a, 0x2b, 0x48, 0x38, 0x71, 0x42, 0x70, 0x2f, 0x74, 0x50, 0x41, 0x42, 0x57, 0x73, 0x32, 0x35, 0x66, 0x78, 0x78, 0x31, 0x53, 0x69, 0x75, 0x38, 0x4e, 0x38, 0x4b, 0x59, 0x4a, 0x2b, 0x32, 0x49, 0x68, 0x75, 0xa, 0x61, 0x64, 0x42, 0x71, 0x61, 0x73, 0x56, 0x4a, 0x6c, 0x79, 0x55, 0x4d, 0x79, 0x50, 0x49, 0x7a, 0x4b, 0x46, 0x36, 0x6e, 0x4c, 0x54, 0x57, 0x66, 0x59, 0x5a, 0x4f, 0x31, 0x76, 0x30, 0x32, 0x36, 0x4b, 0x36, 0x6f, 0x31, 0x63, 0x39, 0x78, 0x63, 0x74, 0x69, 0x77, 0x54, 0x6a, 0x54, 0x59, 0x43, 0x34, 0x7a, 0x38, 0x65, 0x4b, 0x69, 0x41, 0x4c, 0x49, 0x36, 0x33, 0x33, 0x34, 0x74, 0x4e, 0x51, 0xa, 0x33, 0x32, 0x5a, 0x77, 0x4f, 0x75, 0x73, 0x58, 0x6e, 0x4a, 0x33, 0x6b, 0x34, 0x75, 0x42, 0x57, 0x70, 0x79, 0x31, 0x69, 0x39, 0x6f, 0x4e, 0x6b, 0x75, 0x75, 0x48, 0x45, 0x64, 0x69, 0x48, 0x37, 0x36, 0x30, 0x35, 0x4a, 0x31, 0x66, 0x77, 0x57, 0x53, 0x30, 0x63, 0x65, 0x35, 0x67, 0x49, 0x50, 0x35, 0x6a, 0x6e, 0x4e, 0x73, 0x4d, 0x64, 0x61, 0x44, 0x49, 0x2f, 0x39, 0x54, 0x4a, 0x4e, 0x6e, 0xa, 0x70, 0x67, 0x2b, 0x41, 0x58, 0x55, 0x4a, 0x78, 0x46, 0x30, 0x4f, 0x77, 0x50, 0x42, 0x63, 0x45, 0x37, 0x4a, 0x41, 0x43, 0x64, 0x52, 0x6d, 0x58, 0x73, 0x2b, 0x33, 0x78, 0x6c, 0x54, 0x59, 0x4a, 0x76, 0x70, 0x53, 0x75, 0x32, 0x4b, 0x65, 0x6c, 0x4c, 0x55, 0x6a, 0x52, 0x34, 0x5a, 0x4c, 0x72, 0x5a, 0x34, 0x78, 0x39, 0x4c, 0x45, 0x36, 0x54, 0x65, 0x77, 0x34, 0x3d, 0xa, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x45, 0x4e, 0x44, 0x20, 0x43, 0x45, 0x52, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x45, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0xa}, NextProtos:[]string(nil)}, UserAgent:"", DisableCompression:false, Transport:http.RoundTripper(nil), WrapTransport:(transport.WrapperFunc)(nil), QPS:0, Burst:0, RateLimiter:flowcontrol.RateLimiter(nil), Timeout:0, Dial:(func(context.Context, string, string) (net.Conn, error))(nil)}

RAW provider 2021/04/03 23:44:46 [ApplyResourceChange][Request][PlannedState]
(cty.Value) {
 ty: (cty.Type) {
  typeImpl: (cty.typeObject) {
   typeImplSigil: (cty.typeImplSigil) {
   },
   AttrTypes: (map[string]cty.Type) (len=3) {
    (string) (len=8) "manifest": (cty.Type) {
     typeImpl: (cty.pseudoTypeDynamic) {
      typeImplSigil: (cty.typeImplSigil) {
      }
     }
    },
    (string) (len=6) "object": (cty.Type) {
     typeImpl: (cty.pseudoTypeDynamic) {
      typeImplSigil: (cty.typeImplSigil) {
      }
     }
    },
    (string) (len=8) "wait_for": (cty.Type) {
     typeImpl: (cty.typeObject) {
      typeImplSigil: (cty.typeImplSigil) {
      },
      AttrTypes: (map[string]cty.Type) (len=1) {
       (string) (len=6) "fields": (cty.Type) {
        typeImpl: (cty.typeMap) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         ElementTypeT: (cty.Type) {
          typeImpl: (cty.primitiveType) {
           typeImplSigil: (cty.typeImplSigil) {
           },
           Kind: (cty.primitiveTypeKind) 83
          }
         }
        }
       }
      }
     }
    }
   }
  }
 },
 v: (interface {}) <nil>
}

RAW provider 2021/04/03 23:44:46 [ApplyResourceChange][Request][PriorState]
(cty.Value) {
 ty: (cty.Type) {
  typeImpl: (cty.typeObject) {
   typeImplSigil: (cty.typeImplSigil) {
   },
   AttrTypes: (map[string]cty.Type) (len=3) {
    (string) (len=8) "wait_for": (cty.Type) {
     typeImpl: (cty.typeObject) {
      typeImplSigil: (cty.typeImplSigil) {
      },
      AttrTypes: (map[string]cty.Type) (len=1) {
       (string) (len=6) "fields": (cty.Type) {
        typeImpl: (cty.typeMap) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         ElementTypeT: (cty.Type) {
          typeImpl: (cty.primitiveType) {
           typeImplSigil: (cty.typeImplSigil) {
           },
           Kind: (cty.primitiveTypeKind) 83
          }
         }
        }
       }
      }
     }
    },
    (string) (len=8) "manifest": (cty.Type) {
     typeImpl: (cty.typeObject) {
      typeImplSigil: (cty.typeImplSigil) {
      },
      AttrTypes: (map[string]cty.Type) (len=4) {
       (string) (len=10) "apiVersion": (cty.Type) {
        typeImpl: (cty.primitiveType) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         Kind: (cty.primitiveTypeKind) 83
        }
       },
       (string) (len=4) "kind": (cty.Type) {
        typeImpl: (cty.primitiveType) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         Kind: (cty.primitiveTypeKind) 83
        }
       },
       (string) (len=8) "metadata": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) (len=2) {
          (string) (len=4) "name": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=9) "namespace": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          }
         }
        }
       },
       (string) (len=4) "spec": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) (len=21) {
          (string) (len=15) "securityContext": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=3) {
             (string) (len=9) "runAsUser": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 78
              }
             },
             (string) (len=7) "fsGroup": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 78
              }
             },
             (string) (len=12) "runAsNonRoot": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 66
              }
             }
            }
           }
          },
          (string) (len=23) "additionalScrapeConfigs": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=2) {
             (string) (len=3) "key": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             },
             (string) (len=4) "name": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             }
            }
           }
          },
          (string) (len=12) "nodeSelector": (cty.Type) {
           typeImpl: (cty.typeMap) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            ElementTypeT: (cty.Type) {
             typeImpl: (cty.primitiveType) {
              typeImplSigil: (cty.typeImplSigil) {
              },
              Kind: (cty.primitiveTypeKind) 83
             }
            }
           }
          },
          (string) (len=18) "podMonitorSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=5) "image": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=22) "serviceMonitorSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=18) "serviceAccountName": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=7) "version": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=8) "alerting": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=1) {
             (string) (len=13) "alertmanagers": (cty.Type) {
              typeImpl: (cty.typeTuple) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               ElemTypes: ([]cty.Type) (len=1 cap=1) {
                (cty.Type) {
                 typeImpl: (cty.typeObject) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  AttrTypes: (map[string]cty.Type) (len=3) {
                   (string) (len=4) "port": (cty.Type) {
                    typeImpl: (cty.primitiveType) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     Kind: (cty.primitiveTypeKind) 83
                    }
                   },
                   (string) (len=4) "name": (cty.Type) {
                    typeImpl: (cty.primitiveType) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     Kind: (cty.primitiveTypeKind) 83
                    }
                   },
                   (string) (len=9) "namespace": (cty.Type) {
                    typeImpl: (cty.primitiveType) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     Kind: (cty.primitiveTypeKind) 83
                    }
                   }
                  }
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=14) "externalLabels": (cty.Type) {
           typeImpl: (cty.typeMap) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            ElementTypeT: (cty.Type) {
             typeImpl: (cty.primitiveType) {
              typeImplSigil: (cty.typeImplSigil) {
              },
              Kind: (cty.primitiveTypeKind) 83
             }
            }
           }
          },
          (string) (len=27) "podMonitorNamespaceSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=13) "probeSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=7) "storage": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=1) {
             (string) (len=19) "volumeClaimTemplate": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=1) {
                (string) (len=4) "spec": (cty.Type) {
                 typeImpl: (cty.typeObject) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  AttrTypes: (map[string]cty.Type) (len=2) {
                   (string) (len=9) "resources": (cty.Type) {
                    typeImpl: (cty.typeObject) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     AttrTypes: (map[string]cty.Type) (len=1) {
                      (string) (len=8) "requests": (cty.Type) {
                       typeImpl: (cty.typeObject) {
                        typeImplSigil: (cty.typeImplSigil) {
                        },
                        AttrTypes: (map[string]cty.Type) (len=1) {
                         (string) (len=7) "storage": (cty.Type) {
                          typeImpl: (cty.primitiveType) {
                           typeImplSigil: (cty.typeImplSigil) {
                           },
                           Kind: (cty.primitiveTypeKind) 83
                          }
                         }
                        }
                       }
                      }
                     }
                    }
                   },
                   (string) (len=16) "storageClassName": (cty.Type) {
                    typeImpl: (cty.primitiveType) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     Kind: (cty.primitiveTypeKind) 83
                    }
                   }
                  }
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=6) "thanos": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=3) {
             (string) (len=19) "objectStorageConfig": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=3) "key": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=4) "name": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             },
             (string) (len=7) "version": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             },
             (string) (len=9) "baseImage": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             }
            }
           }
          },
          (string) (len=8) "replicas": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 78
           }
          },
          (string) (len=9) "resources": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=2) {
             (string) (len=6) "limits": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=6) "memory": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=3) "cpu": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             },
             (string) (len=8) "requests": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=3) "cpu": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=6) "memory": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=4) "name": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=12) "ruleSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=1) {
             (string) (len=11) "matchLabels": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=10) "prometheus": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=4) "role": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=22) "probeNamespaceSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=9) "namespace": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=31) "serviceMonitorNamespaceSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          }
         }
        }
       }
      }
     }
    },
    (string) (len=6) "object": (cty.Type) {
     typeImpl: (cty.typeObject) {
      typeImplSigil: (cty.typeImplSigil) {
      },
      AttrTypes: (map[string]cty.Type) (len=4) {
       (string) (len=4) "kind": (cty.Type) {
        typeImpl: (cty.primitiveType) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         Kind: (cty.primitiveTypeKind) 83
        }
       },
       (string) (len=8) "metadata": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) (len=2) {
          (string) (len=4) "name": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=9) "namespace": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          }
         }
        }
       },
       (string) (len=4) "spec": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) (len=19) {
          (string) (len=12) "nodeSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=1) {
             (string) (len=4) "role": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             }
            }
           }
          },
          (string) (len=9) "resources": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=2) {
             (string) (len=6) "limits": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=3) "cpu": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=6) "memory": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             },
             (string) (len=8) "requests": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=3) "cpu": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=6) "memory": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=12) "ruleSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=1) {
             (string) (len=11) "matchLabels": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=10) "prometheus": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=4) "role": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=8) "alerting": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=1) {
             (string) (len=13) "alertmanagers": (cty.Type) {
              typeImpl: (cty.typeTuple) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               ElemTypes: ([]cty.Type) (len=1 cap=1) {
                (cty.Type) {
                 typeImpl: (cty.typeObject) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  AttrTypes: (map[string]cty.Type) (len=3) {
                   (string) (len=4) "name": (cty.Type) {
                    typeImpl: (cty.primitiveType) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     Kind: (cty.primitiveTypeKind) 83
                    }
                   },
                   (string) (len=9) "namespace": (cty.Type) {
                    typeImpl: (cty.primitiveType) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     Kind: (cty.primitiveTypeKind) 83
                    }
                   },
                   (string) (len=4) "port": (cty.Type) {
                    typeImpl: (cty.primitiveType) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     Kind: (cty.primitiveTypeKind) 83
                    }
                   }
                  }
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=18) "podMonitorSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=22) "probeNamespaceSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=23) "additionalScrapeConfigs": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=2) {
             (string) (len=3) "key": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             },
             (string) (len=4) "name": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             }
            }
           }
          },
          (string) (len=27) "podMonitorNamespaceSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=8) "replicas": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 78
           }
          },
          (string) (len=22) "serviceMonitorSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=14) "externalLabels": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=2) {
             (string) (len=7) "cluster": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             },
             (string) (len=7) "product": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             }
            }
           }
          },
          (string) (len=7) "version": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=7) "storage": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=1) {
             (string) (len=19) "volumeClaimTemplate": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=1) {
                (string) (len=4) "spec": (cty.Type) {
                 typeImpl: (cty.typeObject) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  AttrTypes: (map[string]cty.Type) (len=2) {
                   (string) (len=16) "storageClassName": (cty.Type) {
                    typeImpl: (cty.primitiveType) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     Kind: (cty.primitiveTypeKind) 83
                    }
                   },
                   (string) (len=9) "resources": (cty.Type) {
                    typeImpl: (cty.typeObject) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     AttrTypes: (map[string]cty.Type) (len=1) {
                      (string) (len=8) "requests": (cty.Type) {
                       typeImpl: (cty.typeObject) {
                        typeImplSigil: (cty.typeImplSigil) {
                        },
                        AttrTypes: (map[string]cty.Type) (len=1) {
                         (string) (len=7) "storage": (cty.Type) {
                          typeImpl: (cty.primitiveType) {
                           typeImplSigil: (cty.typeImplSigil) {
                           },
                           Kind: (cty.primitiveTypeKind) 83
                          }
                         }
                        }
                       }
                      }
                     }
                    }
                   }
                  }
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=13) "probeSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=6) "thanos": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=3) {
             (string) (len=9) "baseImage": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             },
             (string) (len=19) "objectStorageConfig": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=3) "key": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=4) "name": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             },
             (string) (len=7) "version": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             }
            }
           }
          },
          (string) (len=5) "image": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=31) "serviceMonitorNamespaceSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=18) "serviceAccountName": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=15) "securityContext": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=3) {
             (string) (len=7) "fsGroup": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 78
              }
             },
             (string) (len=12) "runAsNonRoot": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 66
              }
             },
             (string) (len=9) "runAsUser": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 78
              }
             }
            }
           }
          }
         }
        }
       },
       (string) (len=10) "apiVersion": (cty.Type) {
        typeImpl: (cty.primitiveType) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         Kind: (cty.primitiveTypeKind) 83
        }
       }
      }
     }
    }
   }
  }
 },
 v: (map[string]interface {}) (len=3) {
  (string) (len=6) "object": (map[string]interface {}) (len=4) {
   (string) (len=4) "spec": (map[string]interface {}) (len=19) {
    (string) (len=7) "version": (string) (len=7) "v2.25.2",
    (string) (len=22) "probeNamespaceSelector": (map[string]interface {}) {
    },
    (string) (len=6) "thanos": (map[string]interface {}) (len=3) {
     (string) (len=9) "baseImage": (string) (len=21) "quay.io/thanos/thanos",
     (string) (len=19) "objectStorageConfig": (map[string]interface {}) (len=2) {
      (string) (len=3) "key": (string) (len=11) "thanos.yaml",
      (string) (len=4) "name": (string) (len=22) "thanos-objstore-config"
     },
     (string) (len=7) "version": (string) (len=7) "v0.16.0"
    },
    (string) (len=14) "externalLabels": (map[string]interface {}) (len=2) {
     (string) (len=7) "cluster": (string) (len=12) "my-cluster-2",
     (string) (len=7) "product": (string) (len=13) "api beep boop"
    },
    (string) (len=15) "securityContext": (map[string]interface {}) (len=3) {
     (string) (len=7) "fsGroup": (*big.Float)(0xc0003faff0)(2000),
     (string) (len=12) "runAsNonRoot": (bool) true,
     (string) (len=9) "runAsUser": (*big.Float)(0xc0003fb020)(1000)
    },
    (string) (len=5) "image": (string) (len=37) "quay.io/prometheus/prometheus:v2.25.2",
    (string) (len=12) "ruleSelector": (map[string]interface {}) (len=1) {
     (string) (len=11) "matchLabels": (map[string]interface {}) (len=2) {
      (string) (len=10) "prometheus": (string) (len=3) "k8s",
      (string) (len=4) "role": (string) (len=11) "alert-rules"
     }
    },
    (string) (len=18) "serviceAccountName": (string) (len=14) "prometheus-k8s",
    (string) (len=23) "additionalScrapeConfigs": (map[string]interface {}) (len=2) {
     (string) (len=3) "key": (string) (len=26) "prometheus-additional.yaml",
     (string) (len=4) "name": (string) (len=25) "additional-scrape-configs"
    },
    (string) (len=31) "serviceMonitorNamespaceSelector": (map[string]interface {}) {
    },
    (string) (len=27) "podMonitorNamespaceSelector": (map[string]interface {}) {
    },
    (string) (len=8) "replicas": (*big.Float)(0xc0003fade0)(1),
    (string) (len=7) "storage": (map[string]interface {}) (len=1) {
     (string) (len=19) "volumeClaimTemplate": (map[string]interface {}) (len=1) {
      (string) (len=4) "spec": (map[string]interface {}) (len=2) {
       (string) (len=16) "storageClassName": (string) (len=3) "gp2",
       (string) (len=9) "resources": (map[string]interface {}) (len=1) {
        (string) (len=8) "requests": (map[string]interface {}) (len=1) {
         (string) (len=7) "storage": (string) (len=4) "10Gi"
        }
       }
      }
     }
    },
    (string) (len=12) "nodeSelector": (map[string]interface {}) (len=1) {
     (string) (len=4) "role": (string) (len=8) "services"
    },
    (string) (len=8) "alerting": (map[string]interface {}) (len=1) {
     (string) (len=13) "alertmanagers": ([]interface {}) (len=1 cap=1) {
      (map[string]interface {}) (len=3) {
       (string) (len=9) "namespace": (string) (len=10) "monitoring",
       (string) (len=4) "port": (string) (len=3) "web",
       (string) (len=4) "name": (string) (len=17) "alertmanager-main"
      }
     }
    },
    (string) (len=9) "resources": (map[string]interface {}) (len=2) {
     (string) (len=6) "limits": (map[string]interface {}) (len=2) {
      (string) (len=3) "cpu": (string) (len=4) "250m",
      (string) (len=6) "memory": (string) (len=5) "512Mi"
     },
     (string) (len=8) "requests": (map[string]interface {}) (len=2) {
      (string) (len=3) "cpu": (string) (len=4) "200m",
      (string) (len=6) "memory": (string) (len=5) "200Mi"
     }
    },
    (string) (len=13) "probeSelector": (map[string]interface {}) {
    },
    (string) (len=22) "serviceMonitorSelector": (map[string]interface {}) {
    },
    (string) (len=18) "podMonitorSelector": (map[string]interface {}) {
    }
   },
   (string) (len=10) "apiVersion": (string) (len=24) "monitoring.coreos.com/v1",
   (string) (len=4) "kind": (string) (len=10) "Prometheus",
   (string) (len=8) "metadata": (map[string]interface {}) (len=2) {
    (string) (len=4) "name": (string) (len=6) "test-1",
    (string) (len=9) "namespace": (string) (len=15) "test-operator-1"
   }
  },
  (string) (len=8) "wait_for": (interface {}) <nil>,
  (string) (len=8) "manifest": (map[string]interface {}) (len=4) {
   (string) (len=10) "apiVersion": (string) (len=24) "monitoring.coreos.com/v1",
   (string) (len=4) "kind": (string) (len=10) "Prometheus",
   (string) (len=8) "metadata": (map[string]interface {}) (len=2) {
    (string) (len=4) "name": (string) (len=6) "test-1",
    (string) (len=9) "namespace": (string) (len=15) "test-operator-1"
   },
   (string) (len=4) "spec": (map[string]interface {}) (len=21) {
    (string) (len=27) "podMonitorNamespaceSelector": (map[string]interface {}) {
    },
    (string) (len=22) "serviceMonitorSelector": (map[string]interface {}) {
    },
    (string) (len=18) "podMonitorSelector": (map[string]interface {}) {
    },
    (string) (len=7) "version": (string) (len=7) "v2.25.2",
    (string) (len=8) "replicas": (*big.Float)(0xc0003f0c90)(1),
    (string) (len=13) "probeSelector": (map[string]interface {}) {
    },
    (string) (len=7) "storage": (map[string]interface {}) (len=1) {
     (string) (len=19) "volumeClaimTemplate": (map[string]interface {}) (len=1) {
      (string) (len=4) "spec": (map[string]interface {}) (len=2) {
       (string) (len=9) "resources": (map[string]interface {}) (len=1) {
        (string) (len=8) "requests": (map[string]interface {}) (len=1) {
         (string) (len=7) "storage": (string) (len=4) "10Gi"
        }
       },
       (string) (len=16) "storageClassName": (string) (len=3) "gp2"
      }
     }
    },
    (string) (len=4) "name": (string) (len=6) "test-1",
    (string) (len=5) "image": (string) (len=37) "quay.io/prometheus/prometheus:v2.25.2",
    (string) (len=22) "probeNamespaceSelector": (map[string]interface {}) {
    },
    (string) (len=12) "nodeSelector": (map[string]interface {}) (len=1) {
     (string) (len=4) "role": (string) (len=8) "services"
    },
    (string) (len=18) "serviceAccountName": (string) (len=14) "prometheus-k8s",
    (string) (len=12) "ruleSelector": (map[string]interface {}) (len=1) {
     (string) (len=11) "matchLabels": (map[string]interface {}) (len=2) {
      (string) (len=10) "prometheus": (string) (len=3) "k8s",
      (string) (len=4) "role": (string) (len=11) "alert-rules"
     }
    },
    (string) (len=31) "serviceMonitorNamespaceSelector": (map[string]interface {}) {
    },
    (string) (len=9) "resources": (map[string]interface {}) (len=2) {
     (string) (len=6) "limits": (map[string]interface {}) (len=2) {
      (string) (len=3) "cpu": (string) (len=4) "250m",
      (string) (len=6) "memory": (string) (len=5) "512Mi"
     },
     (string) (len=8) "requests": (map[string]interface {}) (len=2) {
      (string) (len=3) "cpu": (string) (len=4) "200m",
      (string) (len=6) "memory": (string) (len=5) "200Mi"
     }
    },
    (string) (len=15) "securityContext": (map[string]interface {}) (len=3) {
     (string) (len=7) "fsGroup": (*big.Float)(0xc0003f0ea0)(2000),
     (string) (len=12) "runAsNonRoot": (bool) true,
     (string) (len=9) "runAsUser": (*big.Float)(0xc0003f0ed0)(1000)
    },
    (string) (len=8) "alerting": (map[string]interface {}) (len=1) {
     (string) (len=13) "alertmanagers": ([]interface {}) (len=1 cap=1) {
      (map[string]interface {}) (len=3) {
       (string) (len=9) "namespace": (string) (len=10) "monitoring",
       (string) (len=4) "port": (string) (len=3) "web",
       (string) (len=4) "name": (string) (len=17) "alertmanager-main"
      }
     }
    },
    (string) (len=14) "externalLabels": (map[string]interface {}) (len=2) {
     (string) (len=7) "cluster": (string) (len=12) "my-cluster-2",
     (string) (len=7) "product": (string) (len=13) "api beep boop"
    },
    (string) (len=9) "namespace": (string) (len=15) "test-operator-1",
    (string) (len=6) "thanos": (map[string]interface {}) (len=3) {
     (string) (len=19) "objectStorageConfig": (map[string]interface {}) (len=2) {
      (string) (len=3) "key": (string) (len=11) "thanos.yaml",
      (string) (len=4) "name": (string) (len=22) "thanos-objstore-config"
     },
     (string) (len=7) "version": (string) (len=7) "v0.16.0",
     (string) (len=9) "baseImage": (string) (len=21) "quay.io/thanos/thanos"
    },
    (string) (len=23) "additionalScrapeConfigs": (map[string]interface {}) (len=2) {
     (string) (len=3) "key": (string) (len=26) "prometheus-additional.yaml",
     (string) (len=4) "name": (string) (len=25) "additional-scrape-configs"
    }
   }
  }
 }
}

RAW provider 2021/04/03 23:44:46 [ApplyResourceChange][Request][PlannedPrivate]
([]uint8) <nil>

RAW provider 2021/04/03 23:44:47 Finished
RAW provider 2021/04/03 23:45:08 Starting up with command line: []string{".terraform/providers/registry.terraform.io/hashicorp/kubernetes-alpha/0.2.1/darwin_amd64/terraform-provider-kubernetes-alpha_v0.2.1_x5"}
RAW provider 2021/04/03 23:45:08 Finished
RAW provider 2021/04/03 23:45:09 Starting up with command line: []string{".terraform/providers/registry.terraform.io/hashicorp/kubernetes-alpha/0.2.1/darwin_amd64/terraform-provider-kubernetes-alpha_v0.2.1_x5"}
RAW provider 2021/04/03 23:45:09 Finished
RAW provider 2021/04/03 23:45:11 Starting up with command line: []string{".terraform/providers/registry.terraform.io/hashicorp/kubernetes-alpha/0.2.1/darwin_amd64/terraform-provider-kubernetes-alpha_v0.2.1_x5"}
RAW provider 2021/04/03 23:45:11 [Configure][ClientConfig] (rest.Config) &rest.Config{Host:"https://5BE469949E293A3A880C6FE683A7079F.gr7.us-east-1.eks.amazonaws.com", APIPath:"", ContentConfig:rest.ContentConfig{AcceptContentTypes:"", ContentType:"", GroupVersion:(*schema.GroupVersion)(nil), NegotiatedSerializer:runtime.NegotiatedSerializer(nil)}, Username:"", Password:"", BearerToken:"--- REDACTED ---", BearerTokenFile:"", Impersonate:rest.ImpersonationConfig{UserName:"", Groups:[]string(nil), Extra:map[string][]string(nil)}, AuthProvider:<nil>, AuthConfigPersister:rest.AuthProviderConfigPersister(nil), ExecProvider:<nil>, TLSClientConfig:rest.sanitizedTLSClientConfig{Insecure:false, ServerName:"", CertFile:"", KeyFile:"", CAFile:"", CertData:[]uint8(nil), KeyData:[]uint8(nil), CAData:[]uint8{0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x42, 0x45, 0x47, 0x49, 0x4e, 0x20, 0x43, 0x45, 0x52, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x45, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0xa, 0x4d, 0x49, 0x49, 0x43, 0x79, 0x44, 0x43, 0x43, 0x41, 0x62, 0x43, 0x67, 0x41, 0x77, 0x49, 0x42, 0x41, 0x67, 0x49, 0x42, 0x41, 0x44, 0x41, 0x4e, 0x42, 0x67, 0x6b, 0x71, 0x68, 0x6b, 0x69, 0x47, 0x39, 0x77, 0x30, 0x42, 0x41, 0x51, 0x73, 0x46, 0x41, 0x44, 0x41, 0x56, 0x4d, 0x52, 0x4d, 0x77, 0x45, 0x51, 0x59, 0x44, 0x56, 0x51, 0x51, 0x44, 0x45, 0x77, 0x70, 0x72, 0x64, 0x57, 0x4a, 0x6c, 0xa, 0x63, 0x6d, 0x35, 0x6c, 0x64, 0x47, 0x56, 0x7a, 0x4d, 0x42, 0x34, 0x58, 0x44, 0x54, 0x49, 0x77, 0x4d, 0x54, 0x41, 0x79, 0x4d, 0x54, 0x49, 0x78, 0x4e, 0x44, 0x63, 0x77, 0x4e, 0x46, 0x6f, 0x58, 0x44, 0x54, 0x4d, 0x77, 0x4d, 0x54, 0x41, 0x78, 0x4f, 0x54, 0x49, 0x78, 0x4e, 0x44, 0x63, 0x77, 0x4e, 0x46, 0x6f, 0x77, 0x46, 0x54, 0x45, 0x54, 0x4d, 0x42, 0x45, 0x47, 0x41, 0x31, 0x55, 0x45, 0xa, 0x41, 0x78, 0x4d, 0x4b, 0x61, 0x33, 0x56, 0x69, 0x5a, 0x58, 0x4a, 0x75, 0x5a, 0x58, 0x52, 0x6c, 0x63, 0x7a, 0x43, 0x43, 0x41, 0x53, 0x49, 0x77, 0x44, 0x51, 0x59, 0x4a, 0x4b, 0x6f, 0x5a, 0x49, 0x68, 0x76, 0x63, 0x4e, 0x41, 0x51, 0x45, 0x42, 0x42, 0x51, 0x41, 0x44, 0x67, 0x67, 0x45, 0x50, 0x41, 0x44, 0x43, 0x43, 0x41, 0x51, 0x6f, 0x43, 0x67, 0x67, 0x45, 0x42, 0x41, 0x4c, 0x42, 0x62, 0xa, 0x50, 0x46, 0x2b, 0x39, 0x30, 0x52, 0x6f, 0x67, 0x48, 0x58, 0x41, 0x79, 0x46, 0x56, 0x74, 0x41, 0x2b, 0x7a, 0x43, 0x46, 0x6d, 0x33, 0x56, 0x53, 0x31, 0x61, 0x59, 0x59, 0x79, 0x4c, 0x7a, 0x2f, 0x32, 0x51, 0x48, 0x76, 0x37, 0x4a, 0x65, 0x45, 0x48, 0x71, 0x49, 0x77, 0x66, 0x63, 0x75, 0x7a, 0x56, 0x71, 0x58, 0x38, 0x66, 0x4b, 0x70, 0x33, 0x68, 0x4c, 0x79, 0x79, 0x62, 0x6b, 0x2f, 0x64, 0xa, 0x55, 0x47, 0x49, 0x45, 0x41, 0x30, 0x75, 0x54, 0x6a, 0x4c, 0x67, 0x67, 0x71, 0x66, 0x66, 0x6f, 0x65, 0x6f, 0x31, 0x38, 0x7a, 0x35, 0x48, 0x4a, 0x6e, 0x73, 0x41, 0x6f, 0x6b, 0x43, 0x38, 0x64, 0x7a, 0x70, 0x5a, 0x43, 0x6b, 0x67, 0x31, 0x73, 0x78, 0x45, 0x79, 0x62, 0x2f, 0x2b, 0x39, 0x6d, 0x31, 0x69, 0x49, 0x67, 0x56, 0x33, 0x59, 0x39, 0x74, 0x48, 0x44, 0x45, 0x59, 0x4a, 0x6c, 0x37, 0xa, 0x56, 0x77, 0x51, 0x68, 0x70, 0x38, 0x48, 0x6e, 0x33, 0x46, 0x49, 0x2f, 0x4a, 0x63, 0x77, 0x44, 0x49, 0x6b, 0x55, 0x36, 0x45, 0x6a, 0x65, 0x46, 0x30, 0x71, 0x4c, 0x4b, 0x42, 0x75, 0x54, 0x31, 0x6e, 0x66, 0x45, 0x74, 0x6f, 0x68, 0x54, 0x4e, 0x37, 0x78, 0x70, 0x4e, 0x43, 0x76, 0x44, 0x61, 0x36, 0x44, 0x53, 0x32, 0x4c, 0x54, 0x57, 0x39, 0x6f, 0x6e, 0x74, 0x6d, 0x4b, 0x79, 0x45, 0x47, 0xa, 0x78, 0x6c, 0x73, 0x78, 0x74, 0x6b, 0x64, 0x47, 0x45, 0x37, 0x79, 0x55, 0x55, 0x67, 0x77, 0x52, 0x53, 0x72, 0x79, 0x6a, 0x41, 0x65, 0x76, 0x41, 0x79, 0x5a, 0x64, 0x37, 0x71, 0x45, 0x72, 0x67, 0x74, 0x41, 0x56, 0x6c, 0x35, 0x70, 0x44, 0x46, 0x48, 0x30, 0x74, 0x42, 0x48, 0x53, 0x74, 0x67, 0x6b, 0x41, 0x51, 0x59, 0x57, 0x48, 0x77, 0x78, 0x62, 0x62, 0x79, 0x70, 0x59, 0x37, 0x33, 0x4c, 0xa, 0x5a, 0x43, 0x51, 0x73, 0x2b, 0x4c, 0x35, 0x44, 0x6d, 0x67, 0x2f, 0x43, 0x6e, 0x57, 0x31, 0x75, 0x62, 0x47, 0x46, 0x32, 0x59, 0x75, 0x47, 0x33, 0x79, 0x46, 0x59, 0x4b, 0x31, 0x6c, 0x32, 0x4e, 0x46, 0x78, 0x2f, 0x74, 0x67, 0x48, 0x71, 0x4e, 0x78, 0x56, 0x48, 0x6a, 0x31, 0x53, 0x42, 0x5a, 0x32, 0x41, 0x54, 0x76, 0x61, 0x4b, 0x47, 0x6f, 0x6c, 0x56, 0x35, 0x53, 0x69, 0x57, 0x33, 0x49, 0xa, 0x68, 0x45, 0x46, 0x46, 0x2b, 0x77, 0x4b, 0x50, 0x73, 0x63, 0x46, 0x59, 0x4f, 0x49, 0x76, 0x53, 0x4d, 0x44, 0x38, 0x43, 0x41, 0x77, 0x45, 0x41, 0x41, 0x61, 0x4d, 0x6a, 0x4d, 0x43, 0x45, 0x77, 0x44, 0x67, 0x59, 0x44, 0x56, 0x52, 0x30, 0x50, 0x41, 0x51, 0x48, 0x2f, 0x42, 0x41, 0x51, 0x44, 0x41, 0x67, 0x4b, 0x6b, 0x4d, 0x41, 0x38, 0x47, 0x41, 0x31, 0x55, 0x64, 0x45, 0x77, 0x45, 0x42, 0xa, 0x2f, 0x77, 0x51, 0x46, 0x4d, 0x41, 0x4d, 0x42, 0x41, 0x66, 0x38, 0x77, 0x44, 0x51, 0x59, 0x4a, 0x4b, 0x6f, 0x5a, 0x49, 0x68, 0x76, 0x63, 0x4e, 0x41, 0x51, 0x45, 0x4c, 0x42, 0x51, 0x41, 0x44, 0x67, 0x67, 0x45, 0x42, 0x41, 0x46, 0x2b, 0x59, 0x44, 0x46, 0x31, 0x4e, 0x4b, 0x65, 0x6f, 0x41, 0x38, 0x49, 0x72, 0x65, 0x4f, 0x78, 0x4d, 0x2f, 0x4f, 0x45, 0x59, 0x70, 0x54, 0x44, 0x6a, 0x76, 0xa, 0x50, 0x64, 0x55, 0x69, 0x31, 0x61, 0x37, 0x79, 0x75, 0x74, 0x2b, 0x30, 0x39, 0x37, 0x70, 0x36, 0x6f, 0x2f, 0x32, 0x41, 0x53, 0x35, 0x56, 0x52, 0x6a, 0x70, 0x32, 0x57, 0x55, 0x7a, 0x72, 0x4b, 0x79, 0x73, 0x57, 0x75, 0x65, 0x74, 0x55, 0x45, 0x2b, 0x72, 0x6e, 0x41, 0x70, 0x33, 0x39, 0x37, 0x2f, 0x6a, 0x78, 0x75, 0x73, 0x54, 0x78, 0x2f, 0x50, 0x76, 0x58, 0x57, 0x44, 0x34, 0x75, 0x61, 0xa, 0x51, 0x32, 0x7a, 0x49, 0x38, 0x44, 0x59, 0x62, 0x6b, 0x64, 0x75, 0x63, 0x4f, 0x47, 0x67, 0x4a, 0x31, 0x78, 0x61, 0x4e, 0x70, 0x6b, 0x75, 0x62, 0x48, 0x33, 0x64, 0x61, 0x48, 0x59, 0x5a, 0x2b, 0x48, 0x38, 0x71, 0x42, 0x70, 0x2f, 0x74, 0x50, 0x41, 0x42, 0x57, 0x73, 0x32, 0x35, 0x66, 0x78, 0x78, 0x31, 0x53, 0x69, 0x75, 0x38, 0x4e, 0x38, 0x4b, 0x59, 0x4a, 0x2b, 0x32, 0x49, 0x68, 0x75, 0xa, 0x61, 0x64, 0x42, 0x71, 0x61, 0x73, 0x56, 0x4a, 0x6c, 0x79, 0x55, 0x4d, 0x79, 0x50, 0x49, 0x7a, 0x4b, 0x46, 0x36, 0x6e, 0x4c, 0x54, 0x57, 0x66, 0x59, 0x5a, 0x4f, 0x31, 0x76, 0x30, 0x32, 0x36, 0x4b, 0x36, 0x6f, 0x31, 0x63, 0x39, 0x78, 0x63, 0x74, 0x69, 0x77, 0x54, 0x6a, 0x54, 0x59, 0x43, 0x34, 0x7a, 0x38, 0x65, 0x4b, 0x69, 0x41, 0x4c, 0x49, 0x36, 0x33, 0x33, 0x34, 0x74, 0x4e, 0x51, 0xa, 0x33, 0x32, 0x5a, 0x77, 0x4f, 0x75, 0x73, 0x58, 0x6e, 0x4a, 0x33, 0x6b, 0x34, 0x75, 0x42, 0x57, 0x70, 0x79, 0x31, 0x69, 0x39, 0x6f, 0x4e, 0x6b, 0x75, 0x75, 0x48, 0x45, 0x64, 0x69, 0x48, 0x37, 0x36, 0x30, 0x35, 0x4a, 0x31, 0x66, 0x77, 0x57, 0x53, 0x30, 0x63, 0x65, 0x35, 0x67, 0x49, 0x50, 0x35, 0x6a, 0x6e, 0x4e, 0x73, 0x4d, 0x64, 0x61, 0x44, 0x49, 0x2f, 0x39, 0x54, 0x4a, 0x4e, 0x6e, 0xa, 0x70, 0x67, 0x2b, 0x41, 0x58, 0x55, 0x4a, 0x78, 0x46, 0x30, 0x4f, 0x77, 0x50, 0x42, 0x63, 0x45, 0x37, 0x4a, 0x41, 0x43, 0x64, 0x52, 0x6d, 0x58, 0x73, 0x2b, 0x33, 0x78, 0x6c, 0x54, 0x59, 0x4a, 0x76, 0x70, 0x53, 0x75, 0x32, 0x4b, 0x65, 0x6c, 0x4c, 0x55, 0x6a, 0x52, 0x34, 0x5a, 0x4c, 0x72, 0x5a, 0x34, 0x78, 0x39, 0x4c, 0x45, 0x36, 0x54, 0x65, 0x77, 0x34, 0x3d, 0xa, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x45, 0x4e, 0x44, 0x20, 0x43, 0x45, 0x52, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x45, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0xa}, NextProtos:[]string(nil)}, UserAgent:"", DisableCompression:false, Transport:http.RoundTripper(nil), WrapTransport:(transport.WrapperFunc)(nil), QPS:0, Burst:0, RateLimiter:flowcontrol.RateLimiter(nil), Timeout:0, Dial:(func(context.Context, string, string) (net.Conn, error))(nil)}

RAW provider 2021/04/03 23:45:13 Finished
RAW provider 2021/04/03 23:45:13 Starting up with command line: []string{".terraform/providers/registry.terraform.io/hashicorp/kubernetes-alpha/0.2.1/darwin_amd64/terraform-provider-kubernetes-alpha_v0.2.1_x5"}
RAW provider 2021/04/03 23:45:13 [Configure][ClientConfig] (rest.Config) &rest.Config{Host:"https://5BE469949E293A3A880C6FE683A7079F.gr7.us-east-1.eks.amazonaws.com", APIPath:"", ContentConfig:rest.ContentConfig{AcceptContentTypes:"", ContentType:"", GroupVersion:(*schema.GroupVersion)(nil), NegotiatedSerializer:runtime.NegotiatedSerializer(nil)}, Username:"", Password:"", BearerToken:"--- REDACTED ---", BearerTokenFile:"", Impersonate:rest.ImpersonationConfig{UserName:"", Groups:[]string(nil), Extra:map[string][]string(nil)}, AuthProvider:<nil>, AuthConfigPersister:rest.AuthProviderConfigPersister(nil), ExecProvider:<nil>, TLSClientConfig:rest.sanitizedTLSClientConfig{Insecure:false, ServerName:"", CertFile:"", KeyFile:"", CAFile:"", CertData:[]uint8(nil), KeyData:[]uint8(nil), CAData:[]uint8{0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x42, 0x45, 0x47, 0x49, 0x4e, 0x20, 0x43, 0x45, 0x52, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x45, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0xa, 0x4d, 0x49, 0x49, 0x43, 0x79, 0x44, 0x43, 0x43, 0x41, 0x62, 0x43, 0x67, 0x41, 0x77, 0x49, 0x42, 0x41, 0x67, 0x49, 0x42, 0x41, 0x44, 0x41, 0x4e, 0x42, 0x67, 0x6b, 0x71, 0x68, 0x6b, 0x69, 0x47, 0x39, 0x77, 0x30, 0x42, 0x41, 0x51, 0x73, 0x46, 0x41, 0x44, 0x41, 0x56, 0x4d, 0x52, 0x4d, 0x77, 0x45, 0x51, 0x59, 0x44, 0x56, 0x51, 0x51, 0x44, 0x45, 0x77, 0x70, 0x72, 0x64, 0x57, 0x4a, 0x6c, 0xa, 0x63, 0x6d, 0x35, 0x6c, 0x64, 0x47, 0x56, 0x7a, 0x4d, 0x42, 0x34, 0x58, 0x44, 0x54, 0x49, 0x77, 0x4d, 0x54, 0x41, 0x79, 0x4d, 0x54, 0x49, 0x78, 0x4e, 0x44, 0x63, 0x77, 0x4e, 0x46, 0x6f, 0x58, 0x44, 0x54, 0x4d, 0x77, 0x4d, 0x54, 0x41, 0x78, 0x4f, 0x54, 0x49, 0x78, 0x4e, 0x44, 0x63, 0x77, 0x4e, 0x46, 0x6f, 0x77, 0x46, 0x54, 0x45, 0x54, 0x4d, 0x42, 0x45, 0x47, 0x41, 0x31, 0x55, 0x45, 0xa, 0x41, 0x78, 0x4d, 0x4b, 0x61, 0x33, 0x56, 0x69, 0x5a, 0x58, 0x4a, 0x75, 0x5a, 0x58, 0x52, 0x6c, 0x63, 0x7a, 0x43, 0x43, 0x41, 0x53, 0x49, 0x77, 0x44, 0x51, 0x59, 0x4a, 0x4b, 0x6f, 0x5a, 0x49, 0x68, 0x76, 0x63, 0x4e, 0x41, 0x51, 0x45, 0x42, 0x42, 0x51, 0x41, 0x44, 0x67, 0x67, 0x45, 0x50, 0x41, 0x44, 0x43, 0x43, 0x41, 0x51, 0x6f, 0x43, 0x67, 0x67, 0x45, 0x42, 0x41, 0x4c, 0x42, 0x62, 0xa, 0x50, 0x46, 0x2b, 0x39, 0x30, 0x52, 0x6f, 0x67, 0x48, 0x58, 0x41, 0x79, 0x46, 0x56, 0x74, 0x41, 0x2b, 0x7a, 0x43, 0x46, 0x6d, 0x33, 0x56, 0x53, 0x31, 0x61, 0x59, 0x59, 0x79, 0x4c, 0x7a, 0x2f, 0x32, 0x51, 0x48, 0x76, 0x37, 0x4a, 0x65, 0x45, 0x48, 0x71, 0x49, 0x77, 0x66, 0x63, 0x75, 0x7a, 0x56, 0x71, 0x58, 0x38, 0x66, 0x4b, 0x70, 0x33, 0x68, 0x4c, 0x79, 0x79, 0x62, 0x6b, 0x2f, 0x64, 0xa, 0x55, 0x47, 0x49, 0x45, 0x41, 0x30, 0x75, 0x54, 0x6a, 0x4c, 0x67, 0x67, 0x71, 0x66, 0x66, 0x6f, 0x65, 0x6f, 0x31, 0x38, 0x7a, 0x35, 0x48, 0x4a, 0x6e, 0x73, 0x41, 0x6f, 0x6b, 0x43, 0x38, 0x64, 0x7a, 0x70, 0x5a, 0x43, 0x6b, 0x67, 0x31, 0x73, 0x78, 0x45, 0x79, 0x62, 0x2f, 0x2b, 0x39, 0x6d, 0x31, 0x69, 0x49, 0x67, 0x56, 0x33, 0x59, 0x39, 0x74, 0x48, 0x44, 0x45, 0x59, 0x4a, 0x6c, 0x37, 0xa, 0x56, 0x77, 0x51, 0x68, 0x70, 0x38, 0x48, 0x6e, 0x33, 0x46, 0x49, 0x2f, 0x4a, 0x63, 0x77, 0x44, 0x49, 0x6b, 0x55, 0x36, 0x45, 0x6a, 0x65, 0x46, 0x30, 0x71, 0x4c, 0x4b, 0x42, 0x75, 0x54, 0x31, 0x6e, 0x66, 0x45, 0x74, 0x6f, 0x68, 0x54, 0x4e, 0x37, 0x78, 0x70, 0x4e, 0x43, 0x76, 0x44, 0x61, 0x36, 0x44, 0x53, 0x32, 0x4c, 0x54, 0x57, 0x39, 0x6f, 0x6e, 0x74, 0x6d, 0x4b, 0x79, 0x45, 0x47, 0xa, 0x78, 0x6c, 0x73, 0x78, 0x74, 0x6b, 0x64, 0x47, 0x45, 0x37, 0x79, 0x55, 0x55, 0x67, 0x77, 0x52, 0x53, 0x72, 0x79, 0x6a, 0x41, 0x65, 0x76, 0x41, 0x79, 0x5a, 0x64, 0x37, 0x71, 0x45, 0x72, 0x67, 0x74, 0x41, 0x56, 0x6c, 0x35, 0x70, 0x44, 0x46, 0x48, 0x30, 0x74, 0x42, 0x48, 0x53, 0x74, 0x67, 0x6b, 0x41, 0x51, 0x59, 0x57, 0x48, 0x77, 0x78, 0x62, 0x62, 0x79, 0x70, 0x59, 0x37, 0x33, 0x4c, 0xa, 0x5a, 0x43, 0x51, 0x73, 0x2b, 0x4c, 0x35, 0x44, 0x6d, 0x67, 0x2f, 0x43, 0x6e, 0x57, 0x31, 0x75, 0x62, 0x47, 0x46, 0x32, 0x59, 0x75, 0x47, 0x33, 0x79, 0x46, 0x59, 0x4b, 0x31, 0x6c, 0x32, 0x4e, 0x46, 0x78, 0x2f, 0x74, 0x67, 0x48, 0x71, 0x4e, 0x78, 0x56, 0x48, 0x6a, 0x31, 0x53, 0x42, 0x5a, 0x32, 0x41, 0x54, 0x76, 0x61, 0x4b, 0x47, 0x6f, 0x6c, 0x56, 0x35, 0x53, 0x69, 0x57, 0x33, 0x49, 0xa, 0x68, 0x45, 0x46, 0x46, 0x2b, 0x77, 0x4b, 0x50, 0x73, 0x63, 0x46, 0x59, 0x4f, 0x49, 0x76, 0x53, 0x4d, 0x44, 0x38, 0x43, 0x41, 0x77, 0x45, 0x41, 0x41, 0x61, 0x4d, 0x6a, 0x4d, 0x43, 0x45, 0x77, 0x44, 0x67, 0x59, 0x44, 0x56, 0x52, 0x30, 0x50, 0x41, 0x51, 0x48, 0x2f, 0x42, 0x41, 0x51, 0x44, 0x41, 0x67, 0x4b, 0x6b, 0x4d, 0x41, 0x38, 0x47, 0x41, 0x31, 0x55, 0x64, 0x45, 0x77, 0x45, 0x42, 0xa, 0x2f, 0x77, 0x51, 0x46, 0x4d, 0x41, 0x4d, 0x42, 0x41, 0x66, 0x38, 0x77, 0x44, 0x51, 0x59, 0x4a, 0x4b, 0x6f, 0x5a, 0x49, 0x68, 0x76, 0x63, 0x4e, 0x41, 0x51, 0x45, 0x4c, 0x42, 0x51, 0x41, 0x44, 0x67, 0x67, 0x45, 0x42, 0x41, 0x46, 0x2b, 0x59, 0x44, 0x46, 0x31, 0x4e, 0x4b, 0x65, 0x6f, 0x41, 0x38, 0x49, 0x72, 0x65, 0x4f, 0x78, 0x4d, 0x2f, 0x4f, 0x45, 0x59, 0x70, 0x54, 0x44, 0x6a, 0x76, 0xa, 0x50, 0x64, 0x55, 0x69, 0x31, 0x61, 0x37, 0x79, 0x75, 0x74, 0x2b, 0x30, 0x39, 0x37, 0x70, 0x36, 0x6f, 0x2f, 0x32, 0x41, 0x53, 0x35, 0x56, 0x52, 0x6a, 0x70, 0x32, 0x57, 0x55, 0x7a, 0x72, 0x4b, 0x79, 0x73, 0x57, 0x75, 0x65, 0x74, 0x55, 0x45, 0x2b, 0x72, 0x6e, 0x41, 0x70, 0x33, 0x39, 0x37, 0x2f, 0x6a, 0x78, 0x75, 0x73, 0x54, 0x78, 0x2f, 0x50, 0x76, 0x58, 0x57, 0x44, 0x34, 0x75, 0x61, 0xa, 0x51, 0x32, 0x7a, 0x49, 0x38, 0x44, 0x59, 0x62, 0x6b, 0x64, 0x75, 0x63, 0x4f, 0x47, 0x67, 0x4a, 0x31, 0x78, 0x61, 0x4e, 0x70, 0x6b, 0x75, 0x62, 0x48, 0x33, 0x64, 0x61, 0x48, 0x59, 0x5a, 0x2b, 0x48, 0x38, 0x71, 0x42, 0x70, 0x2f, 0x74, 0x50, 0x41, 0x42, 0x57, 0x73, 0x32, 0x35, 0x66, 0x78, 0x78, 0x31, 0x53, 0x69, 0x75, 0x38, 0x4e, 0x38, 0x4b, 0x59, 0x4a, 0x2b, 0x32, 0x49, 0x68, 0x75, 0xa, 0x61, 0x64, 0x42, 0x71, 0x61, 0x73, 0x56, 0x4a, 0x6c, 0x79, 0x55, 0x4d, 0x79, 0x50, 0x49, 0x7a, 0x4b, 0x46, 0x36, 0x6e, 0x4c, 0x54, 0x57, 0x66, 0x59, 0x5a, 0x4f, 0x31, 0x76, 0x30, 0x32, 0x36, 0x4b, 0x36, 0x6f, 0x31, 0x63, 0x39, 0x78, 0x63, 0x74, 0x69, 0x77, 0x54, 0x6a, 0x54, 0x59, 0x43, 0x34, 0x7a, 0x38, 0x65, 0x4b, 0x69, 0x41, 0x4c, 0x49, 0x36, 0x33, 0x33, 0x34, 0x74, 0x4e, 0x51, 0xa, 0x33, 0x32, 0x5a, 0x77, 0x4f, 0x75, 0x73, 0x58, 0x6e, 0x4a, 0x33, 0x6b, 0x34, 0x75, 0x42, 0x57, 0x70, 0x79, 0x31, 0x69, 0x39, 0x6f, 0x4e, 0x6b, 0x75, 0x75, 0x48, 0x45, 0x64, 0x69, 0x48, 0x37, 0x36, 0x30, 0x35, 0x4a, 0x31, 0x66, 0x77, 0x57, 0x53, 0x30, 0x63, 0x65, 0x35, 0x67, 0x49, 0x50, 0x35, 0x6a, 0x6e, 0x4e, 0x73, 0x4d, 0x64, 0x61, 0x44, 0x49, 0x2f, 0x39, 0x54, 0x4a, 0x4e, 0x6e, 0xa, 0x70, 0x67, 0x2b, 0x41, 0x58, 0x55, 0x4a, 0x78, 0x46, 0x30, 0x4f, 0x77, 0x50, 0x42, 0x63, 0x45, 0x37, 0x4a, 0x41, 0x43, 0x64, 0x52, 0x6d, 0x58, 0x73, 0x2b, 0x33, 0x78, 0x6c, 0x54, 0x59, 0x4a, 0x76, 0x70, 0x53, 0x75, 0x32, 0x4b, 0x65, 0x6c, 0x4c, 0x55, 0x6a, 0x52, 0x34, 0x5a, 0x4c, 0x72, 0x5a, 0x34, 0x78, 0x39, 0x4c, 0x45, 0x36, 0x54, 0x65, 0x77, 0x34, 0x3d, 0xa, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x45, 0x4e, 0x44, 0x20, 0x43, 0x45, 0x52, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x45, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0xa}, NextProtos:[]string(nil)}, UserAgent:"", DisableCompression:false, Transport:http.RoundTripper(nil), WrapTransport:(transport.WrapperFunc)(nil), QPS:0, Burst:0, RateLimiter:flowcontrol.RateLimiter(nil), Timeout:0, Dial:(func(context.Context, string, string) (net.Conn, error))(nil)}

RAW provider 2021/04/03 23:45:15 [ApplyResourceChange][Request][PlannedState]
(cty.Value) {
 ty: (cty.Type) {
  typeImpl: (cty.typeObject) {
   typeImplSigil: (cty.typeImplSigil) {
   },
   AttrTypes: (map[string]cty.Type) (len=3) {
    (string) (len=8) "manifest": (cty.Type) {
     typeImpl: (cty.typeObject) {
      typeImplSigil: (cty.typeImplSigil) {
      },
      AttrTypes: (map[string]cty.Type) (len=4) {
       (string) (len=10) "apiVersion": (cty.Type) {
        typeImpl: (cty.primitiveType) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         Kind: (cty.primitiveTypeKind) 83
        }
       },
       (string) (len=4) "kind": (cty.Type) {
        typeImpl: (cty.primitiveType) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         Kind: (cty.primitiveTypeKind) 83
        }
       },
       (string) (len=8) "metadata": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) (len=2) {
          (string) (len=4) "name": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=9) "namespace": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          }
         }
        }
       },
       (string) (len=4) "spec": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) (len=21) {
          (string) (len=14) "externalLabels": (cty.Type) {
           typeImpl: (cty.typeMap) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            ElementTypeT: (cty.Type) {
             typeImpl: (cty.primitiveType) {
              typeImplSigil: (cty.typeImplSigil) {
              },
              Kind: (cty.primitiveTypeKind) 83
             }
            }
           }
          },
          (string) (len=22) "serviceMonitorSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=7) "storage": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=1) {
             (string) (len=19) "volumeClaimTemplate": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=1) {
                (string) (len=4) "spec": (cty.Type) {
                 typeImpl: (cty.typeObject) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  AttrTypes: (map[string]cty.Type) (len=2) {
                   (string) (len=9) "resources": (cty.Type) {
                    typeImpl: (cty.typeObject) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     AttrTypes: (map[string]cty.Type) (len=1) {
                      (string) (len=8) "requests": (cty.Type) {
                       typeImpl: (cty.typeObject) {
                        typeImplSigil: (cty.typeImplSigil) {
                        },
                        AttrTypes: (map[string]cty.Type) (len=1) {
                         (string) (len=7) "storage": (cty.Type) {
                          typeImpl: (cty.primitiveType) {
                           typeImplSigil: (cty.typeImplSigil) {
                           },
                           Kind: (cty.primitiveTypeKind) 83
                          }
                         }
                        }
                       }
                      }
                     }
                    }
                   },
                   (string) (len=16) "storageClassName": (cty.Type) {
                    typeImpl: (cty.primitiveType) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     Kind: (cty.primitiveTypeKind) 83
                    }
                   }
                  }
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=22) "probeNamespaceSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=18) "podMonitorSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=12) "ruleSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=1) {
             (string) (len=11) "matchLabels": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=4) "role": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=10) "prometheus": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=27) "podMonitorNamespaceSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=23) "additionalScrapeConfigs": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=2) {
             (string) (len=3) "key": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             },
             (string) (len=4) "name": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             }
            }
           }
          },
          (string) (len=9) "namespace": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=6) "thanos": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=3) {
             (string) (len=9) "baseImage": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             },
             (string) (len=19) "objectStorageConfig": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=4) "name": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=3) "key": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             },
             (string) (len=7) "version": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             }
            }
           }
          },
          (string) (len=5) "image": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=8) "replicas": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 78
           }
          },
          (string) (len=9) "resources": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=2) {
             (string) (len=6) "limits": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=6) "memory": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=3) "cpu": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             },
             (string) (len=8) "requests": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=6) "memory": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=3) "cpu": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=31) "serviceMonitorNamespaceSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=15) "securityContext": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=3) {
             (string) (len=7) "fsGroup": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 78
              }
             },
             (string) (len=12) "runAsNonRoot": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 66
              }
             },
             (string) (len=9) "runAsUser": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 78
              }
             }
            }
           }
          },
          (string) (len=8) "alerting": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=1) {
             (string) (len=13) "alertmanagers": (cty.Type) {
              typeImpl: (cty.typeTuple) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               ElemTypes: ([]cty.Type) (len=1 cap=1) {
                (cty.Type) {
                 typeImpl: (cty.typeObject) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  AttrTypes: (map[string]cty.Type) (len=3) {
                   (string) (len=4) "port": (cty.Type) {
                    typeImpl: (cty.primitiveType) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     Kind: (cty.primitiveTypeKind) 83
                    }
                   },
                   (string) (len=4) "name": (cty.Type) {
                    typeImpl: (cty.primitiveType) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     Kind: (cty.primitiveTypeKind) 83
                    }
                   },
                   (string) (len=9) "namespace": (cty.Type) {
                    typeImpl: (cty.primitiveType) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     Kind: (cty.primitiveTypeKind) 83
                    }
                   }
                  }
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=13) "probeSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=18) "serviceAccountName": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=4) "name": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=7) "version": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=12) "nodeSelector": (cty.Type) {
           typeImpl: (cty.typeMap) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            ElementTypeT: (cty.Type) {
             typeImpl: (cty.primitiveType) {
              typeImplSigil: (cty.typeImplSigil) {
              },
              Kind: (cty.primitiveTypeKind) 83
             }
            }
           }
          }
         }
        }
       }
      }
     }
    },
    (string) (len=6) "object": (cty.Type) {
     typeImpl: (cty.typeObject) {
      typeImplSigil: (cty.typeImplSigil) {
      },
      AttrTypes: (map[string]cty.Type) (len=4) {
       (string) (len=4) "spec": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) (len=19) {
          (string) (len=18) "podMonitorSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=14) "externalLabels": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=2) {
             (string) (len=7) "product": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             },
             (string) (len=7) "cluster": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             }
            }
           }
          },
          (string) (len=22) "serviceMonitorSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=22) "probeNamespaceSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=5) "image": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=7) "version": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=8) "replicas": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 78
           }
          },
          (string) (len=18) "serviceAccountName": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=8) "alerting": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=1) {
             (string) (len=13) "alertmanagers": (cty.Type) {
              typeImpl: (cty.typeTuple) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               ElemTypes: ([]cty.Type) (len=1 cap=1) {
                (cty.Type) {
                 typeImpl: (cty.typeObject) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  AttrTypes: (map[string]cty.Type) (len=3) {
                   (string) (len=4) "name": (cty.Type) {
                    typeImpl: (cty.primitiveType) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     Kind: (cty.primitiveTypeKind) 83
                    }
                   },
                   (string) (len=9) "namespace": (cty.Type) {
                    typeImpl: (cty.primitiveType) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     Kind: (cty.primitiveTypeKind) 83
                    }
                   },
                   (string) (len=4) "port": (cty.Type) {
                    typeImpl: (cty.primitiveType) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     Kind: (cty.primitiveTypeKind) 83
                    }
                   }
                  }
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=12) "ruleSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=1) {
             (string) (len=11) "matchLabels": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=4) "role": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=10) "prometheus": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=12) "nodeSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=1) {
             (string) (len=4) "role": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             }
            }
           }
          },
          (string) (len=6) "thanos": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=3) {
             (string) (len=9) "baseImage": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             },
             (string) (len=19) "objectStorageConfig": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=3) "key": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=4) "name": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             },
             (string) (len=7) "version": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             }
            }
           }
          },
          (string) (len=9) "resources": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=2) {
             (string) (len=6) "limits": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=6) "memory": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=3) "cpu": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             },
             (string) (len=8) "requests": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=6) "memory": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=3) "cpu": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=31) "serviceMonitorNamespaceSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=23) "additionalScrapeConfigs": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=2) {
             (string) (len=3) "key": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             },
             (string) (len=4) "name": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             }
            }
           }
          },
          (string) (len=7) "storage": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=1) {
             (string) (len=19) "volumeClaimTemplate": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=1) {
                (string) (len=4) "spec": (cty.Type) {
                 typeImpl: (cty.typeObject) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  AttrTypes: (map[string]cty.Type) (len=2) {
                   (string) (len=16) "storageClassName": (cty.Type) {
                    typeImpl: (cty.primitiveType) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     Kind: (cty.primitiveTypeKind) 83
                    }
                   },
                   (string) (len=9) "resources": (cty.Type) {
                    typeImpl: (cty.typeObject) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     AttrTypes: (map[string]cty.Type) (len=1) {
                      (string) (len=8) "requests": (cty.Type) {
                       typeImpl: (cty.typeObject) {
                        typeImplSigil: (cty.typeImplSigil) {
                        },
                        AttrTypes: (map[string]cty.Type) (len=1) {
                         (string) (len=7) "storage": (cty.Type) {
                          typeImpl: (cty.primitiveType) {
                           typeImplSigil: (cty.typeImplSigil) {
                           },
                           Kind: (cty.primitiveTypeKind) 83
                          }
                         }
                        }
                       }
                      }
                     }
                    }
                   }
                  }
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=15) "securityContext": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=3) {
             (string) (len=7) "fsGroup": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 78
              }
             },
             (string) (len=12) "runAsNonRoot": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 66
              }
             },
             (string) (len=9) "runAsUser": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 78
              }
             }
            }
           }
          },
          (string) (len=27) "podMonitorNamespaceSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=13) "probeSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          }
         }
        }
       },
       (string) (len=10) "apiVersion": (cty.Type) {
        typeImpl: (cty.primitiveType) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         Kind: (cty.primitiveTypeKind) 83
        }
       },
       (string) (len=4) "kind": (cty.Type) {
        typeImpl: (cty.primitiveType) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         Kind: (cty.primitiveTypeKind) 83
        }
       },
       (string) (len=8) "metadata": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) (len=2) {
          (string) (len=4) "name": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=9) "namespace": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          }
         }
        }
       }
      }
     }
    },
    (string) (len=8) "wait_for": (cty.Type) {
     typeImpl: (cty.typeObject) {
      typeImplSigil: (cty.typeImplSigil) {
      },
      AttrTypes: (map[string]cty.Type) (len=1) {
       (string) (len=6) "fields": (cty.Type) {
        typeImpl: (cty.typeMap) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         ElementTypeT: (cty.Type) {
          typeImpl: (cty.primitiveType) {
           typeImplSigil: (cty.typeImplSigil) {
           },
           Kind: (cty.primitiveTypeKind) 83
          }
         }
        }
       }
      }
     }
    }
   }
  }
 },
 v: (map[string]interface {}) (len=3) {
  (string) (len=8) "manifest": (map[string]interface {}) (len=4) {
   (string) (len=8) "metadata": (map[string]interface {}) (len=2) {
    (string) (len=4) "name": (string) (len=6) "test-1",
    (string) (len=9) "namespace": (string) (len=15) "test-operator-1"
   },
   (string) (len=4) "spec": (map[string]interface {}) (len=21) {
    (string) (len=8) "alerting": (map[string]interface {}) (len=1) {
     (string) (len=13) "alertmanagers": ([]interface {}) (len=1 cap=1) {
      (map[string]interface {}) (len=3) {
       (string) (len=4) "port": (string) (len=3) "web",
       (string) (len=4) "name": (string) (len=17) "alertmanager-main",
       (string) (len=9) "namespace": (string) (len=10) "monitoring"
      }
     }
    },
    (string) (len=9) "namespace": (string) (len=15) "test-operator-1",
    (string) (len=9) "resources": (map[string]interface {}) (len=2) {
     (string) (len=6) "limits": (map[string]interface {}) (len=2) {
      (string) (len=6) "memory": (string) (len=5) "512Mi",
      (string) (len=3) "cpu": (string) (len=4) "250m"
     },
     (string) (len=8) "requests": (map[string]interface {}) (len=2) {
      (string) (len=6) "memory": (string) (len=5) "200Mi",
      (string) (len=3) "cpu": (string) (len=4) "200m"
     }
    },
    (string) (len=14) "externalLabels": (map[string]interface {}) (len=2) {
     (string) (len=7) "product": (string) (len=13) "api beep boop",
     (string) (len=7) "cluster": (string) (len=12) "my-cluster-2"
    },
    (string) (len=5) "image": (string) (len=37) "quay.io/prometheus/prometheus:v2.25.2",
    (string) (len=12) "nodeSelector": (map[string]interface {}) (len=1) {
     (string) (len=4) "role": (string) (len=8) "services"
    },
    (string) (len=27) "podMonitorNamespaceSelector": (map[string]interface {}) {
    },
    (string) (len=7) "storage": (map[string]interface {}) (len=1) {
     (string) (len=19) "volumeClaimTemplate": (map[string]interface {}) (len=1) {
      (string) (len=4) "spec": (map[string]interface {}) (len=2) {
       (string) (len=9) "resources": (map[string]interface {}) (len=1) {
        (string) (len=8) "requests": (map[string]interface {}) (len=1) {
         (string) (len=7) "storage": (string) (len=4) "10Gi"
        }
       },
       (string) (len=16) "storageClassName": (string) (len=3) "gp2"
      }
     }
    },
    (string) (len=4) "name": (string) (len=6) "test-1",
    (string) (len=8) "replicas": (*big.Float)(0xc000496780)(1),
    (string) (len=15) "securityContext": (map[string]interface {}) (len=3) {
     (string) (len=7) "fsGroup": (*big.Float)(0xc000496990)(2000),
     (string) (len=12) "runAsNonRoot": (bool) true,
     (string) (len=9) "runAsUser": (*big.Float)(0xc0004969c0)(1000)
    },
    (string) (len=12) "ruleSelector": (map[string]interface {}) (len=1) {
     (string) (len=11) "matchLabels": (map[string]interface {}) (len=2) {
      (string) (len=10) "prometheus": (string) (len=3) "k8s",
      (string) (len=4) "role": (string) (len=11) "alert-rules"
     }
    },
    (string) (len=31) "serviceMonitorNamespaceSelector": (map[string]interface {}) {
    },
    (string) (len=13) "probeSelector": (map[string]interface {}) {
    },
    (string) (len=6) "thanos": (map[string]interface {}) (len=3) {
     (string) (len=9) "baseImage": (string) (len=21) "quay.io/thanos/thanos",
     (string) (len=19) "objectStorageConfig": (map[string]interface {}) (len=2) {
      (string) (len=4) "name": (string) (len=22) "thanos-objstore-config",
      (string) (len=3) "key": (string) (len=11) "thanos.yaml"
     },
     (string) (len=7) "version": (string) (len=7) "v0.16.0"
    },
    (string) (len=22) "probeNamespaceSelector": (map[string]interface {}) {
    },
    (string) (len=22) "serviceMonitorSelector": (map[string]interface {}) {
    },
    (string) (len=23) "additionalScrapeConfigs": (map[string]interface {}) (len=2) {
     (string) (len=4) "name": (string) (len=25) "additional-scrape-configs",
     (string) (len=3) "key": (string) (len=26) "prometheus-additional.yaml"
    },
    (string) (len=7) "version": (string) (len=7) "v2.25.2",
    (string) (len=18) "serviceAccountName": (string) (len=14) "prometheus-k8s",
    (string) (len=18) "podMonitorSelector": (map[string]interface {}) {
    }
   },
   (string) (len=10) "apiVersion": (string) (len=24) "monitoring.coreos.com/v1",
   (string) (len=4) "kind": (string) (len=10) "Prometheus"
  },
  (string) (len=6) "object": (map[string]interface {}) (len=4) {
   (string) (len=10) "apiVersion": (string) (len=24) "monitoring.coreos.com/v1",
   (string) (len=4) "kind": (string) (len=10) "Prometheus",
   (string) (len=8) "metadata": (map[string]interface {}) (len=2) {
    (string) (len=4) "name": (string) (len=6) "test-1",
    (string) (len=9) "namespace": (string) (len=15) "test-operator-1"
   },
   (string) (len=4) "spec": (map[string]interface {}) (len=19) {
    (string) (len=27) "podMonitorNamespaceSelector": (map[string]interface {}) {
    },
    (string) (len=5) "image": (string) (len=37) "quay.io/prometheus/prometheus:v2.25.2",
    (string) (len=15) "securityContext": (map[string]interface {}) (len=3) {
     (string) (len=12) "runAsNonRoot": (bool) true,
     (string) (len=9) "runAsUser": (*big.Float)(0xc00069eae0)(1000),
     (string) (len=7) "fsGroup": (*big.Float)(0xc00069eab0)(2000)
    },
    (string) (len=18) "podMonitorSelector": (map[string]interface {}) {
    },
    (string) (len=22) "serviceMonitorSelector": (map[string]interface {}) {
    },
    (string) (len=8) "alerting": (map[string]interface {}) (len=1) {
     (string) (len=13) "alertmanagers": ([]interface {}) (len=1 cap=1) {
      (map[string]interface {}) (len=3) {
       (string) (len=4) "name": (string) (len=17) "alertmanager-main",
       (string) (len=9) "namespace": (string) (len=10) "monitoring",
       (string) (len=4) "port": (string) (len=3) "web"
      }
     }
    },
    (string) (len=31) "serviceMonitorNamespaceSelector": (map[string]interface {}) {
    },
    (string) (len=9) "resources": (map[string]interface {}) (len=2) {
     (string) (len=8) "requests": (map[string]interface {}) (len=2) {
      (string) (len=6) "memory": (string) (len=5) "200Mi",
      (string) (len=3) "cpu": (string) (len=4) "200m"
     },
     (string) (len=6) "limits": (map[string]interface {}) (len=2) {
      (string) (len=3) "cpu": (string) (len=4) "250m",
      (string) (len=6) "memory": (string) (len=5) "512Mi"
     }
    },
    (string) (len=8) "replicas": (*big.Float)(0xc00069e8a0)(1),
    (string) (len=18) "serviceAccountName": (string) (len=14) "prometheus-k8s",
    (string) (len=14) "externalLabels": (map[string]interface {}) (len=2) {
     (string) (len=7) "product": (string) (len=13) "api beep boop",
     (string) (len=7) "cluster": (string) (len=12) "my-cluster-2"
    },
    (string) (len=7) "version": (string) (len=7) "v2.25.2",
    (string) (len=12) "nodeSelector": (map[string]interface {}) (len=1) {
     (string) (len=4) "role": (string) (len=8) "services"
    },
    (string) (len=13) "probeSelector": (map[string]interface {}) {
    },
    (string) (len=23) "additionalScrapeConfigs": (map[string]interface {}) (len=2) {
     (string) (len=3) "key": (string) (len=26) "prometheus-additional.yaml",
     (string) (len=4) "name": (string) (len=25) "additional-scrape-configs"
    },
    (string) (len=7) "storage": (map[string]interface {}) (len=1) {
     (string) (len=19) "volumeClaimTemplate": (map[string]interface {}) (len=1) {
      (string) (len=4) "spec": (map[string]interface {}) (len=2) {
       (string) (len=9) "resources": (map[string]interface {}) (len=1) {
        (string) (len=8) "requests": (map[string]interface {}) (len=1) {
         (string) (len=7) "storage": (string) (len=4) "10Gi"
        }
       },
       (string) (len=16) "storageClassName": (string) (len=3) "gp2"
      }
     }
    },
    (string) (len=22) "probeNamespaceSelector": (map[string]interface {}) {
    },
    (string) (len=12) "ruleSelector": (map[string]interface {}) (len=1) {
     (string) (len=11) "matchLabels": (map[string]interface {}) (len=2) {
      (string) (len=10) "prometheus": (string) (len=3) "k8s",
      (string) (len=4) "role": (string) (len=11) "alert-rules"
     }
    },
    (string) (len=6) "thanos": (map[string]interface {}) (len=3) {
     (string) (len=19) "objectStorageConfig": (map[string]interface {}) (len=2) {
      (string) (len=3) "key": (string) (len=11) "thanos.yaml",
      (string) (len=4) "name": (string) (len=22) "thanos-objstore-config"
     },
     (string) (len=7) "version": (string) (len=7) "v0.16.0",
     (string) (len=9) "baseImage": (string) (len=21) "quay.io/thanos/thanos"
    }
   }
  },
  (string) (len=8) "wait_for": (interface {}) <nil>
 }
}

RAW provider 2021/04/03 23:45:15 [ApplyResourceChange][Request][PriorState]
(cty.Value) {
 ty: (cty.Type) {
  typeImpl: (cty.typeObject) {
   typeImplSigil: (cty.typeImplSigil) {
   },
   AttrTypes: (map[string]cty.Type) (len=3) {
    (string) (len=6) "object": (cty.Type) {
     typeImpl: (cty.pseudoTypeDynamic) {
      typeImplSigil: (cty.typeImplSigil) {
      }
     }
    },
    (string) (len=8) "wait_for": (cty.Type) {
     typeImpl: (cty.typeObject) {
      typeImplSigil: (cty.typeImplSigil) {
      },
      AttrTypes: (map[string]cty.Type) (len=1) {
       (string) (len=6) "fields": (cty.Type) {
        typeImpl: (cty.typeMap) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         ElementTypeT: (cty.Type) {
          typeImpl: (cty.primitiveType) {
           typeImplSigil: (cty.typeImplSigil) {
           },
           Kind: (cty.primitiveTypeKind) 83
          }
         }
        }
       }
      }
     }
    },
    (string) (len=8) "manifest": (cty.Type) {
     typeImpl: (cty.pseudoTypeDynamic) {
      typeImplSigil: (cty.typeImplSigil) {
      }
     }
    }
   }
  }
 },
 v: (interface {}) <nil>
}

RAW provider 2021/04/03 23:45:15 [ApplyResourceChange][Request][PlannedPrivate]
([]uint8) <nil>

RAW provider 2021/04/03 23:45:15 [ApplyResourceChange][Create] API response:
(*unstructured.Unstructured)(0xc0005be1e8)({
 Object: (map[string]interface {}) (len=4) {
  (string) (len=10) "apiVersion": (string) (len=24) "monitoring.coreos.com/v1",
  (string) (len=4) "kind": (string) (len=10) "Prometheus",
  (string) (len=8) "metadata": (map[string]interface {}) (len=8) {
   (string) (len=9) "namespace": (string) (len=15) "test-operator-1",
   (string) (len=15) "resourceVersion": (string) (len=8) "50990471",
   (string) (len=8) "selfLink": (string) (len=77) "/apis/monitoring.coreos.com/v1/namespaces/test-operator-1/prometheuses/test-1",
   (string) (len=3) "uid": (string) (len=36) "4fb61a0d-9f19-4b6d-8d53-45d2b4f903b7",
   (string) (len=17) "creationTimestamp": (string) (len=20) "2021-04-04T03:45:15Z",
   (string) (len=10) "generation": (int64) 1,
   (string) (len=13) "managedFields": ([]interface {}) (len=1 cap=1) {
    (map[string]interface {}) (len=6) {
     (string) (len=9) "operation": (string) (len=5) "Apply",
     (string) (len=4) "time": (string) (len=20) "2021-04-04T03:45:15Z",
     (string) (len=10) "apiVersion": (string) (len=24) "monitoring.coreos.com/v1",
     (string) (len=10) "fieldsType": (string) (len=8) "FieldsV1",
     (string) (len=8) "fieldsV1": (map[string]interface {}) (len=1) {
      (string) (len=6) "f:spec": (map[string]interface {}) (len=20) {
       (string) (len=33) "f:serviceMonitorNamespaceSelector": (map[string]interface {}) {
       },
       (string) (len=8) "f:thanos": (map[string]interface {}) (len=4) {
        (string) (len=1) ".": (map[string]interface {}) {
        },
        (string) (len=11) "f:baseImage": (map[string]interface {}) {
        },
        (string) (len=21) "f:objectStorageConfig": (map[string]interface {}) (len=3) {
         (string) (len=1) ".": (map[string]interface {}) {
         },
         (string) (len=5) "f:key": (map[string]interface {}) {
         },
         (string) (len=6) "f:name": (map[string]interface {}) {
         }
        },
        (string) (len=9) "f:version": (map[string]interface {}) {
        }
       },
       (string) (len=25) "f:additionalScrapeConfigs": (map[string]interface {}) (len=3) {
        (string) (len=6) "f:name": (map[string]interface {}) {
        },
        (string) (len=1) ".": (map[string]interface {}) {
        },
        (string) (len=5) "f:key": (map[string]interface {}) {
        }
       },
       (string) (len=24) "f:probeNamespaceSelector": (map[string]interface {}) {
       },
       (string) (len=10) "f:replicas": (map[string]interface {}) {
       },
       (string) (len=14) "f:ruleSelector": (map[string]interface {}) (len=2) {
        (string) (len=13) "f:matchLabels": (map[string]interface {}) (len=3) {
         (string) (len=6) "f:role": (map[string]interface {}) {
         },
         (string) (len=1) ".": (map[string]interface {}) {
         },
         (string) (len=12) "f:prometheus": (map[string]interface {}) {
         }
        },
        (string) (len=1) ".": (map[string]interface {}) {
        }
       },
       (string) (len=17) "f:securityContext": (map[string]interface {}) (len=4) {
        (string) (len=14) "f:runAsNonRoot": (map[string]interface {}) {
        },
        (string) (len=11) "f:runAsUser": (map[string]interface {}) {
        },
        (string) (len=1) ".": (map[string]interface {}) {
        },
        (string) (len=9) "f:fsGroup": (map[string]interface {}) {
        }
       },
       (string) (len=20) "f:serviceAccountName": (map[string]interface {}) {
       },
       (string) (len=24) "f:serviceMonitorSelector": (map[string]interface {}) {
       },
       (string) (len=10) "f:alerting": (map[string]interface {}) (len=2) {
        (string) (len=15) "f:alertmanagers": (map[string]interface {}) {
        },
        (string) (len=1) ".": (map[string]interface {}) {
        }
       },
       (string) (len=16) "f:externalLabels": (map[string]interface {}) (len=3) {
        (string) (len=1) ".": (map[string]interface {}) {
        },
        (string) (len=9) "f:cluster": (map[string]interface {}) {
        },
        (string) (len=9) "f:product": (map[string]interface {}) {
        }
       },
       (string) (len=20) "f:podMonitorSelector": (map[string]interface {}) {
       },
       (string) (len=11) "f:resources": (map[string]interface {}) (len=3) {
        (string) (len=1) ".": (map[string]interface {}) {
        },
        (string) (len=8) "f:limits": (map[string]interface {}) (len=3) {
         (string) (len=1) ".": (map[string]interface {}) {
         },
         (string) (len=5) "f:cpu": (map[string]interface {}) {
         },
         (string) (len=8) "f:memory": (map[string]interface {}) {
         }
        },
        (string) (len=10) "f:requests": (map[string]interface {}) (len=3) {
         (string) (len=1) ".": (map[string]interface {}) {
         },
         (string) (len=5) "f:cpu": (map[string]interface {}) {
         },
         (string) (len=8) "f:memory": (map[string]interface {}) {
         }
        }
       },
       (string) (len=9) "f:storage": (map[string]interface {}) (len=2) {
        (string) (len=1) ".": (map[string]interface {}) {
        },
        (string) (len=21) "f:volumeClaimTemplate": (map[string]interface {}) (len=2) {
         (string) (len=1) ".": (map[string]interface {}) {
         },
         (string) (len=6) "f:spec": (map[string]interface {}) (len=3) {
          (string) (len=1) ".": (map[string]interface {}) {
          },
          (string) (len=11) "f:resources": (map[string]interface {}) (len=2) {
           (string) (len=1) ".": (map[string]interface {}) {
           },
           (string) (len=10) "f:requests": (map[string]interface {}) (len=2) {
            (string) (len=9) "f:storage": (map[string]interface {}) {
            },
            (string) (len=1) ".": (map[string]interface {}) {
            }
           }
          },
          (string) (len=18) "f:storageClassName": (map[string]interface {}) {
          }
         }
        }
       },
       (string) (len=9) "f:version": (map[string]interface {}) {
       },
       (string) (len=1) ".": (map[string]interface {}) {
       },
       (string) (len=7) "f:image": (map[string]interface {}) {
       },
       (string) (len=29) "f:podMonitorNamespaceSelector": (map[string]interface {}) {
       },
       (string) (len=15) "f:probeSelector": (map[string]interface {}) {
       },
       (string) (len=14) "f:nodeSelector": (map[string]interface {}) (len=2) {
        (string) (len=1) ".": (map[string]interface {}) {
        },
        (string) (len=6) "f:role": (map[string]interface {}) {
        }
       }
      }
     },
     (string) (len=7) "manager": (string) (len=9) "Terraform"
    }
   },
   (string) (len=4) "name": (string) (len=6) "test-1"
  },
  (string) (len=4) "spec": (map[string]interface {}) (len=19) {
   (string) (len=9) "resources": (map[string]interface {}) (len=2) {
    (string) (len=6) "limits": (map[string]interface {}) (len=2) {
     (string) (len=3) "cpu": (string) (len=4) "250m",
     (string) (len=6) "memory": (string) (len=5) "512Mi"
    },
    (string) (len=8) "requests": (map[string]interface {}) (len=2) {
     (string) (len=6) "memory": (string) (len=5) "200Mi",
     (string) (len=3) "cpu": (string) (len=4) "200m"
    }
   },
   (string) (len=31) "serviceMonitorNamespaceSelector": (map[string]interface {}) {
   },
   (string) (len=7) "storage": (map[string]interface {}) (len=1) {
    (string) (len=19) "volumeClaimTemplate": (map[string]interface {}) (len=1) {
     (string) (len=4) "spec": (map[string]interface {}) (len=2) {
      (string) (len=9) "resources": (map[string]interface {}) (len=1) {
       (string) (len=8) "requests": (map[string]interface {}) (len=1) {
        (string) (len=7) "storage": (string) (len=4) "10Gi"
       }
      },
      (string) (len=16) "storageClassName": (string) (len=3) "gp2"
     }
    }
   },
   (string) (len=6) "thanos": (map[string]interface {}) (len=3) {
    (string) (len=9) "baseImage": (string) (len=21) "quay.io/thanos/thanos",
    (string) (len=19) "objectStorageConfig": (map[string]interface {}) (len=2) {
     (string) (len=3) "key": (string) (len=11) "thanos.yaml",
     (string) (len=4) "name": (string) (len=22) "thanos-objstore-config"
    },
    (string) (len=7) "version": (string) (len=7) "v0.16.0"
   },
   (string) (len=8) "alerting": (map[string]interface {}) (len=1) {
    (string) (len=13) "alertmanagers": ([]interface {}) (len=1 cap=1) {
     (map[string]interface {}) (len=3) {
      (string) (len=4) "name": (string) (len=17) "alertmanager-main",
      (string) (len=9) "namespace": (string) (len=10) "monitoring",
      (string) (len=4) "port": (string) (len=3) "web"
     }
    }
   },
   (string) (len=14) "externalLabels": (map[string]interface {}) (len=2) {
    (string) (len=7) "cluster": (string) (len=12) "my-cluster-2",
    (string) (len=7) "product": (string) (len=13) "api beep boop"
   },
   (string) (len=5) "image": (string) (len=37) "quay.io/prometheus/prometheus:v2.25.2",
   (string) (len=27) "podMonitorNamespaceSelector": (map[string]interface {}) {
   },
   (string) (len=8) "replicas": (int64) 1,
   (string) (len=12) "ruleSelector": (map[string]interface {}) (len=1) {
    (string) (len=11) "matchLabels": (map[string]interface {}) (len=2) {
     (string) (len=10) "prometheus": (string) (len=3) "k8s",
     (string) (len=4) "role": (string) (len=11) "alert-rules"
    }
   },
   (string) (len=7) "version": (string) (len=7) "v2.25.2",
   (string) (len=18) "podMonitorSelector": (map[string]interface {}) {
   },
   (string) (len=22) "probeNamespaceSelector": (map[string]interface {}) {
   },
   (string) (len=13) "probeSelector": (map[string]interface {}) {
   },
   (string) (len=15) "securityContext": (map[string]interface {}) (len=3) {
    (string) (len=7) "fsGroup": (int64) 2000,
    (string) (len=12) "runAsNonRoot": (bool) true,
    (string) (len=9) "runAsUser": (int64) 1000
   },
   (string) (len=22) "serviceMonitorSelector": (map[string]interface {}) {
   },
   (string) (len=23) "additionalScrapeConfigs": (map[string]interface {}) (len=2) {
    (string) (len=3) "key": (string) (len=26) "prometheus-additional.yaml",
    (string) (len=4) "name": (string) (len=25) "additional-scrape-configs"
   },
   (string) (len=12) "nodeSelector": (map[string]interface {}) (len=1) {
    (string) (len=4) "role": (string) (len=8) "services"
   },
   (string) (len=18) "serviceAccountName": (string) (len=14) "prometheus-k8s"
  }
 }
})

RAW provider 2021/04/03 23:45:15 [ApplyResourceChange][Create] transformed response:
(cty.Value) {
 ty: (cty.Type) {
  typeImpl: (cty.typeObject) {
   typeImplSigil: (cty.typeImplSigil) {
   },
   AttrTypes: (map[string]cty.Type) (len=4) {
    (string) (len=8) "metadata": (cty.Type) {
     typeImpl: (cty.typeObject) {
      typeImplSigil: (cty.typeImplSigil) {
      },
      AttrTypes: (map[string]cty.Type) (len=2) {
       (string) (len=9) "namespace": (cty.Type) {
        typeImpl: (cty.primitiveType) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         Kind: (cty.primitiveTypeKind) 83
        }
       },
       (string) (len=4) "name": (cty.Type) {
        typeImpl: (cty.primitiveType) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         Kind: (cty.primitiveTypeKind) 83
        }
       }
      }
     }
    },
    (string) (len=4) "spec": (cty.Type) {
     typeImpl: (cty.typeObject) {
      typeImplSigil: (cty.typeImplSigil) {
      },
      AttrTypes: (map[string]cty.Type) (len=19) {
       (string) (len=14) "externalLabels": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) (len=2) {
          (string) (len=7) "product": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=7) "cluster": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          }
         }
        }
       },
       (string) (len=27) "podMonitorNamespaceSelector": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) {
         }
        }
       },
       (string) (len=23) "additionalScrapeConfigs": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) (len=2) {
          (string) (len=3) "key": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=4) "name": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          }
         }
        }
       },
       (string) (len=31) "serviceMonitorNamespaceSelector": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) {
         }
        }
       },
       (string) (len=6) "thanos": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) (len=3) {
          (string) (len=9) "baseImage": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=19) "objectStorageConfig": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=2) {
             (string) (len=4) "name": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             },
             (string) (len=3) "key": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             }
            }
           }
          },
          (string) (len=7) "version": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          }
         }
        }
       },
       (string) (len=18) "serviceAccountName": (cty.Type) {
        typeImpl: (cty.primitiveType) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         Kind: (cty.primitiveTypeKind) 83
        }
       },
       (string) (len=18) "podMonitorSelector": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) {
         }
        }
       },
       (string) (len=13) "probeSelector": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) {
         }
        }
       },
       (string) (len=22) "serviceMonitorSelector": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) {
         }
        }
       },
       (string) (len=7) "version": (cty.Type) {
        typeImpl: (cty.primitiveType) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         Kind: (cty.primitiveTypeKind) 83
        }
       },
       (string) (len=8) "replicas": (cty.Type) {
        typeImpl: (cty.primitiveType) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         Kind: (cty.primitiveTypeKind) 78
        }
       },
       (string) (len=5) "image": (cty.Type) {
        typeImpl: (cty.primitiveType) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         Kind: (cty.primitiveTypeKind) 83
        }
       },
       (string) (len=12) "ruleSelector": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) (len=1) {
          (string) (len=11) "matchLabels": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=2) {
             (string) (len=10) "prometheus": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             },
             (string) (len=4) "role": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             }
            }
           }
          }
         }
        }
       },
       (string) (len=9) "resources": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) (len=2) {
          (string) (len=6) "limits": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=2) {
             (string) (len=3) "cpu": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             },
             (string) (len=6) "memory": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             }
            }
           }
          },
          (string) (len=8) "requests": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=2) {
             (string) (len=3) "cpu": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             },
             (string) (len=6) "memory": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             }
            }
           }
          }
         }
        }
       },
       (string) (len=7) "storage": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) (len=1) {
          (string) (len=19) "volumeClaimTemplate": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=1) {
             (string) (len=4) "spec": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=9) "resources": (cty.Type) {
                 typeImpl: (cty.typeObject) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  AttrTypes: (map[string]cty.Type) (len=1) {
                   (string) (len=8) "requests": (cty.Type) {
                    typeImpl: (cty.typeObject) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     AttrTypes: (map[string]cty.Type) (len=1) {
                      (string) (len=7) "storage": (cty.Type) {
                       typeImpl: (cty.primitiveType) {
                        typeImplSigil: (cty.typeImplSigil) {
                        },
                        Kind: (cty.primitiveTypeKind) 83
                       }
                      }
                     }
                    }
                   }
                  }
                 }
                },
                (string) (len=16) "storageClassName": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             }
            }
           }
          }
         }
        }
       },
       (string) (len=12) "nodeSelector": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) (len=1) {
          (string) (len=4) "role": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          }
         }
        }
       },
       (string) (len=15) "securityContext": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) (len=3) {
          (string) (len=9) "runAsUser": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 78
           }
          },
          (string) (len=7) "fsGroup": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 78
           }
          },
          (string) (len=12) "runAsNonRoot": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 66
           }
          }
         }
        }
       },
       (string) (len=22) "probeNamespaceSelector": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) {
         }
        }
       },
       (string) (len=8) "alerting": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) (len=1) {
          (string) (len=13) "alertmanagers": (cty.Type) {
           typeImpl: (cty.typeTuple) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            ElemTypes: ([]cty.Type) (len=1 cap=1) {
             (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=3) {
                (string) (len=4) "name": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=9) "namespace": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=4) "port": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             }
            }
           }
          }
         }
        }
       }
      }
     }
    },
    (string) (len=10) "apiVersion": (cty.Type) {
     typeImpl: (cty.primitiveType) {
      typeImplSigil: (cty.typeImplSigil) {
      },
      Kind: (cty.primitiveTypeKind) 83
     }
    },
    (string) (len=4) "kind": (cty.Type) {
     typeImpl: (cty.primitiveType) {
      typeImplSigil: (cty.typeImplSigil) {
      },
      Kind: (cty.primitiveTypeKind) 83
     }
    }
   }
  }
 },
 v: (map[string]interface {}) (len=4) {
  (string) (len=4) "spec": (map[string]interface {}) (len=19) {
   (string) (len=22) "probeNamespaceSelector": (map[string]interface {}) {
   },
   (string) (len=18) "podMonitorSelector": (map[string]interface {}) {
   },
   (string) (len=15) "securityContext": (map[string]interface {}) (len=3) {
    (string) (len=9) "runAsUser": (*big.Float)(0xc0006e93e0)(1000),
    (string) (len=7) "fsGroup": (*big.Float)(0xc0006e9350)(2000),
    (string) (len=12) "runAsNonRoot": (bool) true
   },
   (string) (len=6) "thanos": (map[string]interface {}) (len=3) {
    (string) (len=7) "version": (string) (len=7) "v0.16.0",
    (string) (len=9) "baseImage": (string) (len=21) "quay.io/thanos/thanos",
    (string) (len=19) "objectStorageConfig": (map[string]interface {}) (len=2) {
     (string) (len=3) "key": (string) (len=11) "thanos.yaml",
     (string) (len=4) "name": (string) (len=22) "thanos-objstore-config"
    }
   },
   (string) (len=27) "podMonitorNamespaceSelector": (map[string]interface {}) {
   },
   (string) (len=7) "version": (string) (len=7) "v2.25.2",
   (string) (len=5) "image": (string) (len=37) "quay.io/prometheus/prometheus:v2.25.2",
   (string) (len=7) "storage": (map[string]interface {}) (len=1) {
    (string) (len=19) "volumeClaimTemplate": (map[string]interface {}) (len=1) {
     (string) (len=4) "spec": (map[string]interface {}) (len=2) {
      (string) (len=9) "resources": (map[string]interface {}) (len=1) {
       (string) (len=8) "requests": (map[string]interface {}) (len=1) {
        (string) (len=7) "storage": (string) (len=4) "10Gi"
       }
      },
      (string) (len=16) "storageClassName": (string) (len=3) "gp2"
     }
    }
   },
   (string) (len=13) "probeSelector": (map[string]interface {}) {
   },
   (string) (len=8) "alerting": (map[string]interface {}) (len=1) {
    (string) (len=13) "alertmanagers": ([]interface {}) (len=1 cap=1) {
     (map[string]interface {}) (len=3) {
      (string) (len=4) "name": (string) (len=17) "alertmanager-main",
      (string) (len=9) "namespace": (string) (len=10) "monitoring",
      (string) (len=4) "port": (string) (len=3) "web"
     }
    }
   },
   (string) (len=8) "replicas": (*big.Float)(0xc0006e8d80)(1),
   (string) (len=9) "resources": (map[string]interface {}) (len=2) {
    (string) (len=6) "limits": (map[string]interface {}) (len=2) {
     (string) (len=3) "cpu": (string) (len=4) "250m",
     (string) (len=6) "memory": (string) (len=5) "512Mi"
    },
    (string) (len=8) "requests": (map[string]interface {}) (len=2) {
     (string) (len=3) "cpu": (string) (len=4) "200m",
     (string) (len=6) "memory": (string) (len=5) "200Mi"
    }
   },
   (string) (len=31) "serviceMonitorNamespaceSelector": (map[string]interface {}) {
   },
   (string) (len=14) "externalLabels": (map[string]interface {}) (len=2) {
    (string) (len=7) "product": (string) (len=13) "api beep boop",
    (string) (len=7) "cluster": (string) (len=12) "my-cluster-2"
   },
   (string) (len=23) "additionalScrapeConfigs": (map[string]interface {}) (len=2) {
    (string) (len=3) "key": (string) (len=26) "prometheus-additional.yaml",
    (string) (len=4) "name": (string) (len=25) "additional-scrape-configs"
   },
   (string) (len=12) "nodeSelector": (map[string]interface {}) (len=1) {
    (string) (len=4) "role": (string) (len=8) "services"
   },
   (string) (len=12) "ruleSelector": (map[string]interface {}) (len=1) {
    (string) (len=11) "matchLabels": (map[string]interface {}) (len=2) {
     (string) (len=10) "prometheus": (string) (len=3) "k8s",
     (string) (len=4) "role": (string) (len=11) "alert-rules"
    }
   },
   (string) (len=18) "serviceAccountName": (string) (len=14) "prometheus-k8s",
   (string) (len=22) "serviceMonitorSelector": (map[string]interface {}) {
   }
  },
  (string) (len=10) "apiVersion": (string) (len=24) "monitoring.coreos.com/v1",
  (string) (len=4) "kind": (string) (len=10) "Prometheus",
  (string) (len=8) "metadata": (map[string]interface {}) (len=2) {
   (string) (len=4) "name": (string) (len=6) "test-1",
   (string) (len=9) "namespace": (string) (len=15) "test-operator-1"
  }
 }
}

RAW provider 2021/04/03 23:45:15 [ApplyResourceChange][Create] transformed new state:
(cty.Value) {
 ty: (cty.Type) {
  typeImpl: (cty.typeObject) {
   typeImplSigil: (cty.typeImplSigil) {
   },
   AttrTypes: (map[string]cty.Type) (len=3) {
    (string) (len=6) "object": (cty.Type) {
     typeImpl: (cty.typeObject) {
      typeImplSigil: (cty.typeImplSigil) {
      },
      AttrTypes: (map[string]cty.Type) (len=4) {
       (string) (len=4) "spec": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) (len=19) {
          (string) (len=22) "serviceMonitorSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=7) "version": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=8) "replicas": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 78
           }
          },
          (string) (len=5) "image": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=12) "ruleSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=1) {
             (string) (len=11) "matchLabels": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=10) "prometheus": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=4) "role": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=9) "resources": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=2) {
             (string) (len=6) "limits": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=3) "cpu": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=6) "memory": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             },
             (string) (len=8) "requests": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=3) "cpu": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=6) "memory": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=7) "storage": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=1) {
             (string) (len=19) "volumeClaimTemplate": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=1) {
                (string) (len=4) "spec": (cty.Type) {
                 typeImpl: (cty.typeObject) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  AttrTypes: (map[string]cty.Type) (len=2) {
                   (string) (len=16) "storageClassName": (cty.Type) {
                    typeImpl: (cty.primitiveType) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     Kind: (cty.primitiveTypeKind) 83
                    }
                   },
                   (string) (len=9) "resources": (cty.Type) {
                    typeImpl: (cty.typeObject) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     AttrTypes: (map[string]cty.Type) (len=1) {
                      (string) (len=8) "requests": (cty.Type) {
                       typeImpl: (cty.typeObject) {
                        typeImplSigil: (cty.typeImplSigil) {
                        },
                        AttrTypes: (map[string]cty.Type) (len=1) {
                         (string) (len=7) "storage": (cty.Type) {
                          typeImpl: (cty.primitiveType) {
                           typeImplSigil: (cty.typeImplSigil) {
                           },
                           Kind: (cty.primitiveTypeKind) 83
                          }
                         }
                        }
                       }
                      }
                     }
                    }
                   }
                  }
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=13) "probeSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=12) "nodeSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=1) {
             (string) (len=4) "role": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             }
            }
           }
          },
          (string) (len=22) "probeNamespaceSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=8) "alerting": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=1) {
             (string) (len=13) "alertmanagers": (cty.Type) {
              typeImpl: (cty.typeTuple) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               ElemTypes: ([]cty.Type) (len=1 cap=1) {
                (cty.Type) {
                 typeImpl: (cty.typeObject) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  AttrTypes: (map[string]cty.Type) (len=3) {
                   (string) (len=4) "port": (cty.Type) {
                    typeImpl: (cty.primitiveType) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     Kind: (cty.primitiveTypeKind) 83
                    }
                   },
                   (string) (len=4) "name": (cty.Type) {
                    typeImpl: (cty.primitiveType) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     Kind: (cty.primitiveTypeKind) 83
                    }
                   },
                   (string) (len=9) "namespace": (cty.Type) {
                    typeImpl: (cty.primitiveType) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     Kind: (cty.primitiveTypeKind) 83
                    }
                   }
                  }
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=15) "securityContext": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=3) {
             (string) (len=9) "runAsUser": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 78
              }
             },
             (string) (len=7) "fsGroup": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 78
              }
             },
             (string) (len=12) "runAsNonRoot": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 66
              }
             }
            }
           }
          },
          (string) (len=27) "podMonitorNamespaceSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=23) "additionalScrapeConfigs": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=2) {
             (string) (len=3) "key": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             },
             (string) (len=4) "name": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             }
            }
           }
          },
          (string) (len=14) "externalLabels": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=2) {
             (string) (len=7) "cluster": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             },
             (string) (len=7) "product": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             }
            }
           }
          },
          (string) (len=6) "thanos": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=3) {
             (string) (len=9) "baseImage": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             },
             (string) (len=19) "objectStorageConfig": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=4) "name": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=3) "key": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             },
             (string) (len=7) "version": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             }
            }
           }
          },
          (string) (len=18) "serviceAccountName": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=18) "podMonitorSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=31) "serviceMonitorNamespaceSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          }
         }
        }
       },
       (string) (len=10) "apiVersion": (cty.Type) {
        typeImpl: (cty.primitiveType) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         Kind: (cty.primitiveTypeKind) 83
        }
       },
       (string) (len=4) "kind": (cty.Type) {
        typeImpl: (cty.primitiveType) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         Kind: (cty.primitiveTypeKind) 83
        }
       },
       (string) (len=8) "metadata": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) (len=2) {
          (string) (len=4) "name": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=9) "namespace": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          }
         }
        }
       }
      }
     }
    },
    (string) (len=8) "wait_for": (cty.Type) {
     typeImpl: (cty.typeObject) {
      typeImplSigil: (cty.typeImplSigil) {
      },
      AttrTypes: (map[string]cty.Type) (len=1) {
       (string) (len=6) "fields": (cty.Type) {
        typeImpl: (cty.typeMap) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         ElementTypeT: (cty.Type) {
          typeImpl: (cty.primitiveType) {
           typeImplSigil: (cty.typeImplSigil) {
           },
           Kind: (cty.primitiveTypeKind) 83
          }
         }
        }
       }
      }
     }
    },
    (string) (len=8) "manifest": (cty.Type) {
     typeImpl: (cty.typeObject) {
      typeImplSigil: (cty.typeImplSigil) {
      },
      AttrTypes: (map[string]cty.Type) (len=4) {
       (string) (len=10) "apiVersion": (cty.Type) {
        typeImpl: (cty.primitiveType) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         Kind: (cty.primitiveTypeKind) 83
        }
       },
       (string) (len=4) "kind": (cty.Type) {
        typeImpl: (cty.primitiveType) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         Kind: (cty.primitiveTypeKind) 83
        }
       },
       (string) (len=8) "metadata": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) (len=2) {
          (string) (len=4) "name": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=9) "namespace": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          }
         }
        }
       },
       (string) (len=4) "spec": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) (len=21) {
          (string) (len=22) "serviceMonitorSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=8) "replicas": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 78
           }
          },
          (string) (len=7) "version": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=18) "serviceAccountName": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=7) "storage": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=1) {
             (string) (len=19) "volumeClaimTemplate": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=1) {
                (string) (len=4) "spec": (cty.Type) {
                 typeImpl: (cty.typeObject) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  AttrTypes: (map[string]cty.Type) (len=2) {
                   (string) (len=9) "resources": (cty.Type) {
                    typeImpl: (cty.typeObject) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     AttrTypes: (map[string]cty.Type) (len=1) {
                      (string) (len=8) "requests": (cty.Type) {
                       typeImpl: (cty.typeObject) {
                        typeImplSigil: (cty.typeImplSigil) {
                        },
                        AttrTypes: (map[string]cty.Type) (len=1) {
                         (string) (len=7) "storage": (cty.Type) {
                          typeImpl: (cty.primitiveType) {
                           typeImplSigil: (cty.typeImplSigil) {
                           },
                           Kind: (cty.primitiveTypeKind) 83
                          }
                         }
                        }
                       }
                      }
                     }
                    }
                   },
                   (string) (len=16) "storageClassName": (cty.Type) {
                    typeImpl: (cty.primitiveType) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     Kind: (cty.primitiveTypeKind) 83
                    }
                   }
                  }
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=9) "resources": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=2) {
             (string) (len=8) "requests": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=3) "cpu": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=6) "memory": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             },
             (string) (len=6) "limits": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=6) "memory": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=3) "cpu": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=14) "externalLabels": (cty.Type) {
           typeImpl: (cty.typeMap) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            ElementTypeT: (cty.Type) {
             typeImpl: (cty.primitiveType) {
              typeImplSigil: (cty.typeImplSigil) {
              },
              Kind: (cty.primitiveTypeKind) 83
             }
            }
           }
          },
          (string) (len=6) "thanos": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=3) {
             (string) (len=9) "baseImage": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             },
             (string) (len=19) "objectStorageConfig": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=4) "name": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=3) "key": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             },
             (string) (len=7) "version": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             }
            }
           }
          },
          (string) (len=9) "namespace": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=27) "podMonitorNamespaceSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=8) "alerting": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=1) {
             (string) (len=13) "alertmanagers": (cty.Type) {
              typeImpl: (cty.typeTuple) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               ElemTypes: ([]cty.Type) (len=1 cap=1) {
                (cty.Type) {
                 typeImpl: (cty.typeObject) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  AttrTypes: (map[string]cty.Type) (len=3) {
                   (string) (len=4) "port": (cty.Type) {
                    typeImpl: (cty.primitiveType) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     Kind: (cty.primitiveTypeKind) 83
                    }
                   },
                   (string) (len=4) "name": (cty.Type) {
                    typeImpl: (cty.primitiveType) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     Kind: (cty.primitiveTypeKind) 83
                    }
                   },
                   (string) (len=9) "namespace": (cty.Type) {
                    typeImpl: (cty.primitiveType) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     Kind: (cty.primitiveTypeKind) 83
                    }
                   }
                  }
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=22) "probeNamespaceSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=12) "nodeSelector": (cty.Type) {
           typeImpl: (cty.typeMap) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            ElementTypeT: (cty.Type) {
             typeImpl: (cty.primitiveType) {
              typeImplSigil: (cty.typeImplSigil) {
              },
              Kind: (cty.primitiveTypeKind) 83
             }
            }
           }
          },
          (string) (len=31) "serviceMonitorNamespaceSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=23) "additionalScrapeConfigs": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=2) {
             (string) (len=4) "name": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             },
             (string) (len=3) "key": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             }
            }
           }
          },
          (string) (len=18) "podMonitorSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=4) "name": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=13) "probeSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=12) "ruleSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=1) {
             (string) (len=11) "matchLabels": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=4) "role": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=10) "prometheus": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=5) "image": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=15) "securityContext": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=3) {
             (string) (len=7) "fsGroup": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 78
              }
             },
             (string) (len=12) "runAsNonRoot": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 66
              }
             },
             (string) (len=9) "runAsUser": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 78
              }
             }
            }
           }
          }
         }
        }
       }
      }
     }
    }
   }
  }
 },
 v: (map[string]interface {}) (len=3) {
  (string) (len=6) "object": (map[string]interface {}) (len=4) {
   (string) (len=4) "spec": (map[string]interface {}) (len=19) {
    (string) (len=14) "externalLabels": (map[string]interface {}) (len=2) {
     (string) (len=7) "product": (string) (len=13) "api beep boop",
     (string) (len=7) "cluster": (string) (len=12) "my-cluster-2"
    },
    (string) (len=8) "replicas": (*big.Float)(0xc0006e8d80)(1),
    (string) (len=9) "resources": (map[string]interface {}) (len=2) {
     (string) (len=8) "requests": (map[string]interface {}) (len=2) {
      (string) (len=3) "cpu": (string) (len=4) "200m",
      (string) (len=6) "memory": (string) (len=5) "200Mi"
     },
     (string) (len=6) "limits": (map[string]interface {}) (len=2) {
      (string) (len=3) "cpu": (string) (len=4) "250m",
      (string) (len=6) "memory": (string) (len=5) "512Mi"
     }
    },
    (string) (len=31) "serviceMonitorNamespaceSelector": (map[string]interface {}) {
    },
    (string) (len=22) "serviceMonitorSelector": (map[string]interface {}) {
    },
    (string) (len=23) "additionalScrapeConfigs": (map[string]interface {}) (len=2) {
     (string) (len=3) "key": (string) (len=26) "prometheus-additional.yaml",
     (string) (len=4) "name": (string) (len=25) "additional-scrape-configs"
    },
    (string) (len=12) "nodeSelector": (map[string]interface {}) (len=1) {
     (string) (len=4) "role": (string) (len=8) "services"
    },
    (string) (len=12) "ruleSelector": (map[string]interface {}) (len=1) {
     (string) (len=11) "matchLabels": (map[string]interface {}) (len=2) {
      (string) (len=4) "role": (string) (len=11) "alert-rules",
      (string) (len=10) "prometheus": (string) (len=3) "k8s"
     }
    },
    (string) (len=18) "serviceAccountName": (string) (len=14) "prometheus-k8s",
    (string) (len=6) "thanos": (map[string]interface {}) (len=3) {
     (string) (len=7) "version": (string) (len=7) "v0.16.0",
     (string) (len=9) "baseImage": (string) (len=21) "quay.io/thanos/thanos",
     (string) (len=19) "objectStorageConfig": (map[string]interface {}) (len=2) {
      (string) (len=3) "key": (string) (len=11) "thanos.yaml",
      (string) (len=4) "name": (string) (len=22) "thanos-objstore-config"
     }
    },
    (string) (len=22) "probeNamespaceSelector": (map[string]interface {}) {
    },
    (string) (len=18) "podMonitorSelector": (map[string]interface {}) {
    },
    (string) (len=15) "securityContext": (map[string]interface {}) (len=3) {
     (string) (len=9) "runAsUser": (*big.Float)(0xc0006e93e0)(1000),
     (string) (len=7) "fsGroup": (*big.Float)(0xc0006e9350)(2000),
     (string) (len=12) "runAsNonRoot": (bool) true
    },
    (string) (len=8) "alerting": (map[string]interface {}) (len=1) {
     (string) (len=13) "alertmanagers": ([]interface {}) (len=1 cap=1) {
      (map[string]interface {}) (len=3) {
       (string) (len=4) "port": (string) (len=3) "web",
       (string) (len=4) "name": (string) (len=17) "alertmanager-main",
       (string) (len=9) "namespace": (string) (len=10) "monitoring"
      }
     }
    },
    (string) (len=27) "podMonitorNamespaceSelector": (map[string]interface {}) {
    },
    (string) (len=7) "version": (string) (len=7) "v2.25.2",
    (string) (len=5) "image": (string) (len=37) "quay.io/prometheus/prometheus:v2.25.2",
    (string) (len=7) "storage": (map[string]interface {}) (len=1) {
     (string) (len=19) "volumeClaimTemplate": (map[string]interface {}) (len=1) {
      (string) (len=4) "spec": (map[string]interface {}) (len=2) {
       (string) (len=9) "resources": (map[string]interface {}) (len=1) {
        (string) (len=8) "requests": (map[string]interface {}) (len=1) {
         (string) (len=7) "storage": (string) (len=4) "10Gi"
        }
       },
       (string) (len=16) "storageClassName": (string) (len=3) "gp2"
      }
     }
    },
    (string) (len=13) "probeSelector": (map[string]interface {}) {
    }
   },
   (string) (len=10) "apiVersion": (string) (len=24) "monitoring.coreos.com/v1",
   (string) (len=4) "kind": (string) (len=10) "Prometheus",
   (string) (len=8) "metadata": (map[string]interface {}) (len=2) {
    (string) (len=4) "name": (string) (len=6) "test-1",
    (string) (len=9) "namespace": (string) (len=15) "test-operator-1"
   }
  },
  (string) (len=8) "wait_for": (interface {}) <nil>,
  (string) (len=8) "manifest": (map[string]interface {}) (len=4) {
   (string) (len=10) "apiVersion": (string) (len=24) "monitoring.coreos.com/v1",
   (string) (len=4) "kind": (string) (len=10) "Prometheus",
   (string) (len=8) "metadata": (map[string]interface {}) (len=2) {
    (string) (len=4) "name": (string) (len=6) "test-1",
    (string) (len=9) "namespace": (string) (len=15) "test-operator-1"
   },
   (string) (len=4) "spec": (map[string]interface {}) (len=21) {
    (string) (len=5) "image": (string) (len=37) "quay.io/prometheus/prometheus:v2.25.2",
    (string) (len=31) "serviceMonitorNamespaceSelector": (map[string]interface {}) {
    },
    (string) (len=13) "probeSelector": (map[string]interface {}) {
    },
    (string) (len=4) "name": (string) (len=6) "test-1",
    (string) (len=22) "serviceMonitorSelector": (map[string]interface {}) {
    },
    (string) (len=7) "version": (string) (len=7) "v2.25.2",
    (string) (len=8) "replicas": (*big.Float)(0xc000496780)(1),
    (string) (len=15) "securityContext": (map[string]interface {}) (len=3) {
     (string) (len=7) "fsGroup": (*big.Float)(0xc000496990)(2000),
     (string) (len=12) "runAsNonRoot": (bool) true,
     (string) (len=9) "runAsUser": (*big.Float)(0xc0004969c0)(1000)
    },
    (string) (len=27) "podMonitorNamespaceSelector": (map[string]interface {}) {
    },
    (string) (len=22) "probeNamespaceSelector": (map[string]interface {}) {
    },
    (string) (len=9) "namespace": (string) (len=15) "test-operator-1",
    (string) (len=6) "thanos": (map[string]interface {}) (len=3) {
     (string) (len=9) "baseImage": (string) (len=21) "quay.io/thanos/thanos",
     (string) (len=19) "objectStorageConfig": (map[string]interface {}) (len=2) {
      (string) (len=4) "name": (string) (len=22) "thanos-objstore-config",
      (string) (len=3) "key": (string) (len=11) "thanos.yaml"
     },
     (string) (len=7) "version": (string) (len=7) "v0.16.0"
    },
    (string) (len=14) "externalLabels": (map[string]interface {}) (len=2) {
     (string) (len=7) "cluster": (string) (len=12) "my-cluster-2",
     (string) (len=7) "product": (string) (len=13) "api beep boop"
    },
    (string) (len=18) "serviceAccountName": (string) (len=14) "prometheus-k8s",
    (string) (len=12) "ruleSelector": (map[string]interface {}) (len=1) {
     (string) (len=11) "matchLabels": (map[string]interface {}) (len=2) {
      (string) (len=4) "role": (string) (len=11) "alert-rules",
      (string) (len=10) "prometheus": (string) (len=3) "k8s"
     }
    },
    (string) (len=23) "additionalScrapeConfigs": (map[string]interface {}) (len=2) {
     (string) (len=3) "key": (string) (len=26) "prometheus-additional.yaml",
     (string) (len=4) "name": (string) (len=25) "additional-scrape-configs"
    },
    (string) (len=8) "alerting": (map[string]interface {}) (len=1) {
     (string) (len=13) "alertmanagers": ([]interface {}) (len=1 cap=1) {
      (map[string]interface {}) (len=3) {
       (string) (len=4) "port": (string) (len=3) "web",
       (string) (len=4) "name": (string) (len=17) "alertmanager-main",
       (string) (len=9) "namespace": (string) (len=10) "monitoring"
      }
     }
    },
    (string) (len=7) "storage": (map[string]interface {}) (len=1) {
     (string) (len=19) "volumeClaimTemplate": (map[string]interface {}) (len=1) {
      (string) (len=4) "spec": (map[string]interface {}) (len=2) {
       (string) (len=9) "resources": (map[string]interface {}) (len=1) {
        (string) (len=8) "requests": (map[string]interface {}) (len=1) {
         (string) (len=7) "storage": (string) (len=4) "10Gi"
        }
       },
       (string) (len=16) "storageClassName": (string) (len=3) "gp2"
      }
     }
    },
    (string) (len=12) "nodeSelector": (map[string]interface {}) (len=1) {
     (string) (len=4) "role": (string) (len=8) "services"
    },
    (string) (len=9) "resources": (map[string]interface {}) (len=2) {
     (string) (len=6) "limits": (map[string]interface {}) (len=2) {
      (string) (len=6) "memory": (string) (len=5) "512Mi",
      (string) (len=3) "cpu": (string) (len=4) "250m"
     },
     (string) (len=8) "requests": (map[string]interface {}) (len=2) {
      (string) (len=3) "cpu": (string) (len=4) "200m",
      (string) (len=6) "memory": (string) (len=5) "200Mi"
     }
    },
    (string) (len=18) "podMonitorSelector": (map[string]interface {}) {
    }
   }
  }
 }
}
RAW provider 2021/04/03 23:45:15 Finished
RAW provider 2021/04/03 23:49:07 Starting up with command line: []string{".terraform/providers/registry.terraform.io/hashicorp/kubernetes-alpha/0.2.1/darwin_amd64/terraform-provider-kubernetes-alpha_v0.2.1_x5"}
RAW provider 2021/04/03 23:49:07 Finished
RAW provider 2021/04/03 23:49:08 Starting up with command line: []string{".terraform/providers/registry.terraform.io/hashicorp/kubernetes-alpha/0.2.1/darwin_amd64/terraform-provider-kubernetes-alpha_v0.2.1_x5"}
RAW provider 2021/04/03 23:49:08 Finished
RAW provider 2021/04/03 23:49:10 Starting up with command line: []string{".terraform/providers/registry.terraform.io/hashicorp/kubernetes-alpha/0.2.1/darwin_amd64/terraform-provider-kubernetes-alpha_v0.2.1_x5"}
RAW provider 2021/04/03 23:49:10 [Configure][ClientConfig] (rest.Config) &rest.Config{Host:"https://5BE469949E293A3A880C6FE683A7079F.gr7.us-east-1.eks.amazonaws.com", APIPath:"", ContentConfig:rest.ContentConfig{AcceptContentTypes:"", ContentType:"", GroupVersion:(*schema.GroupVersion)(nil), NegotiatedSerializer:runtime.NegotiatedSerializer(nil)}, Username:"", Password:"", BearerToken:"--- REDACTED ---", BearerTokenFile:"", Impersonate:rest.ImpersonationConfig{UserName:"", Groups:[]string(nil), Extra:map[string][]string(nil)}, AuthProvider:<nil>, AuthConfigPersister:rest.AuthProviderConfigPersister(nil), ExecProvider:<nil>, TLSClientConfig:rest.sanitizedTLSClientConfig{Insecure:false, ServerName:"", CertFile:"", KeyFile:"", CAFile:"", CertData:[]uint8(nil), KeyData:[]uint8(nil), CAData:[]uint8{0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x42, 0x45, 0x47, 0x49, 0x4e, 0x20, 0x43, 0x45, 0x52, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x45, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0xa, 0x4d, 0x49, 0x49, 0x43, 0x79, 0x44, 0x43, 0x43, 0x41, 0x62, 0x43, 0x67, 0x41, 0x77, 0x49, 0x42, 0x41, 0x67, 0x49, 0x42, 0x41, 0x44, 0x41, 0x4e, 0x42, 0x67, 0x6b, 0x71, 0x68, 0x6b, 0x69, 0x47, 0x39, 0x77, 0x30, 0x42, 0x41, 0x51, 0x73, 0x46, 0x41, 0x44, 0x41, 0x56, 0x4d, 0x52, 0x4d, 0x77, 0x45, 0x51, 0x59, 0x44, 0x56, 0x51, 0x51, 0x44, 0x45, 0x77, 0x70, 0x72, 0x64, 0x57, 0x4a, 0x6c, 0xa, 0x63, 0x6d, 0x35, 0x6c, 0x64, 0x47, 0x56, 0x7a, 0x4d, 0x42, 0x34, 0x58, 0x44, 0x54, 0x49, 0x77, 0x4d, 0x54, 0x41, 0x79, 0x4d, 0x54, 0x49, 0x78, 0x4e, 0x44, 0x63, 0x77, 0x4e, 0x46, 0x6f, 0x58, 0x44, 0x54, 0x4d, 0x77, 0x4d, 0x54, 0x41, 0x78, 0x4f, 0x54, 0x49, 0x78, 0x4e, 0x44, 0x63, 0x77, 0x4e, 0x46, 0x6f, 0x77, 0x46, 0x54, 0x45, 0x54, 0x4d, 0x42, 0x45, 0x47, 0x41, 0x31, 0x55, 0x45, 0xa, 0x41, 0x78, 0x4d, 0x4b, 0x61, 0x33, 0x56, 0x69, 0x5a, 0x58, 0x4a, 0x75, 0x5a, 0x58, 0x52, 0x6c, 0x63, 0x7a, 0x43, 0x43, 0x41, 0x53, 0x49, 0x77, 0x44, 0x51, 0x59, 0x4a, 0x4b, 0x6f, 0x5a, 0x49, 0x68, 0x76, 0x63, 0x4e, 0x41, 0x51, 0x45, 0x42, 0x42, 0x51, 0x41, 0x44, 0x67, 0x67, 0x45, 0x50, 0x41, 0x44, 0x43, 0x43, 0x41, 0x51, 0x6f, 0x43, 0x67, 0x67, 0x45, 0x42, 0x41, 0x4c, 0x42, 0x62, 0xa, 0x50, 0x46, 0x2b, 0x39, 0x30, 0x52, 0x6f, 0x67, 0x48, 0x58, 0x41, 0x79, 0x46, 0x56, 0x74, 0x41, 0x2b, 0x7a, 0x43, 0x46, 0x6d, 0x33, 0x56, 0x53, 0x31, 0x61, 0x59, 0x59, 0x79, 0x4c, 0x7a, 0x2f, 0x32, 0x51, 0x48, 0x76, 0x37, 0x4a, 0x65, 0x45, 0x48, 0x71, 0x49, 0x77, 0x66, 0x63, 0x75, 0x7a, 0x56, 0x71, 0x58, 0x38, 0x66, 0x4b, 0x70, 0x33, 0x68, 0x4c, 0x79, 0x79, 0x62, 0x6b, 0x2f, 0x64, 0xa, 0x55, 0x47, 0x49, 0x45, 0x41, 0x30, 0x75, 0x54, 0x6a, 0x4c, 0x67, 0x67, 0x71, 0x66, 0x66, 0x6f, 0x65, 0x6f, 0x31, 0x38, 0x7a, 0x35, 0x48, 0x4a, 0x6e, 0x73, 0x41, 0x6f, 0x6b, 0x43, 0x38, 0x64, 0x7a, 0x70, 0x5a, 0x43, 0x6b, 0x67, 0x31, 0x73, 0x78, 0x45, 0x79, 0x62, 0x2f, 0x2b, 0x39, 0x6d, 0x31, 0x69, 0x49, 0x67, 0x56, 0x33, 0x59, 0x39, 0x74, 0x48, 0x44, 0x45, 0x59, 0x4a, 0x6c, 0x37, 0xa, 0x56, 0x77, 0x51, 0x68, 0x70, 0x38, 0x48, 0x6e, 0x33, 0x46, 0x49, 0x2f, 0x4a, 0x63, 0x77, 0x44, 0x49, 0x6b, 0x55, 0x36, 0x45, 0x6a, 0x65, 0x46, 0x30, 0x71, 0x4c, 0x4b, 0x42, 0x75, 0x54, 0x31, 0x6e, 0x66, 0x45, 0x74, 0x6f, 0x68, 0x54, 0x4e, 0x37, 0x78, 0x70, 0x4e, 0x43, 0x76, 0x44, 0x61, 0x36, 0x44, 0x53, 0x32, 0x4c, 0x54, 0x57, 0x39, 0x6f, 0x6e, 0x74, 0x6d, 0x4b, 0x79, 0x45, 0x47, 0xa, 0x78, 0x6c, 0x73, 0x78, 0x74, 0x6b, 0x64, 0x47, 0x45, 0x37, 0x79, 0x55, 0x55, 0x67, 0x77, 0x52, 0x53, 0x72, 0x79, 0x6a, 0x41, 0x65, 0x76, 0x41, 0x79, 0x5a, 0x64, 0x37, 0x71, 0x45, 0x72, 0x67, 0x74, 0x41, 0x56, 0x6c, 0x35, 0x70, 0x44, 0x46, 0x48, 0x30, 0x74, 0x42, 0x48, 0x53, 0x74, 0x67, 0x6b, 0x41, 0x51, 0x59, 0x57, 0x48, 0x77, 0x78, 0x62, 0x62, 0x79, 0x70, 0x59, 0x37, 0x33, 0x4c, 0xa, 0x5a, 0x43, 0x51, 0x73, 0x2b, 0x4c, 0x35, 0x44, 0x6d, 0x67, 0x2f, 0x43, 0x6e, 0x57, 0x31, 0x75, 0x62, 0x47, 0x46, 0x32, 0x59, 0x75, 0x47, 0x33, 0x79, 0x46, 0x59, 0x4b, 0x31, 0x6c, 0x32, 0x4e, 0x46, 0x78, 0x2f, 0x74, 0x67, 0x48, 0x71, 0x4e, 0x78, 0x56, 0x48, 0x6a, 0x31, 0x53, 0x42, 0x5a, 0x32, 0x41, 0x54, 0x76, 0x61, 0x4b, 0x47, 0x6f, 0x6c, 0x56, 0x35, 0x53, 0x69, 0x57, 0x33, 0x49, 0xa, 0x68, 0x45, 0x46, 0x46, 0x2b, 0x77, 0x4b, 0x50, 0x73, 0x63, 0x46, 0x59, 0x4f, 0x49, 0x76, 0x53, 0x4d, 0x44, 0x38, 0x43, 0x41, 0x77, 0x45, 0x41, 0x41, 0x61, 0x4d, 0x6a, 0x4d, 0x43, 0x45, 0x77, 0x44, 0x67, 0x59, 0x44, 0x56, 0x52, 0x30, 0x50, 0x41, 0x51, 0x48, 0x2f, 0x42, 0x41, 0x51, 0x44, 0x41, 0x67, 0x4b, 0x6b, 0x4d, 0x41, 0x38, 0x47, 0x41, 0x31, 0x55, 0x64, 0x45, 0x77, 0x45, 0x42, 0xa, 0x2f, 0x77, 0x51, 0x46, 0x4d, 0x41, 0x4d, 0x42, 0x41, 0x66, 0x38, 0x77, 0x44, 0x51, 0x59, 0x4a, 0x4b, 0x6f, 0x5a, 0x49, 0x68, 0x76, 0x63, 0x4e, 0x41, 0x51, 0x45, 0x4c, 0x42, 0x51, 0x41, 0x44, 0x67, 0x67, 0x45, 0x42, 0x41, 0x46, 0x2b, 0x59, 0x44, 0x46, 0x31, 0x4e, 0x4b, 0x65, 0x6f, 0x41, 0x38, 0x49, 0x72, 0x65, 0x4f, 0x78, 0x4d, 0x2f, 0x4f, 0x45, 0x59, 0x70, 0x54, 0x44, 0x6a, 0x76, 0xa, 0x50, 0x64, 0x55, 0x69, 0x31, 0x61, 0x37, 0x79, 0x75, 0x74, 0x2b, 0x30, 0x39, 0x37, 0x70, 0x36, 0x6f, 0x2f, 0x32, 0x41, 0x53, 0x35, 0x56, 0x52, 0x6a, 0x70, 0x32, 0x57, 0x55, 0x7a, 0x72, 0x4b, 0x79, 0x73, 0x57, 0x75, 0x65, 0x74, 0x55, 0x45, 0x2b, 0x72, 0x6e, 0x41, 0x70, 0x33, 0x39, 0x37, 0x2f, 0x6a, 0x78, 0x75, 0x73, 0x54, 0x78, 0x2f, 0x50, 0x76, 0x58, 0x57, 0x44, 0x34, 0x75, 0x61, 0xa, 0x51, 0x32, 0x7a, 0x49, 0x38, 0x44, 0x59, 0x62, 0x6b, 0x64, 0x75, 0x63, 0x4f, 0x47, 0x67, 0x4a, 0x31, 0x78, 0x61, 0x4e, 0x70, 0x6b, 0x75, 0x62, 0x48, 0x33, 0x64, 0x61, 0x48, 0x59, 0x5a, 0x2b, 0x48, 0x38, 0x71, 0x42, 0x70, 0x2f, 0x74, 0x50, 0x41, 0x42, 0x57, 0x73, 0x32, 0x35, 0x66, 0x78, 0x78, 0x31, 0x53, 0x69, 0x75, 0x38, 0x4e, 0x38, 0x4b, 0x59, 0x4a, 0x2b, 0x32, 0x49, 0x68, 0x75, 0xa, 0x61, 0x64, 0x42, 0x71, 0x61, 0x73, 0x56, 0x4a, 0x6c, 0x79, 0x55, 0x4d, 0x79, 0x50, 0x49, 0x7a, 0x4b, 0x46, 0x36, 0x6e, 0x4c, 0x54, 0x57, 0x66, 0x59, 0x5a, 0x4f, 0x31, 0x76, 0x30, 0x32, 0x36, 0x4b, 0x36, 0x6f, 0x31, 0x63, 0x39, 0x78, 0x63, 0x74, 0x69, 0x77, 0x54, 0x6a, 0x54, 0x59, 0x43, 0x34, 0x7a, 0x38, 0x65, 0x4b, 0x69, 0x41, 0x4c, 0x49, 0x36, 0x33, 0x33, 0x34, 0x74, 0x4e, 0x51, 0xa, 0x33, 0x32, 0x5a, 0x77, 0x4f, 0x75, 0x73, 0x58, 0x6e, 0x4a, 0x33, 0x6b, 0x34, 0x75, 0x42, 0x57, 0x70, 0x79, 0x31, 0x69, 0x39, 0x6f, 0x4e, 0x6b, 0x75, 0x75, 0x48, 0x45, 0x64, 0x69, 0x48, 0x37, 0x36, 0x30, 0x35, 0x4a, 0x31, 0x66, 0x77, 0x57, 0x53, 0x30, 0x63, 0x65, 0x35, 0x67, 0x49, 0x50, 0x35, 0x6a, 0x6e, 0x4e, 0x73, 0x4d, 0x64, 0x61, 0x44, 0x49, 0x2f, 0x39, 0x54, 0x4a, 0x4e, 0x6e, 0xa, 0x70, 0x67, 0x2b, 0x41, 0x58, 0x55, 0x4a, 0x78, 0x46, 0x30, 0x4f, 0x77, 0x50, 0x42, 0x63, 0x45, 0x37, 0x4a, 0x41, 0x43, 0x64, 0x52, 0x6d, 0x58, 0x73, 0x2b, 0x33, 0x78, 0x6c, 0x54, 0x59, 0x4a, 0x76, 0x70, 0x53, 0x75, 0x32, 0x4b, 0x65, 0x6c, 0x4c, 0x55, 0x6a, 0x52, 0x34, 0x5a, 0x4c, 0x72, 0x5a, 0x34, 0x78, 0x39, 0x4c, 0x45, 0x36, 0x54, 0x65, 0x77, 0x34, 0x3d, 0xa, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x45, 0x4e, 0x44, 0x20, 0x43, 0x45, 0x52, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x45, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0xa}, NextProtos:[]string(nil)}, UserAgent:"", DisableCompression:false, Transport:http.RoundTripper(nil), WrapTransport:(transport.WrapperFunc)(nil), QPS:0, Burst:0, RateLimiter:flowcontrol.RateLimiter(nil), Timeout:0, Dial:(func(context.Context, string, string) (net.Conn, error))(nil)}

RAW provider 2021/04/03 23:49:13 Finished
RAW provider 2021/04/03 23:49:13 Starting up with command line: []string{".terraform/providers/registry.terraform.io/hashicorp/kubernetes-alpha/0.2.1/darwin_amd64/terraform-provider-kubernetes-alpha_v0.2.1_x5"}
RAW provider 2021/04/03 23:49:14 [Configure][ClientConfig] (rest.Config) &rest.Config{Host:"https://5BE469949E293A3A880C6FE683A7079F.gr7.us-east-1.eks.amazonaws.com", APIPath:"", ContentConfig:rest.ContentConfig{AcceptContentTypes:"", ContentType:"", GroupVersion:(*schema.GroupVersion)(nil), NegotiatedSerializer:runtime.NegotiatedSerializer(nil)}, Username:"", Password:"", BearerToken:"--- REDACTED ---", BearerTokenFile:"", Impersonate:rest.ImpersonationConfig{UserName:"", Groups:[]string(nil), Extra:map[string][]string(nil)}, AuthProvider:<nil>, AuthConfigPersister:rest.AuthProviderConfigPersister(nil), ExecProvider:<nil>, TLSClientConfig:rest.sanitizedTLSClientConfig{Insecure:false, ServerName:"", CertFile:"", KeyFile:"", CAFile:"", CertData:[]uint8(nil), KeyData:[]uint8(nil), CAData:[]uint8{0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x42, 0x45, 0x47, 0x49, 0x4e, 0x20, 0x43, 0x45, 0x52, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x45, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0xa, 0x4d, 0x49, 0x49, 0x43, 0x79, 0x44, 0x43, 0x43, 0x41, 0x62, 0x43, 0x67, 0x41, 0x77, 0x49, 0x42, 0x41, 0x67, 0x49, 0x42, 0x41, 0x44, 0x41, 0x4e, 0x42, 0x67, 0x6b, 0x71, 0x68, 0x6b, 0x69, 0x47, 0x39, 0x77, 0x30, 0x42, 0x41, 0x51, 0x73, 0x46, 0x41, 0x44, 0x41, 0x56, 0x4d, 0x52, 0x4d, 0x77, 0x45, 0x51, 0x59, 0x44, 0x56, 0x51, 0x51, 0x44, 0x45, 0x77, 0x70, 0x72, 0x64, 0x57, 0x4a, 0x6c, 0xa, 0x63, 0x6d, 0x35, 0x6c, 0x64, 0x47, 0x56, 0x7a, 0x4d, 0x42, 0x34, 0x58, 0x44, 0x54, 0x49, 0x77, 0x4d, 0x54, 0x41, 0x79, 0x4d, 0x54, 0x49, 0x78, 0x4e, 0x44, 0x63, 0x77, 0x4e, 0x46, 0x6f, 0x58, 0x44, 0x54, 0x4d, 0x77, 0x4d, 0x54, 0x41, 0x78, 0x4f, 0x54, 0x49, 0x78, 0x4e, 0x44, 0x63, 0x77, 0x4e, 0x46, 0x6f, 0x77, 0x46, 0x54, 0x45, 0x54, 0x4d, 0x42, 0x45, 0x47, 0x41, 0x31, 0x55, 0x45, 0xa, 0x41, 0x78, 0x4d, 0x4b, 0x61, 0x33, 0x56, 0x69, 0x5a, 0x58, 0x4a, 0x75, 0x5a, 0x58, 0x52, 0x6c, 0x63, 0x7a, 0x43, 0x43, 0x41, 0x53, 0x49, 0x77, 0x44, 0x51, 0x59, 0x4a, 0x4b, 0x6f, 0x5a, 0x49, 0x68, 0x76, 0x63, 0x4e, 0x41, 0x51, 0x45, 0x42, 0x42, 0x51, 0x41, 0x44, 0x67, 0x67, 0x45, 0x50, 0x41, 0x44, 0x43, 0x43, 0x41, 0x51, 0x6f, 0x43, 0x67, 0x67, 0x45, 0x42, 0x41, 0x4c, 0x42, 0x62, 0xa, 0x50, 0x46, 0x2b, 0x39, 0x30, 0x52, 0x6f, 0x67, 0x48, 0x58, 0x41, 0x79, 0x46, 0x56, 0x74, 0x41, 0x2b, 0x7a, 0x43, 0x46, 0x6d, 0x33, 0x56, 0x53, 0x31, 0x61, 0x59, 0x59, 0x79, 0x4c, 0x7a, 0x2f, 0x32, 0x51, 0x48, 0x76, 0x37, 0x4a, 0x65, 0x45, 0x48, 0x71, 0x49, 0x77, 0x66, 0x63, 0x75, 0x7a, 0x56, 0x71, 0x58, 0x38, 0x66, 0x4b, 0x70, 0x33, 0x68, 0x4c, 0x79, 0x79, 0x62, 0x6b, 0x2f, 0x64, 0xa, 0x55, 0x47, 0x49, 0x45, 0x41, 0x30, 0x75, 0x54, 0x6a, 0x4c, 0x67, 0x67, 0x71, 0x66, 0x66, 0x6f, 0x65, 0x6f, 0x31, 0x38, 0x7a, 0x35, 0x48, 0x4a, 0x6e, 0x73, 0x41, 0x6f, 0x6b, 0x43, 0x38, 0x64, 0x7a, 0x70, 0x5a, 0x43, 0x6b, 0x67, 0x31, 0x73, 0x78, 0x45, 0x79, 0x62, 0x2f, 0x2b, 0x39, 0x6d, 0x31, 0x69, 0x49, 0x67, 0x56, 0x33, 0x59, 0x39, 0x74, 0x48, 0x44, 0x45, 0x59, 0x4a, 0x6c, 0x37, 0xa, 0x56, 0x77, 0x51, 0x68, 0x70, 0x38, 0x48, 0x6e, 0x33, 0x46, 0x49, 0x2f, 0x4a, 0x63, 0x77, 0x44, 0x49, 0x6b, 0x55, 0x36, 0x45, 0x6a, 0x65, 0x46, 0x30, 0x71, 0x4c, 0x4b, 0x42, 0x75, 0x54, 0x31, 0x6e, 0x66, 0x45, 0x74, 0x6f, 0x68, 0x54, 0x4e, 0x37, 0x78, 0x70, 0x4e, 0x43, 0x76, 0x44, 0x61, 0x36, 0x44, 0x53, 0x32, 0x4c, 0x54, 0x57, 0x39, 0x6f, 0x6e, 0x74, 0x6d, 0x4b, 0x79, 0x45, 0x47, 0xa, 0x78, 0x6c, 0x73, 0x78, 0x74, 0x6b, 0x64, 0x47, 0x45, 0x37, 0x79, 0x55, 0x55, 0x67, 0x77, 0x52, 0x53, 0x72, 0x79, 0x6a, 0x41, 0x65, 0x76, 0x41, 0x79, 0x5a, 0x64, 0x37, 0x71, 0x45, 0x72, 0x67, 0x74, 0x41, 0x56, 0x6c, 0x35, 0x70, 0x44, 0x46, 0x48, 0x30, 0x74, 0x42, 0x48, 0x53, 0x74, 0x67, 0x6b, 0x41, 0x51, 0x59, 0x57, 0x48, 0x77, 0x78, 0x62, 0x62, 0x79, 0x70, 0x59, 0x37, 0x33, 0x4c, 0xa, 0x5a, 0x43, 0x51, 0x73, 0x2b, 0x4c, 0x35, 0x44, 0x6d, 0x67, 0x2f, 0x43, 0x6e, 0x57, 0x31, 0x75, 0x62, 0x47, 0x46, 0x32, 0x59, 0x75, 0x47, 0x33, 0x79, 0x46, 0x59, 0x4b, 0x31, 0x6c, 0x32, 0x4e, 0x46, 0x78, 0x2f, 0x74, 0x67, 0x48, 0x71, 0x4e, 0x78, 0x56, 0x48, 0x6a, 0x31, 0x53, 0x42, 0x5a, 0x32, 0x41, 0x54, 0x76, 0x61, 0x4b, 0x47, 0x6f, 0x6c, 0x56, 0x35, 0x53, 0x69, 0x57, 0x33, 0x49, 0xa, 0x68, 0x45, 0x46, 0x46, 0x2b, 0x77, 0x4b, 0x50, 0x73, 0x63, 0x46, 0x59, 0x4f, 0x49, 0x76, 0x53, 0x4d, 0x44, 0x38, 0x43, 0x41, 0x77, 0x45, 0x41, 0x41, 0x61, 0x4d, 0x6a, 0x4d, 0x43, 0x45, 0x77, 0x44, 0x67, 0x59, 0x44, 0x56, 0x52, 0x30, 0x50, 0x41, 0x51, 0x48, 0x2f, 0x42, 0x41, 0x51, 0x44, 0x41, 0x67, 0x4b, 0x6b, 0x4d, 0x41, 0x38, 0x47, 0x41, 0x31, 0x55, 0x64, 0x45, 0x77, 0x45, 0x42, 0xa, 0x2f, 0x77, 0x51, 0x46, 0x4d, 0x41, 0x4d, 0x42, 0x41, 0x66, 0x38, 0x77, 0x44, 0x51, 0x59, 0x4a, 0x4b, 0x6f, 0x5a, 0x49, 0x68, 0x76, 0x63, 0x4e, 0x41, 0x51, 0x45, 0x4c, 0x42, 0x51, 0x41, 0x44, 0x67, 0x67, 0x45, 0x42, 0x41, 0x46, 0x2b, 0x59, 0x44, 0x46, 0x31, 0x4e, 0x4b, 0x65, 0x6f, 0x41, 0x38, 0x49, 0x72, 0x65, 0x4f, 0x78, 0x4d, 0x2f, 0x4f, 0x45, 0x59, 0x70, 0x54, 0x44, 0x6a, 0x76, 0xa, 0x50, 0x64, 0x55, 0x69, 0x31, 0x61, 0x37, 0x79, 0x75, 0x74, 0x2b, 0x30, 0x39, 0x37, 0x70, 0x36, 0x6f, 0x2f, 0x32, 0x41, 0x53, 0x35, 0x56, 0x52, 0x6a, 0x70, 0x32, 0x57, 0x55, 0x7a, 0x72, 0x4b, 0x79, 0x73, 0x57, 0x75, 0x65, 0x74, 0x55, 0x45, 0x2b, 0x72, 0x6e, 0x41, 0x70, 0x33, 0x39, 0x37, 0x2f, 0x6a, 0x78, 0x75, 0x73, 0x54, 0x78, 0x2f, 0x50, 0x76, 0x58, 0x57, 0x44, 0x34, 0x75, 0x61, 0xa, 0x51, 0x32, 0x7a, 0x49, 0x38, 0x44, 0x59, 0x62, 0x6b, 0x64, 0x75, 0x63, 0x4f, 0x47, 0x67, 0x4a, 0x31, 0x78, 0x61, 0x4e, 0x70, 0x6b, 0x75, 0x62, 0x48, 0x33, 0x64, 0x61, 0x48, 0x59, 0x5a, 0x2b, 0x48, 0x38, 0x71, 0x42, 0x70, 0x2f, 0x74, 0x50, 0x41, 0x42, 0x57, 0x73, 0x32, 0x35, 0x66, 0x78, 0x78, 0x31, 0x53, 0x69, 0x75, 0x38, 0x4e, 0x38, 0x4b, 0x59, 0x4a, 0x2b, 0x32, 0x49, 0x68, 0x75, 0xa, 0x61, 0x64, 0x42, 0x71, 0x61, 0x73, 0x56, 0x4a, 0x6c, 0x79, 0x55, 0x4d, 0x79, 0x50, 0x49, 0x7a, 0x4b, 0x46, 0x36, 0x6e, 0x4c, 0x54, 0x57, 0x66, 0x59, 0x5a, 0x4f, 0x31, 0x76, 0x30, 0x32, 0x36, 0x4b, 0x36, 0x6f, 0x31, 0x63, 0x39, 0x78, 0x63, 0x74, 0x69, 0x77, 0x54, 0x6a, 0x54, 0x59, 0x43, 0x34, 0x7a, 0x38, 0x65, 0x4b, 0x69, 0x41, 0x4c, 0x49, 0x36, 0x33, 0x33, 0x34, 0x74, 0x4e, 0x51, 0xa, 0x33, 0x32, 0x5a, 0x77, 0x4f, 0x75, 0x73, 0x58, 0x6e, 0x4a, 0x33, 0x6b, 0x34, 0x75, 0x42, 0x57, 0x70, 0x79, 0x31, 0x69, 0x39, 0x6f, 0x4e, 0x6b, 0x75, 0x75, 0x48, 0x45, 0x64, 0x69, 0x48, 0x37, 0x36, 0x30, 0x35, 0x4a, 0x31, 0x66, 0x77, 0x57, 0x53, 0x30, 0x63, 0x65, 0x35, 0x67, 0x49, 0x50, 0x35, 0x6a, 0x6e, 0x4e, 0x73, 0x4d, 0x64, 0x61, 0x44, 0x49, 0x2f, 0x39, 0x54, 0x4a, 0x4e, 0x6e, 0xa, 0x70, 0x67, 0x2b, 0x41, 0x58, 0x55, 0x4a, 0x78, 0x46, 0x30, 0x4f, 0x77, 0x50, 0x42, 0x63, 0x45, 0x37, 0x4a, 0x41, 0x43, 0x64, 0x52, 0x6d, 0x58, 0x73, 0x2b, 0x33, 0x78, 0x6c, 0x54, 0x59, 0x4a, 0x76, 0x70, 0x53, 0x75, 0x32, 0x4b, 0x65, 0x6c, 0x4c, 0x55, 0x6a, 0x52, 0x34, 0x5a, 0x4c, 0x72, 0x5a, 0x34, 0x78, 0x39, 0x4c, 0x45, 0x36, 0x54, 0x65, 0x77, 0x34, 0x3d, 0xa, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x45, 0x4e, 0x44, 0x20, 0x43, 0x45, 0x52, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x45, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0xa}, NextProtos:[]string(nil)}, UserAgent:"", DisableCompression:false, Transport:http.RoundTripper(nil), WrapTransport:(transport.WrapperFunc)(nil), QPS:0, Burst:0, RateLimiter:flowcontrol.RateLimiter(nil), Timeout:0, Dial:(func(context.Context, string, string) (net.Conn, error))(nil)}

RAW provider 2021/04/03 23:49:15 [ApplyResourceChange][Request][PlannedState]
(cty.Value) {
 ty: (cty.Type) {
  typeImpl: (cty.typeObject) {
   typeImplSigil: (cty.typeImplSigil) {
   },
   AttrTypes: (map[string]cty.Type) (len=3) {
    (string) (len=6) "object": (cty.Type) {
     typeImpl: (cty.typeObject) {
      typeImplSigil: (cty.typeImplSigil) {
      },
      AttrTypes: (map[string]cty.Type) (len=4) {
       (string) (len=4) "spec": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) (len=19) {
          (string) (len=6) "thanos": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=3) {
             (string) (len=9) "baseImage": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             },
             (string) (len=19) "objectStorageConfig": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=3) "key": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=4) "name": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             },
             (string) (len=7) "version": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             }
            }
           }
          },
          (string) (len=18) "podMonitorSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=31) "serviceMonitorNamespaceSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=5) "image": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=13) "probeSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=22) "serviceMonitorSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=27) "podMonitorNamespaceSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=7) "storage": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=1) {
             (string) (len=19) "volumeClaimTemplate": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=1) {
                (string) (len=4) "spec": (cty.Type) {
                 typeImpl: (cty.typeObject) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  AttrTypes: (map[string]cty.Type) (len=2) {
                   (string) (len=9) "resources": (cty.Type) {
                    typeImpl: (cty.typeObject) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     AttrTypes: (map[string]cty.Type) (len=1) {
                      (string) (len=8) "requests": (cty.Type) {
                       typeImpl: (cty.typeObject) {
                        typeImplSigil: (cty.typeImplSigil) {
                        },
                        AttrTypes: (map[string]cty.Type) (len=1) {
                         (string) (len=7) "storage": (cty.Type) {
                          typeImpl: (cty.primitiveType) {
                           typeImplSigil: (cty.typeImplSigil) {
                           },
                           Kind: (cty.primitiveTypeKind) 83
                          }
                         }
                        }
                       }
                      }
                     }
                    }
                   },
                   (string) (len=16) "storageClassName": (cty.Type) {
                    typeImpl: (cty.primitiveType) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     Kind: (cty.primitiveTypeKind) 83
                    }
                   }
                  }
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=23) "additionalScrapeConfigs": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=2) {
             (string) (len=3) "key": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             },
             (string) (len=4) "name": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             }
            }
           }
          },
          (string) (len=14) "externalLabels": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=2) {
             (string) (len=7) "product": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             },
             (string) (len=7) "cluster": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             }
            }
           }
          },
          (string) (len=12) "nodeSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=1) {
             (string) (len=4) "role": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             }
            }
           }
          },
          (string) (len=22) "probeNamespaceSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=8) "replicas": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 78
           }
          },
          (string) (len=18) "serviceAccountName": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=7) "version": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=9) "resources": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=2) {
             (string) (len=6) "limits": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=3) "cpu": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=6) "memory": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             },
             (string) (len=8) "requests": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=3) "cpu": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=6) "memory": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=12) "ruleSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=1) {
             (string) (len=11) "matchLabels": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=10) "prometheus": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=4) "role": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=15) "securityContext": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=3) {
             (string) (len=7) "fsGroup": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 78
              }
             },
             (string) (len=12) "runAsNonRoot": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 66
              }
             },
             (string) (len=9) "runAsUser": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 78
              }
             }
            }
           }
          },
          (string) (len=8) "alerting": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=1) {
             (string) (len=13) "alertmanagers": (cty.Type) {
              typeImpl: (cty.typeTuple) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               ElemTypes: ([]cty.Type) (len=1 cap=1) {
                (cty.Type) {
                 typeImpl: (cty.typeObject) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  AttrTypes: (map[string]cty.Type) (len=3) {
                   (string) (len=4) "name": (cty.Type) {
                    typeImpl: (cty.primitiveType) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     Kind: (cty.primitiveTypeKind) 83
                    }
                   },
                   (string) (len=9) "namespace": (cty.Type) {
                    typeImpl: (cty.primitiveType) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     Kind: (cty.primitiveTypeKind) 83
                    }
                   },
                   (string) (len=4) "port": (cty.Type) {
                    typeImpl: (cty.primitiveType) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     Kind: (cty.primitiveTypeKind) 83
                    }
                   }
                  }
                 }
                }
               }
              }
             }
            }
           }
          }
         }
        }
       },
       (string) (len=10) "apiVersion": (cty.Type) {
        typeImpl: (cty.primitiveType) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         Kind: (cty.primitiveTypeKind) 83
        }
       },
       (string) (len=4) "kind": (cty.Type) {
        typeImpl: (cty.primitiveType) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         Kind: (cty.primitiveTypeKind) 83
        }
       },
       (string) (len=8) "metadata": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) (len=2) {
          (string) (len=4) "name": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=9) "namespace": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          }
         }
        }
       }
      }
     }
    },
    (string) (len=8) "wait_for": (cty.Type) {
     typeImpl: (cty.typeObject) {
      typeImplSigil: (cty.typeImplSigil) {
      },
      AttrTypes: (map[string]cty.Type) (len=1) {
       (string) (len=6) "fields": (cty.Type) {
        typeImpl: (cty.typeMap) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         ElementTypeT: (cty.Type) {
          typeImpl: (cty.primitiveType) {
           typeImplSigil: (cty.typeImplSigil) {
           },
           Kind: (cty.primitiveTypeKind) 83
          }
         }
        }
       }
      }
     }
    },
    (string) (len=8) "manifest": (cty.Type) {
     typeImpl: (cty.typeObject) {
      typeImplSigil: (cty.typeImplSigil) {
      },
      AttrTypes: (map[string]cty.Type) (len=4) {
       (string) (len=10) "apiVersion": (cty.Type) {
        typeImpl: (cty.primitiveType) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         Kind: (cty.primitiveTypeKind) 83
        }
       },
       (string) (len=4) "kind": (cty.Type) {
        typeImpl: (cty.primitiveType) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         Kind: (cty.primitiveTypeKind) 83
        }
       },
       (string) (len=8) "metadata": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) (len=2) {
          (string) (len=4) "name": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=9) "namespace": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          }
         }
        }
       },
       (string) (len=4) "spec": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) (len=21) {
          (string) (len=12) "ruleSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=1) {
             (string) (len=11) "matchLabels": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=10) "prometheus": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=4) "role": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=18) "podMonitorSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=13) "probeSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=8) "alerting": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=1) {
             (string) (len=13) "alertmanagers": (cty.Type) {
              typeImpl: (cty.typeTuple) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               ElemTypes: ([]cty.Type) (len=1 cap=1) {
                (cty.Type) {
                 typeImpl: (cty.typeObject) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  AttrTypes: (map[string]cty.Type) (len=3) {
                   (string) (len=4) "port": (cty.Type) {
                    typeImpl: (cty.primitiveType) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     Kind: (cty.primitiveTypeKind) 83
                    }
                   },
                   (string) (len=4) "name": (cty.Type) {
                    typeImpl: (cty.primitiveType) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     Kind: (cty.primitiveTypeKind) 83
                    }
                   },
                   (string) (len=9) "namespace": (cty.Type) {
                    typeImpl: (cty.primitiveType) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     Kind: (cty.primitiveTypeKind) 83
                    }
                   }
                  }
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=14) "externalLabels": (cty.Type) {
           typeImpl: (cty.typeMap) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            ElementTypeT: (cty.Type) {
             typeImpl: (cty.primitiveType) {
              typeImplSigil: (cty.typeImplSigil) {
              },
              Kind: (cty.primitiveTypeKind) 83
             }
            }
           }
          },
          (string) (len=22) "probeNamespaceSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=9) "namespace": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=15) "securityContext": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=3) {
             (string) (len=7) "fsGroup": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 78
              }
             },
             (string) (len=12) "runAsNonRoot": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 66
              }
             },
             (string) (len=9) "runAsUser": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 78
              }
             }
            }
           }
          },
          (string) (len=12) "nodeSelector": (cty.Type) {
           typeImpl: (cty.typeMap) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            ElementTypeT: (cty.Type) {
             typeImpl: (cty.primitiveType) {
              typeImplSigil: (cty.typeImplSigil) {
              },
              Kind: (cty.primitiveTypeKind) 83
             }
            }
           }
          },
          (string) (len=31) "serviceMonitorNamespaceSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=7) "storage": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=1) {
             (string) (len=19) "volumeClaimTemplate": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=1) {
                (string) (len=4) "spec": (cty.Type) {
                 typeImpl: (cty.typeObject) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  AttrTypes: (map[string]cty.Type) (len=2) {
                   (string) (len=16) "storageClassName": (cty.Type) {
                    typeImpl: (cty.primitiveType) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     Kind: (cty.primitiveTypeKind) 83
                    }
                   },
                   (string) (len=9) "resources": (cty.Type) {
                    typeImpl: (cty.typeObject) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     AttrTypes: (map[string]cty.Type) (len=1) {
                      (string) (len=8) "requests": (cty.Type) {
                       typeImpl: (cty.typeObject) {
                        typeImplSigil: (cty.typeImplSigil) {
                        },
                        AttrTypes: (map[string]cty.Type) (len=1) {
                         (string) (len=7) "storage": (cty.Type) {
                          typeImpl: (cty.primitiveType) {
                           typeImplSigil: (cty.typeImplSigil) {
                           },
                           Kind: (cty.primitiveTypeKind) 83
                          }
                         }
                        }
                       }
                      }
                     }
                    }
                   }
                  }
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=9) "resources": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=2) {
             (string) (len=6) "limits": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=3) "cpu": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=6) "memory": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             },
             (string) (len=8) "requests": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=3) "cpu": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=6) "memory": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=7) "version": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=5) "image": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=27) "podMonitorNamespaceSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=8) "replicas": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 78
           }
          },
          (string) (len=18) "serviceAccountName": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=23) "additionalScrapeConfigs": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=2) {
             (string) (len=4) "name": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             },
             (string) (len=3) "key": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             }
            }
           }
          },
          (string) (len=6) "thanos": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=3) {
             (string) (len=9) "baseImage": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             },
             (string) (len=19) "objectStorageConfig": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=4) "name": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=3) "key": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             },
             (string) (len=7) "version": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             }
            }
           }
          },
          (string) (len=22) "serviceMonitorSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=4) "name": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          }
         }
        }
       }
      }
     }
    }
   }
  }
 },
 v: (map[string]interface {}) (len=3) {
  (string) (len=6) "object": (map[string]interface {}) (len=4) {
   (string) (len=4) "spec": (map[string]interface {}) (len=19) {
    (string) (len=23) "additionalScrapeConfigs": (map[string]interface {}) (len=2) {
     (string) (len=3) "key": (string) (len=26) "prometheus-additional.yaml",
     (string) (len=4) "name": (string) (len=25) "additional-scrape-configs"
    },
    (string) (len=9) "resources": (map[string]interface {}) (len=2) {
     (string) (len=6) "limits": (map[string]interface {}) (len=2) {
      (string) (len=3) "cpu": (string) (len=4) "250m",
      (string) (len=6) "memory": (string) (len=6) "1024Mi"
     },
     (string) (len=8) "requests": (map[string]interface {}) (len=2) {
      (string) (len=6) "memory": (string) (len=5) "200Mi",
      (string) (len=3) "cpu": (string) (len=4) "200m"
     }
    },
    (string) (len=6) "thanos": (map[string]interface {}) (len=3) {
     (string) (len=9) "baseImage": (string) (len=21) "quay.io/thanos/thanos",
     (string) (len=19) "objectStorageConfig": (map[string]interface {}) (len=2) {
      (string) (len=3) "key": (string) (len=11) "thanos.yaml",
      (string) (len=4) "name": (string) (len=22) "thanos-objstore-config"
     },
     (string) (len=7) "version": (string) (len=7) "v0.16.0"
    },
    (string) (len=7) "storage": (map[string]interface {}) (len=1) {
     (string) (len=19) "volumeClaimTemplate": (map[string]interface {}) (len=1) {
      (string) (len=4) "spec": (map[string]interface {}) (len=2) {
       (string) (len=9) "resources": (map[string]interface {}) (len=1) {
        (string) (len=8) "requests": (map[string]interface {}) (len=1) {
         (string) (len=7) "storage": (string) (len=4) "10Gi"
        }
       },
       (string) (len=16) "storageClassName": (string) (len=3) "gp2"
      }
     }
    },
    (string) (len=7) "version": (string) (len=7) "v2.25.2",
    (string) (len=22) "probeNamespaceSelector": (map[string]interface {}) {
    },
    (string) (len=31) "serviceMonitorNamespaceSelector": (map[string]interface {}) {
    },
    (string) (len=8) "replicas": (*big.Float)(0xc000529200)(1),
    (string) (len=22) "serviceMonitorSelector": (map[string]interface {}) {
    },
    (string) (len=12) "nodeSelector": (map[string]interface {}) (len=1) {
     (string) (len=4) "role": (string) (len=8) "services"
    },
    (string) (len=12) "ruleSelector": (map[string]interface {}) (len=1) {
     (string) (len=11) "matchLabels": (map[string]interface {}) (len=2) {
      (string) (len=10) "prometheus": (string) (len=3) "k8s",
      (string) (len=4) "role": (string) (len=11) "alert-rules"
     }
    },
    (string) (len=18) "podMonitorSelector": (map[string]interface {}) {
    },
    (string) (len=15) "securityContext": (map[string]interface {}) (len=3) {
     (string) (len=7) "fsGroup": (*big.Float)(0xc000529410)(2000),
     (string) (len=12) "runAsNonRoot": (bool) true,
     (string) (len=9) "runAsUser": (*big.Float)(0xc000529440)(1000)
    },
    (string) (len=27) "podMonitorNamespaceSelector": (map[string]interface {}) {
    },
    (string) (len=18) "serviceAccountName": (string) (len=14) "prometheus-k8s",
    (string) (len=13) "probeSelector": (map[string]interface {}) {
    },
    (string) (len=14) "externalLabels": (map[string]interface {}) (len=2) {
     (string) (len=7) "product": (string) (len=13) "api beep boop",
     (string) (len=7) "cluster": (string) (len=12) "my-cluster-2"
    },
    (string) (len=8) "alerting": (map[string]interface {}) (len=1) {
     (string) (len=13) "alertmanagers": ([]interface {}) (len=1 cap=1) {
      (map[string]interface {}) (len=3) {
       (string) (len=4) "name": (string) (len=17) "alertmanager-main",
       (string) (len=9) "namespace": (string) (len=10) "monitoring",
       (string) (len=4) "port": (string) (len=3) "web"
      }
     }
    },
    (string) (len=5) "image": (string) (len=37) "quay.io/prometheus/prometheus:v2.25.2"
   },
   (string) (len=10) "apiVersion": (string) (len=24) "monitoring.coreos.com/v1",
   (string) (len=4) "kind": (string) (len=10) "Prometheus",
   (string) (len=8) "metadata": (map[string]interface {}) (len=2) {
    (string) (len=9) "namespace": (string) (len=15) "test-operator-1",
    (string) (len=4) "name": (string) (len=6) "test-1"
   }
  },
  (string) (len=8) "wait_for": (interface {}) <nil>,
  (string) (len=8) "manifest": (map[string]interface {}) (len=4) {
   (string) (len=4) "kind": (string) (len=10) "Prometheus",
   (string) (len=8) "metadata": (map[string]interface {}) (len=2) {
    (string) (len=4) "name": (string) (len=6) "test-1",
    (string) (len=9) "namespace": (string) (len=15) "test-operator-1"
   },
   (string) (len=4) "spec": (map[string]interface {}) (len=21) {
    (string) (len=5) "image": (string) (len=37) "quay.io/prometheus/prometheus:v2.25.2",
    (string) (len=18) "serviceAccountName": (string) (len=14) "prometheus-k8s",
    (string) (len=9) "namespace": (string) (len=15) "test-operator-1",
    (string) (len=13) "probeSelector": (map[string]interface {}) {
    },
    (string) (len=8) "replicas": (*big.Float)(0xc000240f60)(1),
    (string) (len=12) "ruleSelector": (map[string]interface {}) (len=1) {
     (string) (len=11) "matchLabels": (map[string]interface {}) (len=2) {
      (string) (len=10) "prometheus": (string) (len=3) "k8s",
      (string) (len=4) "role": (string) (len=11) "alert-rules"
     }
    },
    (string) (len=22) "serviceMonitorSelector": (map[string]interface {}) {
    },
    (string) (len=12) "nodeSelector": (map[string]interface {}) (len=1) {
     (string) (len=4) "role": (string) (len=8) "services"
    },
    (string) (len=23) "additionalScrapeConfigs": (map[string]interface {}) (len=2) {
     (string) (len=4) "name": (string) (len=25) "additional-scrape-configs",
     (string) (len=3) "key": (string) (len=26) "prometheus-additional.yaml"
    },
    (string) (len=27) "podMonitorNamespaceSelector": (map[string]interface {}) {
    },
    (string) (len=31) "serviceMonitorNamespaceSelector": (map[string]interface {}) {
    },
    (string) (len=6) "thanos": (map[string]interface {}) (len=3) {
     (string) (len=9) "baseImage": (string) (len=21) "quay.io/thanos/thanos",
     (string) (len=19) "objectStorageConfig": (map[string]interface {}) (len=2) {
      (string) (len=4) "name": (string) (len=22) "thanos-objstore-config",
      (string) (len=3) "key": (string) (len=11) "thanos.yaml"
     },
     (string) (len=7) "version": (string) (len=7) "v0.16.0"
    },
    (string) (len=4) "name": (string) (len=6) "test-1",
    (string) (len=9) "resources": (map[string]interface {}) (len=2) {
     (string) (len=6) "limits": (map[string]interface {}) (len=2) {
      (string) (len=6) "memory": (string) (len=6) "1024Mi",
      (string) (len=3) "cpu": (string) (len=4) "250m"
     },
     (string) (len=8) "requests": (map[string]interface {}) (len=2) {
      (string) (len=3) "cpu": (string) (len=4) "200m",
      (string) (len=6) "memory": (string) (len=5) "200Mi"
     }
    },
    (string) (len=22) "probeNamespaceSelector": (map[string]interface {}) {
    },
    (string) (len=15) "securityContext": (map[string]interface {}) (len=3) {
     (string) (len=7) "fsGroup": (*big.Float)(0xc000241170)(2000),
     (string) (len=12) "runAsNonRoot": (bool) true,
     (string) (len=9) "runAsUser": (*big.Float)(0xc0002411a0)(1000)
    },
    (string) (len=7) "storage": (map[string]interface {}) (len=1) {
     (string) (len=19) "volumeClaimTemplate": (map[string]interface {}) (len=1) {
      (string) (len=4) "spec": (map[string]interface {}) (len=2) {
       (string) (len=9) "resources": (map[string]interface {}) (len=1) {
        (string) (len=8) "requests": (map[string]interface {}) (len=1) {
         (string) (len=7) "storage": (string) (len=4) "10Gi"
        }
       },
       (string) (len=16) "storageClassName": (string) (len=3) "gp2"
      }
     }
    },
    (string) (len=14) "externalLabels": (map[string]interface {}) (len=2) {
     (string) (len=7) "cluster": (string) (len=12) "my-cluster-2",
     (string) (len=7) "product": (string) (len=13) "api beep boop"
    },
    (string) (len=18) "podMonitorSelector": (map[string]interface {}) {
    },
    (string) (len=7) "version": (string) (len=7) "v2.25.2",
    (string) (len=8) "alerting": (map[string]interface {}) (len=1) {
     (string) (len=13) "alertmanagers": ([]interface {}) (len=1 cap=1) {
      (map[string]interface {}) (len=3) {
       (string) (len=4) "name": (string) (len=17) "alertmanager-main",
       (string) (len=9) "namespace": (string) (len=10) "monitoring",
       (string) (len=4) "port": (string) (len=3) "web"
      }
     }
    }
   },
   (string) (len=10) "apiVersion": (string) (len=24) "monitoring.coreos.com/v1"
  }
 }
}

RAW provider 2021/04/03 23:49:15 [ApplyResourceChange][Request][PriorState]
(cty.Value) {
 ty: (cty.Type) {
  typeImpl: (cty.typeObject) {
   typeImplSigil: (cty.typeImplSigil) {
   },
   AttrTypes: (map[string]cty.Type) (len=3) {
    (string) (len=8) "wait_for": (cty.Type) {
     typeImpl: (cty.typeObject) {
      typeImplSigil: (cty.typeImplSigil) {
      },
      AttrTypes: (map[string]cty.Type) (len=1) {
       (string) (len=6) "fields": (cty.Type) {
        typeImpl: (cty.typeMap) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         ElementTypeT: (cty.Type) {
          typeImpl: (cty.primitiveType) {
           typeImplSigil: (cty.typeImplSigil) {
           },
           Kind: (cty.primitiveTypeKind) 83
          }
         }
        }
       }
      }
     }
    },
    (string) (len=8) "manifest": (cty.Type) {
     typeImpl: (cty.typeObject) {
      typeImplSigil: (cty.typeImplSigil) {
      },
      AttrTypes: (map[string]cty.Type) (len=4) {
       (string) (len=10) "apiVersion": (cty.Type) {
        typeImpl: (cty.primitiveType) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         Kind: (cty.primitiveTypeKind) 83
        }
       },
       (string) (len=4) "kind": (cty.Type) {
        typeImpl: (cty.primitiveType) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         Kind: (cty.primitiveTypeKind) 83
        }
       },
       (string) (len=8) "metadata": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) (len=2) {
          (string) (len=9) "namespace": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=4) "name": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          }
         }
        }
       },
       (string) (len=4) "spec": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) (len=21) {
          (string) (len=31) "serviceMonitorNamespaceSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=9) "namespace": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=12) "ruleSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=1) {
             (string) (len=11) "matchLabels": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=4) "role": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=10) "prometheus": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=9) "resources": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=2) {
             (string) (len=8) "requests": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=3) "cpu": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=6) "memory": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             },
             (string) (len=6) "limits": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=6) "memory": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=3) "cpu": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=8) "replicas": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 78
           }
          },
          (string) (len=14) "externalLabels": (cty.Type) {
           typeImpl: (cty.typeMap) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            ElementTypeT: (cty.Type) {
             typeImpl: (cty.primitiveType) {
              typeImplSigil: (cty.typeImplSigil) {
              },
              Kind: (cty.primitiveTypeKind) 83
             }
            }
           }
          },
          (string) (len=27) "podMonitorNamespaceSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=23) "additionalScrapeConfigs": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=2) {
             (string) (len=3) "key": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             },
             (string) (len=4) "name": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             }
            }
           }
          },
          (string) (len=18) "serviceAccountName": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=13) "probeSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=5) "image": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=15) "securityContext": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=3) {
             (string) (len=7) "fsGroup": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 78
              }
             },
             (string) (len=12) "runAsNonRoot": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 66
              }
             },
             (string) (len=9) "runAsUser": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 78
              }
             }
            }
           }
          },
          (string) (len=4) "name": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=22) "probeNamespaceSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=7) "storage": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=1) {
             (string) (len=19) "volumeClaimTemplate": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=1) {
                (string) (len=4) "spec": (cty.Type) {
                 typeImpl: (cty.typeObject) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  AttrTypes: (map[string]cty.Type) (len=2) {
                   (string) (len=9) "resources": (cty.Type) {
                    typeImpl: (cty.typeObject) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     AttrTypes: (map[string]cty.Type) (len=1) {
                      (string) (len=8) "requests": (cty.Type) {
                       typeImpl: (cty.typeObject) {
                        typeImplSigil: (cty.typeImplSigil) {
                        },
                        AttrTypes: (map[string]cty.Type) (len=1) {
                         (string) (len=7) "storage": (cty.Type) {
                          typeImpl: (cty.primitiveType) {
                           typeImplSigil: (cty.typeImplSigil) {
                           },
                           Kind: (cty.primitiveTypeKind) 83
                          }
                         }
                        }
                       }
                      }
                     }
                    }
                   },
                   (string) (len=16) "storageClassName": (cty.Type) {
                    typeImpl: (cty.primitiveType) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     Kind: (cty.primitiveTypeKind) 83
                    }
                   }
                  }
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=12) "nodeSelector": (cty.Type) {
           typeImpl: (cty.typeMap) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            ElementTypeT: (cty.Type) {
             typeImpl: (cty.primitiveType) {
              typeImplSigil: (cty.typeImplSigil) {
              },
              Kind: (cty.primitiveTypeKind) 83
             }
            }
           }
          },
          (string) (len=22) "serviceMonitorSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=8) "alerting": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=1) {
             (string) (len=13) "alertmanagers": (cty.Type) {
              typeImpl: (cty.typeTuple) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               ElemTypes: ([]cty.Type) (len=1 cap=1) {
                (cty.Type) {
                 typeImpl: (cty.typeObject) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  AttrTypes: (map[string]cty.Type) (len=3) {
                   (string) (len=4) "name": (cty.Type) {
                    typeImpl: (cty.primitiveType) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     Kind: (cty.primitiveTypeKind) 83
                    }
                   },
                   (string) (len=9) "namespace": (cty.Type) {
                    typeImpl: (cty.primitiveType) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     Kind: (cty.primitiveTypeKind) 83
                    }
                   },
                   (string) (len=4) "port": (cty.Type) {
                    typeImpl: (cty.primitiveType) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     Kind: (cty.primitiveTypeKind) 83
                    }
                   }
                  }
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=6) "thanos": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=3) {
             (string) (len=9) "baseImage": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             },
             (string) (len=19) "objectStorageConfig": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=3) "key": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=4) "name": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             },
             (string) (len=7) "version": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             }
            }
           }
          },
          (string) (len=7) "version": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=18) "podMonitorSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          }
         }
        }
       }
      }
     }
    },
    (string) (len=6) "object": (cty.Type) {
     typeImpl: (cty.typeObject) {
      typeImplSigil: (cty.typeImplSigil) {
      },
      AttrTypes: (map[string]cty.Type) (len=4) {
       (string) (len=8) "metadata": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) (len=2) {
          (string) (len=9) "namespace": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=4) "name": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          }
         }
        }
       },
       (string) (len=4) "spec": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) (len=19) {
          (string) (len=8) "alerting": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=1) {
             (string) (len=13) "alertmanagers": (cty.Type) {
              typeImpl: (cty.typeTuple) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               ElemTypes: ([]cty.Type) (len=1 cap=1) {
                (cty.Type) {
                 typeImpl: (cty.typeObject) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  AttrTypes: (map[string]cty.Type) (len=3) {
                   (string) (len=4) "name": (cty.Type) {
                    typeImpl: (cty.primitiveType) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     Kind: (cty.primitiveTypeKind) 83
                    }
                   },
                   (string) (len=9) "namespace": (cty.Type) {
                    typeImpl: (cty.primitiveType) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     Kind: (cty.primitiveTypeKind) 83
                    }
                   },
                   (string) (len=4) "port": (cty.Type) {
                    typeImpl: (cty.primitiveType) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     Kind: (cty.primitiveTypeKind) 83
                    }
                   }
                  }
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=13) "probeSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=23) "additionalScrapeConfigs": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=2) {
             (string) (len=3) "key": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             },
             (string) (len=4) "name": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             }
            }
           }
          },
          (string) (len=9) "resources": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=2) {
             (string) (len=6) "limits": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=3) "cpu": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=6) "memory": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             },
             (string) (len=8) "requests": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=6) "memory": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=3) "cpu": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=12) "ruleSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=1) {
             (string) (len=11) "matchLabels": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=10) "prometheus": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=4) "role": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=15) "securityContext": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=3) {
             (string) (len=7) "fsGroup": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 78
              }
             },
             (string) (len=12) "runAsNonRoot": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 66
              }
             },
             (string) (len=9) "runAsUser": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 78
              }
             }
            }
           }
          },
          (string) (len=18) "serviceAccountName": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=22) "serviceMonitorSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=31) "serviceMonitorNamespaceSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=18) "podMonitorSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=27) "podMonitorNamespaceSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=22) "probeNamespaceSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=7) "version": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=14) "externalLabels": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=2) {
             (string) (len=7) "product": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             },
             (string) (len=7) "cluster": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             }
            }
           }
          },
          (string) (len=6) "thanos": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=3) {
             (string) (len=7) "version": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             },
             (string) (len=9) "baseImage": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             },
             (string) (len=19) "objectStorageConfig": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=3) "key": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=4) "name": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=12) "nodeSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=1) {
             (string) (len=4) "role": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             }
            }
           }
          },
          (string) (len=7) "storage": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=1) {
             (string) (len=19) "volumeClaimTemplate": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=1) {
                (string) (len=4) "spec": (cty.Type) {
                 typeImpl: (cty.typeObject) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  AttrTypes: (map[string]cty.Type) (len=2) {
                   (string) (len=9) "resources": (cty.Type) {
                    typeImpl: (cty.typeObject) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     AttrTypes: (map[string]cty.Type) (len=1) {
                      (string) (len=8) "requests": (cty.Type) {
                       typeImpl: (cty.typeObject) {
                        typeImplSigil: (cty.typeImplSigil) {
                        },
                        AttrTypes: (map[string]cty.Type) (len=1) {
                         (string) (len=7) "storage": (cty.Type) {
                          typeImpl: (cty.primitiveType) {
                           typeImplSigil: (cty.typeImplSigil) {
                           },
                           Kind: (cty.primitiveTypeKind) 83
                          }
                         }
                        }
                       }
                      }
                     }
                    }
                   },
                   (string) (len=16) "storageClassName": (cty.Type) {
                    typeImpl: (cty.primitiveType) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     Kind: (cty.primitiveTypeKind) 83
                    }
                   }
                  }
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=8) "replicas": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 78
           }
          },
          (string) (len=5) "image": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          }
         }
        }
       },
       (string) (len=10) "apiVersion": (cty.Type) {
        typeImpl: (cty.primitiveType) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         Kind: (cty.primitiveTypeKind) 83
        }
       },
       (string) (len=4) "kind": (cty.Type) {
        typeImpl: (cty.primitiveType) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         Kind: (cty.primitiveTypeKind) 83
        }
       }
      }
     }
    }
   }
  }
 },
 v: (map[string]interface {}) (len=3) {
  (string) (len=6) "object": (map[string]interface {}) (len=4) {
   (string) (len=4) "spec": (map[string]interface {}) (len=19) {
    (string) (len=5) "image": (string) (len=37) "quay.io/prometheus/prometheus:v2.25.2",
    (string) (len=18) "podMonitorSelector": (map[string]interface {}) {
    },
    (string) (len=15) "securityContext": (map[string]interface {}) (len=3) {
     (string) (len=12) "runAsNonRoot": (bool) true,
     (string) (len=9) "runAsUser": (*big.Float)(0xc0003b9f80)(1000),
     (string) (len=7) "fsGroup": (*big.Float)(0xc0003b9f50)(2000)
    },
    (string) (len=9) "resources": (map[string]interface {}) (len=2) {
     (string) (len=6) "limits": (map[string]interface {}) (len=2) {
      (string) (len=6) "memory": (string) (len=5) "512Mi",
      (string) (len=3) "cpu": (string) (len=4) "250m"
     },
     (string) (len=8) "requests": (map[string]interface {}) (len=2) {
      (string) (len=6) "memory": (string) (len=5) "200Mi",
      (string) (len=3) "cpu": (string) (len=4) "200m"
     }
    },
    (string) (len=22) "serviceMonitorSelector": (map[string]interface {}) {
    },
    (string) (len=7) "storage": (map[string]interface {}) (len=1) {
     (string) (len=19) "volumeClaimTemplate": (map[string]interface {}) (len=1) {
      (string) (len=4) "spec": (map[string]interface {}) (len=2) {
       (string) (len=9) "resources": (map[string]interface {}) (len=1) {
        (string) (len=8) "requests": (map[string]interface {}) (len=1) {
         (string) (len=7) "storage": (string) (len=4) "10Gi"
        }
       },
       (string) (len=16) "storageClassName": (string) (len=3) "gp2"
      }
     }
    },
    (string) (len=8) "alerting": (map[string]interface {}) (len=1) {
     (string) (len=13) "alertmanagers": ([]interface {}) (len=1 cap=1) {
      (map[string]interface {}) (len=3) {
       (string) (len=4) "name": (string) (len=17) "alertmanager-main",
       (string) (len=9) "namespace": (string) (len=10) "monitoring",
       (string) (len=4) "port": (string) (len=3) "web"
      }
     }
    },
    (string) (len=14) "externalLabels": (map[string]interface {}) (len=2) {
     (string) (len=7) "cluster": (string) (len=12) "my-cluster-2",
     (string) (len=7) "product": (string) (len=13) "api beep boop"
    },
    (string) (len=31) "serviceMonitorNamespaceSelector": (map[string]interface {}) {
    },
    (string) (len=7) "version": (string) (len=7) "v2.25.2",
    (string) (len=13) "probeSelector": (map[string]interface {}) {
    },
    (string) (len=12) "nodeSelector": (map[string]interface {}) (len=1) {
     (string) (len=4) "role": (string) (len=8) "services"
    },
    (string) (len=12) "ruleSelector": (map[string]interface {}) (len=1) {
     (string) (len=11) "matchLabels": (map[string]interface {}) (len=2) {
      (string) (len=4) "role": (string) (len=11) "alert-rules",
      (string) (len=10) "prometheus": (string) (len=3) "k8s"
     }
    },
    (string) (len=18) "serviceAccountName": (string) (len=14) "prometheus-k8s",
    (string) (len=22) "probeNamespaceSelector": (map[string]interface {}) {
    },
    (string) (len=6) "thanos": (map[string]interface {}) (len=3) {
     (string) (len=9) "baseImage": (string) (len=21) "quay.io/thanos/thanos",
     (string) (len=19) "objectStorageConfig": (map[string]interface {}) (len=2) {
      (string) (len=3) "key": (string) (len=11) "thanos.yaml",
      (string) (len=4) "name": (string) (len=22) "thanos-objstore-config"
     },
     (string) (len=7) "version": (string) (len=7) "v0.16.0"
    },
    (string) (len=27) "podMonitorNamespaceSelector": (map[string]interface {}) {
    },
    (string) (len=23) "additionalScrapeConfigs": (map[string]interface {}) (len=2) {
     (string) (len=3) "key": (string) (len=26) "prometheus-additional.yaml",
     (string) (len=4) "name": (string) (len=25) "additional-scrape-configs"
    },
    (string) (len=8) "replicas": (*big.Float)(0xc0003b9d40)(1)
   },
   (string) (len=10) "apiVersion": (string) (len=24) "monitoring.coreos.com/v1",
   (string) (len=4) "kind": (string) (len=10) "Prometheus",
   (string) (len=8) "metadata": (map[string]interface {}) (len=2) {
    (string) (len=4) "name": (string) (len=6) "test-1",
    (string) (len=9) "namespace": (string) (len=15) "test-operator-1"
   }
  },
  (string) (len=8) "wait_for": (interface {}) <nil>,
  (string) (len=8) "manifest": (map[string]interface {}) (len=4) {
   (string) (len=10) "apiVersion": (string) (len=24) "monitoring.coreos.com/v1",
   (string) (len=4) "kind": (string) (len=10) "Prometheus",
   (string) (len=8) "metadata": (map[string]interface {}) (len=2) {
    (string) (len=9) "namespace": (string) (len=15) "test-operator-1",
    (string) (len=4) "name": (string) (len=6) "test-1"
   },
   (string) (len=4) "spec": (map[string]interface {}) (len=21) {
    (string) (len=23) "additionalScrapeConfigs": (map[string]interface {}) (len=2) {
     (string) (len=3) "key": (string) (len=26) "prometheus-additional.yaml",
     (string) (len=4) "name": (string) (len=25) "additional-scrape-configs"
    },
    (string) (len=8) "replicas": (*big.Float)(0xc000387500)(1),
    (string) (len=12) "nodeSelector": (map[string]interface {}) (len=1) {
     (string) (len=4) "role": (string) (len=8) "services"
    },
    (string) (len=13) "probeSelector": (map[string]interface {}) {
    },
    (string) (len=8) "alerting": (map[string]interface {}) (len=1) {
     (string) (len=13) "alertmanagers": ([]interface {}) (len=1 cap=1) {
      (map[string]interface {}) (len=3) {
       (string) (len=4) "name": (string) (len=17) "alertmanager-main",
       (string) (len=9) "namespace": (string) (len=10) "monitoring",
       (string) (len=4) "port": (string) (len=3) "web"
      }
     }
    },
    (string) (len=7) "storage": (map[string]interface {}) (len=1) {
     (string) (len=19) "volumeClaimTemplate": (map[string]interface {}) (len=1) {
      (string) (len=4) "spec": (map[string]interface {}) (len=2) {
       (string) (len=9) "resources": (map[string]interface {}) (len=1) {
        (string) (len=8) "requests": (map[string]interface {}) (len=1) {
         (string) (len=7) "storage": (string) (len=4) "10Gi"
        }
       },
       (string) (len=16) "storageClassName": (string) (len=3) "gp2"
      }
     }
    },
    (string) (len=7) "version": (string) (len=7) "v2.25.2",
    (string) (len=12) "ruleSelector": (map[string]interface {}) (len=1) {
     (string) (len=11) "matchLabels": (map[string]interface {}) (len=2) {
      (string) (len=10) "prometheus": (string) (len=3) "k8s",
      (string) (len=4) "role": (string) (len=11) "alert-rules"
     }
    },
    (string) (len=14) "externalLabels": (map[string]interface {}) (len=2) {
     (string) (len=7) "cluster": (string) (len=12) "my-cluster-2",
     (string) (len=7) "product": (string) (len=13) "api beep boop"
    },
    (string) (len=5) "image": (string) (len=37) "quay.io/prometheus/prometheus:v2.25.2",
    (string) (len=22) "serviceMonitorSelector": (map[string]interface {}) {
    },
    (string) (len=15) "securityContext": (map[string]interface {}) (len=3) {
     (string) (len=7) "fsGroup": (*big.Float)(0xc000387710)(2000),
     (string) (len=12) "runAsNonRoot": (bool) true,
     (string) (len=9) "runAsUser": (*big.Float)(0xc000387740)(1000)
    },
    (string) (len=18) "serviceAccountName": (string) (len=14) "prometheus-k8s",
    (string) (len=31) "serviceMonitorNamespaceSelector": (map[string]interface {}) {
    },
    (string) (len=9) "namespace": (string) (len=15) "test-operator-1",
    (string) (len=27) "podMonitorNamespaceSelector": (map[string]interface {}) {
    },
    (string) (len=4) "name": (string) (len=6) "test-1",
    (string) (len=18) "podMonitorSelector": (map[string]interface {}) {
    },
    (string) (len=9) "resources": (map[string]interface {}) (len=2) {
     (string) (len=6) "limits": (map[string]interface {}) (len=2) {
      (string) (len=3) "cpu": (string) (len=4) "250m",
      (string) (len=6) "memory": (string) (len=5) "512Mi"
     },
     (string) (len=8) "requests": (map[string]interface {}) (len=2) {
      (string) (len=6) "memory": (string) (len=5) "200Mi",
      (string) (len=3) "cpu": (string) (len=4) "200m"
     }
    },
    (string) (len=22) "probeNamespaceSelector": (map[string]interface {}) {
    },
    (string) (len=6) "thanos": (map[string]interface {}) (len=3) {
     (string) (len=9) "baseImage": (string) (len=21) "quay.io/thanos/thanos",
     (string) (len=19) "objectStorageConfig": (map[string]interface {}) (len=2) {
      (string) (len=3) "key": (string) (len=11) "thanos.yaml",
      (string) (len=4) "name": (string) (len=22) "thanos-objstore-config"
     },
     (string) (len=7) "version": (string) (len=7) "v0.16.0"
    }
   }
  }
 }
}

RAW provider 2021/04/03 23:49:15 [ApplyResourceChange][Request][PlannedPrivate]
([]uint8) <nil>

RAW provider 2021/04/03 23:49:15 [ApplyResourceChange][Update] API response:
(*unstructured.Unstructured)(0xc00048c100)({
 Object: (map[string]interface {}) (len=4) {
  (string) (len=10) "apiVersion": (string) (len=24) "monitoring.coreos.com/v1",
  (string) (len=4) "kind": (string) (len=10) "Prometheus",
  (string) (len=8) "metadata": (map[string]interface {}) (len=8) {
   (string) (len=3) "uid": (string) (len=36) "4fb61a0d-9f19-4b6d-8d53-45d2b4f903b7",
   (string) (len=17) "creationTimestamp": (string) (len=20) "2021-04-04T03:45:15Z",
   (string) (len=10) "generation": (int64) 2,
   (string) (len=13) "managedFields": ([]interface {}) (len=1 cap=1) {
    (map[string]interface {}) (len=6) {
     (string) (len=8) "fieldsV1": (map[string]interface {}) (len=1) {
      (string) (len=6) "f:spec": (map[string]interface {}) (len=20) {
       (string) (len=16) "f:externalLabels": (map[string]interface {}) (len=3) {
        (string) (len=1) ".": (map[string]interface {}) {
        },
        (string) (len=9) "f:cluster": (map[string]interface {}) {
        },
        (string) (len=9) "f:product": (map[string]interface {}) {
        }
       },
       (string) (len=24) "f:probeNamespaceSelector": (map[string]interface {}) {
       },
       (string) (len=9) "f:storage": (map[string]interface {}) (len=2) {
        (string) (len=1) ".": (map[string]interface {}) {
        },
        (string) (len=21) "f:volumeClaimTemplate": (map[string]interface {}) (len=2) {
         (string) (len=1) ".": (map[string]interface {}) {
         },
         (string) (len=6) "f:spec": (map[string]interface {}) (len=3) {
          (string) (len=1) ".": (map[string]interface {}) {
          },
          (string) (len=11) "f:resources": (map[string]interface {}) (len=2) {
           (string) (len=10) "f:requests": (map[string]interface {}) (len=2) {
            (string) (len=1) ".": (map[string]interface {}) {
            },
            (string) (len=9) "f:storage": (map[string]interface {}) {
            }
           },
           (string) (len=1) ".": (map[string]interface {}) {
           }
          },
          (string) (len=18) "f:storageClassName": (map[string]interface {}) {
          }
         }
        }
       },
       (string) (len=8) "f:thanos": (map[string]interface {}) (len=4) {
        (string) (len=11) "f:baseImage": (map[string]interface {}) {
        },
        (string) (len=21) "f:objectStorageConfig": (map[string]interface {}) (len=3) {
         (string) (len=1) ".": (map[string]interface {}) {
         },
         (string) (len=5) "f:key": (map[string]interface {}) {
         },
         (string) (len=6) "f:name": (map[string]interface {}) {
         }
        },
        (string) (len=9) "f:version": (map[string]interface {}) {
        },
        (string) (len=1) ".": (map[string]interface {}) {
        }
       },
       (string) (len=14) "f:nodeSelector": (map[string]interface {}) (len=2) {
        (string) (len=1) ".": (map[string]interface {}) {
        },
        (string) (len=6) "f:role": (map[string]interface {}) {
        }
       },
       (string) (len=15) "f:probeSelector": (map[string]interface {}) {
       },
       (string) (len=10) "f:replicas": (map[string]interface {}) {
       },
       (string) (len=11) "f:resources": (map[string]interface {}) (len=3) {
        (string) (len=8) "f:limits": (map[string]interface {}) (len=3) {
         (string) (len=5) "f:cpu": (map[string]interface {}) {
         },
         (string) (len=8) "f:memory": (map[string]interface {}) {
         },
         (string) (len=1) ".": (map[string]interface {}) {
         }
        },
        (string) (len=10) "f:requests": (map[string]interface {}) (len=3) {
         (string) (len=5) "f:cpu": (map[string]interface {}) {
         },
         (string) (len=8) "f:memory": (map[string]interface {}) {
         },
         (string) (len=1) ".": (map[string]interface {}) {
         }
        },
        (string) (len=1) ".": (map[string]interface {}) {
        }
       },
       (string) (len=14) "f:ruleSelector": (map[string]interface {}) (len=2) {
        (string) (len=1) ".": (map[string]interface {}) {
        },
        (string) (len=13) "f:matchLabels": (map[string]interface {}) (len=3) {
         (string) (len=6) "f:role": (map[string]interface {}) {
         },
         (string) (len=1) ".": (map[string]interface {}) {
         },
         (string) (len=12) "f:prometheus": (map[string]interface {}) {
         }
        }
       },
       (string) (len=20) "f:serviceAccountName": (map[string]interface {}) {
       },
       (string) (len=9) "f:version": (map[string]interface {}) {
       },
       (string) (len=25) "f:additionalScrapeConfigs": (map[string]interface {}) (len=3) {
        (string) (len=1) ".": (map[string]interface {}) {
        },
        (string) (len=5) "f:key": (map[string]interface {}) {
        },
        (string) (len=6) "f:name": (map[string]interface {}) {
        }
       },
       (string) (len=7) "f:image": (map[string]interface {}) {
       },
       (string) (len=29) "f:podMonitorNamespaceSelector": (map[string]interface {}) {
       },
       (string) (len=20) "f:podMonitorSelector": (map[string]interface {}) {
       },
       (string) (len=17) "f:securityContext": (map[string]interface {}) (len=4) {
        (string) (len=9) "f:fsGroup": (map[string]interface {}) {
        },
        (string) (len=14) "f:runAsNonRoot": (map[string]interface {}) {
        },
        (string) (len=11) "f:runAsUser": (map[string]interface {}) {
        },
        (string) (len=1) ".": (map[string]interface {}) {
        }
       },
       (string) (len=1) ".": (map[string]interface {}) {
       },
       (string) (len=10) "f:alerting": (map[string]interface {}) (len=2) {
        (string) (len=1) ".": (map[string]interface {}) {
        },
        (string) (len=15) "f:alertmanagers": (map[string]interface {}) {
        }
       },
       (string) (len=33) "f:serviceMonitorNamespaceSelector": (map[string]interface {}) {
       },
       (string) (len=24) "f:serviceMonitorSelector": (map[string]interface {}) {
       }
      }
     },
     (string) (len=7) "manager": (string) (len=9) "Terraform",
     (string) (len=9) "operation": (string) (len=5) "Apply",
     (string) (len=4) "time": (string) (len=20) "2021-04-04T03:49:15Z",
     (string) (len=10) "apiVersion": (string) (len=24) "monitoring.coreos.com/v1",
     (string) (len=10) "fieldsType": (string) (len=8) "FieldsV1"
    }
   },
   (string) (len=4) "name": (string) (len=6) "test-1",
   (string) (len=9) "namespace": (string) (len=15) "test-operator-1",
   (string) (len=15) "resourceVersion": (string) (len=8) "50991628",
   (string) (len=8) "selfLink": (string) (len=77) "/apis/monitoring.coreos.com/v1/namespaces/test-operator-1/prometheuses/test-1"
  },
  (string) (len=4) "spec": (map[string]interface {}) (len=19) {
   (string) (len=8) "alerting": (map[string]interface {}) (len=1) {
    (string) (len=13) "alertmanagers": ([]interface {}) (len=1 cap=1) {
     (map[string]interface {}) (len=3) {
      (string) (len=9) "namespace": (string) (len=10) "monitoring",
      (string) (len=4) "port": (string) (len=3) "web",
      (string) (len=4) "name": (string) (len=17) "alertmanager-main"
     }
    }
   },
   (string) (len=22) "probeNamespaceSelector": (map[string]interface {}) {
   },
   (string) (len=12) "ruleSelector": (map[string]interface {}) (len=1) {
    (string) (len=11) "matchLabels": (map[string]interface {}) (len=2) {
     (string) (len=10) "prometheus": (string) (len=3) "k8s",
     (string) (len=4) "role": (string) (len=11) "alert-rules"
    }
   },
   (string) (len=7) "version": (string) (len=7) "v2.25.2",
   (string) (len=7) "storage": (map[string]interface {}) (len=1) {
    (string) (len=19) "volumeClaimTemplate": (map[string]interface {}) (len=1) {
     (string) (len=4) "spec": (map[string]interface {}) (len=2) {
      (string) (len=9) "resources": (map[string]interface {}) (len=1) {
       (string) (len=8) "requests": (map[string]interface {}) (len=1) {
        (string) (len=7) "storage": (string) (len=4) "10Gi"
       }
      },
      (string) (len=16) "storageClassName": (string) (len=3) "gp2"
     }
    }
   },
   (string) (len=12) "nodeSelector": (map[string]interface {}) (len=1) {
    (string) (len=4) "role": (string) (len=8) "services"
   },
   (string) (len=18) "podMonitorSelector": (map[string]interface {}) {
   },
   (string) (len=13) "probeSelector": (map[string]interface {}) {
   },
   (string) (len=8) "replicas": (int64) 1,
   (string) (len=15) "securityContext": (map[string]interface {}) (len=3) {
    (string) (len=7) "fsGroup": (int64) 2000,
    (string) (len=12) "runAsNonRoot": (bool) true,
    (string) (len=9) "runAsUser": (int64) 1000
   },
   (string) (len=18) "serviceAccountName": (string) (len=14) "prometheus-k8s",
   (string) (len=14) "externalLabels": (map[string]interface {}) (len=2) {
    (string) (len=7) "cluster": (string) (len=12) "my-cluster-2",
    (string) (len=7) "product": (string) (len=13) "api beep boop"
   },
   (string) (len=5) "image": (string) (len=37) "quay.io/prometheus/prometheus:v2.25.2",
   (string) (len=27) "podMonitorNamespaceSelector": (map[string]interface {}) {
   },
   (string) (len=31) "serviceMonitorNamespaceSelector": (map[string]interface {}) {
   },
   (string) (len=6) "thanos": (map[string]interface {}) (len=3) {
    (string) (len=9) "baseImage": (string) (len=21) "quay.io/thanos/thanos",
    (string) (len=19) "objectStorageConfig": (map[string]interface {}) (len=2) {
     (string) (len=3) "key": (string) (len=11) "thanos.yaml",
     (string) (len=4) "name": (string) (len=22) "thanos-objstore-config"
    },
    (string) (len=7) "version": (string) (len=7) "v0.16.0"
   },
   (string) (len=23) "additionalScrapeConfigs": (map[string]interface {}) (len=2) {
    (string) (len=3) "key": (string) (len=26) "prometheus-additional.yaml",
    (string) (len=4) "name": (string) (len=25) "additional-scrape-configs"
   },
   (string) (len=9) "resources": (map[string]interface {}) (len=2) {
    (string) (len=6) "limits": (map[string]interface {}) (len=2) {
     (string) (len=3) "cpu": (string) (len=4) "250m",
     (string) (len=6) "memory": (string) (len=6) "1024Mi"
    },
    (string) (len=8) "requests": (map[string]interface {}) (len=2) {
     (string) (len=3) "cpu": (string) (len=4) "200m",
     (string) (len=6) "memory": (string) (len=5) "200Mi"
    }
   },
   (string) (len=22) "serviceMonitorSelector": (map[string]interface {}) {
   }
  }
 }
})

RAW provider 2021/04/03 23:49:15 [ApplyResourceChange][Update] transformed response:
(cty.Value) {
 ty: (cty.Type) {
  typeImpl: (cty.typeObject) {
   typeImplSigil: (cty.typeImplSigil) {
   },
   AttrTypes: (map[string]cty.Type) (len=4) {
    (string) (len=10) "apiVersion": (cty.Type) {
     typeImpl: (cty.primitiveType) {
      typeImplSigil: (cty.typeImplSigil) {
      },
      Kind: (cty.primitiveTypeKind) 83
     }
    },
    (string) (len=4) "kind": (cty.Type) {
     typeImpl: (cty.primitiveType) {
      typeImplSigil: (cty.typeImplSigil) {
      },
      Kind: (cty.primitiveTypeKind) 83
     }
    },
    (string) (len=8) "metadata": (cty.Type) {
     typeImpl: (cty.typeObject) {
      typeImplSigil: (cty.typeImplSigil) {
      },
      AttrTypes: (map[string]cty.Type) (len=2) {
       (string) (len=4) "name": (cty.Type) {
        typeImpl: (cty.primitiveType) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         Kind: (cty.primitiveTypeKind) 83
        }
       },
       (string) (len=9) "namespace": (cty.Type) {
        typeImpl: (cty.primitiveType) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         Kind: (cty.primitiveTypeKind) 83
        }
       }
      }
     }
    },
    (string) (len=4) "spec": (cty.Type) {
     typeImpl: (cty.typeObject) {
      typeImplSigil: (cty.typeImplSigil) {
      },
      AttrTypes: (map[string]cty.Type) (len=19) {
       (string) (len=6) "thanos": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) (len=3) {
          (string) (len=7) "version": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=9) "baseImage": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=19) "objectStorageConfig": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=2) {
             (string) (len=3) "key": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             },
             (string) (len=4) "name": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             }
            }
           }
          }
         }
        }
       },
       (string) (len=12) "ruleSelector": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) (len=1) {
          (string) (len=11) "matchLabels": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=2) {
             (string) (len=10) "prometheus": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             },
             (string) (len=4) "role": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             }
            }
           }
          }
         }
        }
       },
       (string) (len=14) "externalLabels": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) (len=2) {
          (string) (len=7) "cluster": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=7) "product": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          }
         }
        }
       },
       (string) (len=7) "storage": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) (len=1) {
          (string) (len=19) "volumeClaimTemplate": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=1) {
             (string) (len=4) "spec": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=16) "storageClassName": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=9) "resources": (cty.Type) {
                 typeImpl: (cty.typeObject) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  AttrTypes: (map[string]cty.Type) (len=1) {
                   (string) (len=8) "requests": (cty.Type) {
                    typeImpl: (cty.typeObject) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     AttrTypes: (map[string]cty.Type) (len=1) {
                      (string) (len=7) "storage": (cty.Type) {
                       typeImpl: (cty.primitiveType) {
                        typeImplSigil: (cty.typeImplSigil) {
                        },
                        Kind: (cty.primitiveTypeKind) 83
                       }
                      }
                     }
                    }
                   }
                  }
                 }
                }
               }
              }
             }
            }
           }
          }
         }
        }
       },
       (string) (len=22) "probeNamespaceSelector": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) {
         }
        }
       },
       (string) (len=5) "image": (cty.Type) {
        typeImpl: (cty.primitiveType) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         Kind: (cty.primitiveTypeKind) 83
        }
       },
       (string) (len=8) "replicas": (cty.Type) {
        typeImpl: (cty.primitiveType) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         Kind: (cty.primitiveTypeKind) 78
        }
       },
       (string) (len=31) "serviceMonitorNamespaceSelector": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) {
         }
        }
       },
       (string) (len=12) "nodeSelector": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) (len=1) {
          (string) (len=4) "role": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          }
         }
        }
       },
       (string) (len=23) "additionalScrapeConfigs": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) (len=2) {
          (string) (len=3) "key": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=4) "name": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          }
         }
        }
       },
       (string) (len=8) "alerting": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) (len=1) {
          (string) (len=13) "alertmanagers": (cty.Type) {
           typeImpl: (cty.typeTuple) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            ElemTypes: ([]cty.Type) (len=1 cap=1) {
             (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=3) {
                (string) (len=4) "name": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=9) "namespace": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=4) "port": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             }
            }
           }
          }
         }
        }
       },
       (string) (len=18) "serviceAccountName": (cty.Type) {
        typeImpl: (cty.primitiveType) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         Kind: (cty.primitiveTypeKind) 83
        }
       },
       (string) (len=13) "probeSelector": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) {
         }
        }
       },
       (string) (len=18) "podMonitorSelector": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) {
         }
        }
       },
       (string) (len=27) "podMonitorNamespaceSelector": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) {
         }
        }
       },
       (string) (len=22) "serviceMonitorSelector": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) {
         }
        }
       },
       (string) (len=15) "securityContext": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) (len=3) {
          (string) (len=12) "runAsNonRoot": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 66
           }
          },
          (string) (len=9) "runAsUser": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 78
           }
          },
          (string) (len=7) "fsGroup": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 78
           }
          }
         }
        }
       },
       (string) (len=9) "resources": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) (len=2) {
          (string) (len=6) "limits": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=2) {
             (string) (len=3) "cpu": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             },
             (string) (len=6) "memory": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             }
            }
           }
          },
          (string) (len=8) "requests": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=2) {
             (string) (len=3) "cpu": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             },
             (string) (len=6) "memory": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             }
            }
           }
          }
         }
        }
       },
       (string) (len=7) "version": (cty.Type) {
        typeImpl: (cty.primitiveType) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         Kind: (cty.primitiveTypeKind) 83
        }
       }
      }
     }
    }
   }
  }
 },
 v: (map[string]interface {}) (len=4) {
  (string) (len=8) "metadata": (map[string]interface {}) (len=2) {
   (string) (len=4) "name": (string) (len=6) "test-1",
   (string) (len=9) "namespace": (string) (len=15) "test-operator-1"
  },
  (string) (len=4) "spec": (map[string]interface {}) (len=19) {
   (string) (len=18) "serviceAccountName": (string) (len=14) "prometheus-k8s",
   (string) (len=23) "additionalScrapeConfigs": (map[string]interface {}) (len=2) {
    (string) (len=3) "key": (string) (len=26) "prometheus-additional.yaml",
    (string) (len=4) "name": (string) (len=25) "additional-scrape-configs"
   },
   (string) (len=14) "externalLabels": (map[string]interface {}) (len=2) {
    (string) (len=7) "cluster": (string) (len=12) "my-cluster-2",
    (string) (len=7) "product": (string) (len=13) "api beep boop"
   },
   (string) (len=7) "version": (string) (len=7) "v2.25.2",
   (string) (len=15) "securityContext": (map[string]interface {}) (len=3) {
    (string) (len=7) "fsGroup": (*big.Float)(0xc000712b40)(2000),
    (string) (len=12) "runAsNonRoot": (bool) true,
    (string) (len=9) "runAsUser": (*big.Float)(0xc000712bd0)(1000)
   },
   (string) (len=12) "nodeSelector": (map[string]interface {}) (len=1) {
    (string) (len=4) "role": (string) (len=8) "services"
   },
   (string) (len=12) "ruleSelector": (map[string]interface {}) (len=1) {
    (string) (len=11) "matchLabels": (map[string]interface {}) (len=2) {
     (string) (len=10) "prometheus": (string) (len=3) "k8s",
     (string) (len=4) "role": (string) (len=11) "alert-rules"
    }
   },
   (string) (len=7) "storage": (map[string]interface {}) (len=1) {
    (string) (len=19) "volumeClaimTemplate": (map[string]interface {}) (len=1) {
     (string) (len=4) "spec": (map[string]interface {}) (len=2) {
      (string) (len=9) "resources": (map[string]interface {}) (len=1) {
       (string) (len=8) "requests": (map[string]interface {}) (len=1) {
        (string) (len=7) "storage": (string) (len=4) "10Gi"
       }
      },
      (string) (len=16) "storageClassName": (string) (len=3) "gp2"
     }
    }
   },
   (string) (len=8) "alerting": (map[string]interface {}) (len=1) {
    (string) (len=13) "alertmanagers": ([]interface {}) (len=1 cap=1) {
     (map[string]interface {}) (len=3) {
      (string) (len=4) "port": (string) (len=3) "web",
      (string) (len=4) "name": (string) (len=17) "alertmanager-main",
      (string) (len=9) "namespace": (string) (len=10) "monitoring"
     }
    }
   },
   (string) (len=8) "replicas": (*big.Float)(0xc000469980)(1),
   (string) (len=6) "thanos": (map[string]interface {}) (len=3) {
    (string) (len=19) "objectStorageConfig": (map[string]interface {}) (len=2) {
     (string) (len=3) "key": (string) (len=11) "thanos.yaml",
     (string) (len=4) "name": (string) (len=22) "thanos-objstore-config"
    },
    (string) (len=7) "version": (string) (len=7) "v0.16.0",
    (string) (len=9) "baseImage": (string) (len=21) "quay.io/thanos/thanos"
   },
   (string) (len=9) "resources": (map[string]interface {}) (len=2) {
    (string) (len=6) "limits": (map[string]interface {}) (len=2) {
     (string) (len=6) "memory": (string) (len=6) "1024Mi",
     (string) (len=3) "cpu": (string) (len=4) "250m"
    },
    (string) (len=8) "requests": (map[string]interface {}) (len=2) {
     (string) (len=3) "cpu": (string) (len=4) "200m",
     (string) (len=6) "memory": (string) (len=5) "200Mi"
    }
   },
   (string) (len=22) "serviceMonitorSelector": (map[string]interface {}) {
   },
   (string) (len=27) "podMonitorNamespaceSelector": (map[string]interface {}) {
   },
   (string) (len=5) "image": (string) (len=37) "quay.io/prometheus/prometheus:v2.25.2",
   (string) (len=31) "serviceMonitorNamespaceSelector": (map[string]interface {}) {
   },
   (string) (len=13) "probeSelector": (map[string]interface {}) {
   },
   (string) (len=18) "podMonitorSelector": (map[string]interface {}) {
   },
   (string) (len=22) "probeNamespaceSelector": (map[string]interface {}) {
   }
  },
  (string) (len=10) "apiVersion": (string) (len=24) "monitoring.coreos.com/v1",
  (string) (len=4) "kind": (string) (len=10) "Prometheus"
 }
}
RAW provider 2021/04/03 23:49:15 [ApplyResourceChange][Update] transformed new state:
(cty.Value) {
 ty: (cty.Type) {
  typeImpl: (cty.typeObject) {
   typeImplSigil: (cty.typeImplSigil) {
   },
   AttrTypes: (map[string]cty.Type) (len=3) {
    (string) (len=6) "object": (cty.Type) {
     typeImpl: (cty.typeObject) {
      typeImplSigil: (cty.typeImplSigil) {
      },
      AttrTypes: (map[string]cty.Type) (len=4) {
       (string) (len=4) "kind": (cty.Type) {
        typeImpl: (cty.primitiveType) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         Kind: (cty.primitiveTypeKind) 83
        }
       },
       (string) (len=8) "metadata": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) (len=2) {
          (string) (len=4) "name": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=9) "namespace": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          }
         }
        }
       },
       (string) (len=4) "spec": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) (len=19) {
          (string) (len=7) "storage": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=1) {
             (string) (len=19) "volumeClaimTemplate": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=1) {
                (string) (len=4) "spec": (cty.Type) {
                 typeImpl: (cty.typeObject) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  AttrTypes: (map[string]cty.Type) (len=2) {
                   (string) (len=16) "storageClassName": (cty.Type) {
                    typeImpl: (cty.primitiveType) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     Kind: (cty.primitiveTypeKind) 83
                    }
                   },
                   (string) (len=9) "resources": (cty.Type) {
                    typeImpl: (cty.typeObject) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     AttrTypes: (map[string]cty.Type) (len=1) {
                      (string) (len=8) "requests": (cty.Type) {
                       typeImpl: (cty.typeObject) {
                        typeImplSigil: (cty.typeImplSigil) {
                        },
                        AttrTypes: (map[string]cty.Type) (len=1) {
                         (string) (len=7) "storage": (cty.Type) {
                          typeImpl: (cty.primitiveType) {
                           typeImplSigil: (cty.typeImplSigil) {
                           },
                           Kind: (cty.primitiveTypeKind) 83
                          }
                         }
                        }
                       }
                      }
                     }
                    }
                   }
                  }
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=22) "probeNamespaceSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=5) "image": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=8) "replicas": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 78
           }
          },
          (string) (len=31) "serviceMonitorNamespaceSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=12) "nodeSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=1) {
             (string) (len=4) "role": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             }
            }
           }
          },
          (string) (len=23) "additionalScrapeConfigs": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=2) {
             (string) (len=3) "key": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             },
             (string) (len=4) "name": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             }
            }
           }
          },
          (string) (len=8) "alerting": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=1) {
             (string) (len=13) "alertmanagers": (cty.Type) {
              typeImpl: (cty.typeTuple) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               ElemTypes: ([]cty.Type) (len=1 cap=1) {
                (cty.Type) {
                 typeImpl: (cty.typeObject) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  AttrTypes: (map[string]cty.Type) (len=3) {
                   (string) (len=4) "port": (cty.Type) {
                    typeImpl: (cty.primitiveType) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     Kind: (cty.primitiveTypeKind) 83
                    }
                   },
                   (string) (len=4) "name": (cty.Type) {
                    typeImpl: (cty.primitiveType) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     Kind: (cty.primitiveTypeKind) 83
                    }
                   },
                   (string) (len=9) "namespace": (cty.Type) {
                    typeImpl: (cty.primitiveType) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     Kind: (cty.primitiveTypeKind) 83
                    }
                   }
                  }
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=18) "serviceAccountName": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=13) "probeSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=18) "podMonitorSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=27) "podMonitorNamespaceSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=22) "serviceMonitorSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=15) "securityContext": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=3) {
             (string) (len=12) "runAsNonRoot": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 66
              }
             },
             (string) (len=9) "runAsUser": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 78
              }
             },
             (string) (len=7) "fsGroup": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 78
              }
             }
            }
           }
          },
          (string) (len=9) "resources": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=2) {
             (string) (len=8) "requests": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=3) "cpu": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=6) "memory": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             },
             (string) (len=6) "limits": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=3) "cpu": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=6) "memory": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=7) "version": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=6) "thanos": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=3) {
             (string) (len=7) "version": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             },
             (string) (len=9) "baseImage": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             },
             (string) (len=19) "objectStorageConfig": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=3) "key": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=4) "name": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=12) "ruleSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=1) {
             (string) (len=11) "matchLabels": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=10) "prometheus": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=4) "role": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=14) "externalLabels": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=2) {
             (string) (len=7) "cluster": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             },
             (string) (len=7) "product": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             }
            }
           }
          }
         }
        }
       },
       (string) (len=10) "apiVersion": (cty.Type) {
        typeImpl: (cty.primitiveType) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         Kind: (cty.primitiveTypeKind) 83
        }
       }
      }
     }
    },
    (string) (len=8) "wait_for": (cty.Type) {
     typeImpl: (cty.typeObject) {
      typeImplSigil: (cty.typeImplSigil) {
      },
      AttrTypes: (map[string]cty.Type) (len=1) {
       (string) (len=6) "fields": (cty.Type) {
        typeImpl: (cty.typeMap) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         ElementTypeT: (cty.Type) {
          typeImpl: (cty.primitiveType) {
           typeImplSigil: (cty.typeImplSigil) {
           },
           Kind: (cty.primitiveTypeKind) 83
          }
         }
        }
       }
      }
     }
    },
    (string) (len=8) "manifest": (cty.Type) {
     typeImpl: (cty.typeObject) {
      typeImplSigil: (cty.typeImplSigil) {
      },
      AttrTypes: (map[string]cty.Type) (len=4) {
       (string) (len=4) "kind": (cty.Type) {
        typeImpl: (cty.primitiveType) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         Kind: (cty.primitiveTypeKind) 83
        }
       },
       (string) (len=8) "metadata": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) (len=2) {
          (string) (len=4) "name": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=9) "namespace": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          }
         }
        }
       },
       (string) (len=4) "spec": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) (len=21) {
          (string) (len=7) "version": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=12) "ruleSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=1) {
             (string) (len=11) "matchLabels": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=4) "role": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=10) "prometheus": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=18) "serviceAccountName": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=8) "alerting": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=1) {
             (string) (len=13) "alertmanagers": (cty.Type) {
              typeImpl: (cty.typeTuple) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               ElemTypes: ([]cty.Type) (len=1 cap=1) {
                (cty.Type) {
                 typeImpl: (cty.typeObject) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  AttrTypes: (map[string]cty.Type) (len=3) {
                   (string) (len=4) "name": (cty.Type) {
                    typeImpl: (cty.primitiveType) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     Kind: (cty.primitiveTypeKind) 83
                    }
                   },
                   (string) (len=9) "namespace": (cty.Type) {
                    typeImpl: (cty.primitiveType) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     Kind: (cty.primitiveTypeKind) 83
                    }
                   },
                   (string) (len=4) "port": (cty.Type) {
                    typeImpl: (cty.primitiveType) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     Kind: (cty.primitiveTypeKind) 83
                    }
                   }
                  }
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=13) "probeSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=31) "serviceMonitorNamespaceSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=14) "externalLabels": (cty.Type) {
           typeImpl: (cty.typeMap) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            ElementTypeT: (cty.Type) {
             typeImpl: (cty.primitiveType) {
              typeImplSigil: (cty.typeImplSigil) {
              },
              Kind: (cty.primitiveTypeKind) 83
             }
            }
           }
          },
          (string) (len=12) "nodeSelector": (cty.Type) {
           typeImpl: (cty.typeMap) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            ElementTypeT: (cty.Type) {
             typeImpl: (cty.primitiveType) {
              typeImplSigil: (cty.typeImplSigil) {
              },
              Kind: (cty.primitiveTypeKind) 83
             }
            }
           }
          },
          (string) (len=6) "thanos": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=3) {
             (string) (len=7) "version": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             },
             (string) (len=9) "baseImage": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             },
             (string) (len=19) "objectStorageConfig": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=4) "name": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=3) "key": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=5) "image": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=18) "podMonitorSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=7) "storage": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=1) {
             (string) (len=19) "volumeClaimTemplate": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=1) {
                (string) (len=4) "spec": (cty.Type) {
                 typeImpl: (cty.typeObject) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  AttrTypes: (map[string]cty.Type) (len=2) {
                   (string) (len=9) "resources": (cty.Type) {
                    typeImpl: (cty.typeObject) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     AttrTypes: (map[string]cty.Type) (len=1) {
                      (string) (len=8) "requests": (cty.Type) {
                       typeImpl: (cty.typeObject) {
                        typeImplSigil: (cty.typeImplSigil) {
                        },
                        AttrTypes: (map[string]cty.Type) (len=1) {
                         (string) (len=7) "storage": (cty.Type) {
                          typeImpl: (cty.primitiveType) {
                           typeImplSigil: (cty.typeImplSigil) {
                           },
                           Kind: (cty.primitiveTypeKind) 83
                          }
                         }
                        }
                       }
                      }
                     }
                    }
                   },
                   (string) (len=16) "storageClassName": (cty.Type) {
                    typeImpl: (cty.primitiveType) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     Kind: (cty.primitiveTypeKind) 83
                    }
                   }
                  }
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=9) "namespace": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=4) "name": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=22) "probeNamespaceSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=22) "serviceMonitorSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=15) "securityContext": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=3) {
             (string) (len=9) "runAsUser": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 78
              }
             },
             (string) (len=7) "fsGroup": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 78
              }
             },
             (string) (len=12) "runAsNonRoot": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 66
              }
             }
            }
           }
          },
          (string) (len=9) "resources": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=2) {
             (string) (len=8) "requests": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=3) "cpu": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=6) "memory": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             },
             (string) (len=6) "limits": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=3) "cpu": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=6) "memory": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=27) "podMonitorNamespaceSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=23) "additionalScrapeConfigs": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=2) {
             (string) (len=3) "key": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             },
             (string) (len=4) "name": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             }
            }
           }
          },
          (string) (len=8) "replicas": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 78
           }
          }
         }
        }
       },
       (string) (len=10) "apiVersion": (cty.Type) {
        typeImpl: (cty.primitiveType) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         Kind: (cty.primitiveTypeKind) 83
        }
       }
      }
     }
    }
   }
  }
 },
 v: (map[string]interface {}) (len=3) {
  (string) (len=8) "manifest": (map[string]interface {}) (len=4) {
   (string) (len=4) "spec": (map[string]interface {}) (len=21) {
    (string) (len=7) "version": (string) (len=7) "v2.25.2",
    (string) (len=6) "thanos": (map[string]interface {}) (len=3) {
     (string) (len=19) "objectStorageConfig": (map[string]interface {}) (len=2) {
      (string) (len=3) "key": (string) (len=11) "thanos.yaml",
      (string) (len=4) "name": (string) (len=22) "thanos-objstore-config"
     },
     (string) (len=7) "version": (string) (len=7) "v0.16.0",
     (string) (len=9) "baseImage": (string) (len=21) "quay.io/thanos/thanos"
    },
    (string) (len=5) "image": (string) (len=37) "quay.io/prometheus/prometheus:v2.25.2",
    (string) (len=18) "serviceAccountName": (string) (len=14) "prometheus-k8s",
    (string) (len=22) "serviceMonitorSelector": (map[string]interface {}) {
    },
    (string) (len=13) "probeSelector": (map[string]interface {}) {
    },
    (string) (len=15) "securityContext": (map[string]interface {}) (len=3) {
     (string) (len=12) "runAsNonRoot": (bool) true,
     (string) (len=9) "runAsUser": (*big.Float)(0xc0002411a0)(1000),
     (string) (len=7) "fsGroup": (*big.Float)(0xc000241170)(2000)
    },
    (string) (len=12) "ruleSelector": (map[string]interface {}) (len=1) {
     (string) (len=11) "matchLabels": (map[string]interface {}) (len=2) {
      (string) (len=10) "prometheus": (string) (len=3) "k8s",
      (string) (len=4) "role": (string) (len=11) "alert-rules"
     }
    },
    (string) (len=31) "serviceMonitorNamespaceSelector": (map[string]interface {}) {
    },
    (string) (len=4) "name": (string) (len=6) "test-1",
    (string) (len=18) "podMonitorSelector": (map[string]interface {}) {
    },
    (string) (len=8) "alerting": (map[string]interface {}) (len=1) {
     (string) (len=13) "alertmanagers": ([]interface {}) (len=1 cap=1) {
      (map[string]interface {}) (len=3) {
       (string) (len=4) "name": (string) (len=17) "alertmanager-main",
       (string) (len=9) "namespace": (string) (len=10) "monitoring",
       (string) (len=4) "port": (string) (len=3) "web"
      }
     }
    },
    (string) (len=22) "probeNamespaceSelector": (map[string]interface {}) {
    },
    (string) (len=27) "podMonitorNamespaceSelector": (map[string]interface {}) {
    },
    (string) (len=23) "additionalScrapeConfigs": (map[string]interface {}) (len=2) {
     (string) (len=3) "key": (string) (len=26) "prometheus-additional.yaml",
     (string) (len=4) "name": (string) (len=25) "additional-scrape-configs"
    },
    (string) (len=9) "namespace": (string) (len=15) "test-operator-1",
    (string) (len=12) "nodeSelector": (map[string]interface {}) (len=1) {
     (string) (len=4) "role": (string) (len=8) "services"
    },
    (string) (len=8) "replicas": (*big.Float)(0xc000240f60)(1),
    (string) (len=7) "storage": (map[string]interface {}) (len=1) {
     (string) (len=19) "volumeClaimTemplate": (map[string]interface {}) (len=1) {
      (string) (len=4) "spec": (map[string]interface {}) (len=2) {
       (string) (len=16) "storageClassName": (string) (len=3) "gp2",
       (string) (len=9) "resources": (map[string]interface {}) (len=1) {
        (string) (len=8) "requests": (map[string]interface {}) (len=1) {
         (string) (len=7) "storage": (string) (len=4) "10Gi"
        }
       }
      }
     }
    },
    (string) (len=9) "resources": (map[string]interface {}) (len=2) {
     (string) (len=8) "requests": (map[string]interface {}) (len=2) {
      (string) (len=3) "cpu": (string) (len=4) "200m",
      (string) (len=6) "memory": (string) (len=5) "200Mi"
     },
     (string) (len=6) "limits": (map[string]interface {}) (len=2) {
      (string) (len=3) "cpu": (string) (len=4) "250m",
      (string) (len=6) "memory": (string) (len=6) "1024Mi"
     }
    },
    (string) (len=14) "externalLabels": (map[string]interface {}) (len=2) {
     (string) (len=7) "product": (string) (len=13) "api beep boop",
     (string) (len=7) "cluster": (string) (len=12) "my-cluster-2"
    }
   },
   (string) (len=10) "apiVersion": (string) (len=24) "monitoring.coreos.com/v1",
   (string) (len=4) "kind": (string) (len=10) "Prometheus",
   (string) (len=8) "metadata": (map[string]interface {}) (len=2) {
    (string) (len=4) "name": (string) (len=6) "test-1",
    (string) (len=9) "namespace": (string) (len=15) "test-operator-1"
   }
  },
  (string) (len=6) "object": (map[string]interface {}) (len=4) {
   (string) (len=8) "metadata": (map[string]interface {}) (len=2) {
    (string) (len=4) "name": (string) (len=6) "test-1",
    (string) (len=9) "namespace": (string) (len=15) "test-operator-1"
   },
   (string) (len=4) "spec": (map[string]interface {}) (len=19) {
    (string) (len=12) "nodeSelector": (map[string]interface {}) (len=1) {
     (string) (len=4) "role": (string) (len=8) "services"
    },
    (string) (len=18) "serviceAccountName": (string) (len=14) "prometheus-k8s",
    (string) (len=23) "additionalScrapeConfigs": (map[string]interface {}) (len=2) {
     (string) (len=4) "name": (string) (len=25) "additional-scrape-configs",
     (string) (len=3) "key": (string) (len=26) "prometheus-additional.yaml"
    },
    (string) (len=14) "externalLabels": (map[string]interface {}) (len=2) {
     (string) (len=7) "cluster": (string) (len=12) "my-cluster-2",
     (string) (len=7) "product": (string) (len=13) "api beep boop"
    },
    (string) (len=7) "version": (string) (len=7) "v2.25.2",
    (string) (len=15) "securityContext": (map[string]interface {}) (len=3) {
     (string) (len=7) "fsGroup": (*big.Float)(0xc000712b40)(2000),
     (string) (len=12) "runAsNonRoot": (bool) true,
     (string) (len=9) "runAsUser": (*big.Float)(0xc000712bd0)(1000)
    },
    (string) (len=8) "replicas": (*big.Float)(0xc000469980)(1),
    (string) (len=12) "ruleSelector": (map[string]interface {}) (len=1) {
     (string) (len=11) "matchLabels": (map[string]interface {}) (len=2) {
      (string) (len=10) "prometheus": (string) (len=3) "k8s",
      (string) (len=4) "role": (string) (len=11) "alert-rules"
     }
    },
    (string) (len=7) "storage": (map[string]interface {}) (len=1) {
     (string) (len=19) "volumeClaimTemplate": (map[string]interface {}) (len=1) {
      (string) (len=4) "spec": (map[string]interface {}) (len=2) {
       (string) (len=9) "resources": (map[string]interface {}) (len=1) {
        (string) (len=8) "requests": (map[string]interface {}) (len=1) {
         (string) (len=7) "storage": (string) (len=4) "10Gi"
        }
       },
       (string) (len=16) "storageClassName": (string) (len=3) "gp2"
      }
     }
    },
    (string) (len=8) "alerting": (map[string]interface {}) (len=1) {
     (string) (len=13) "alertmanagers": ([]interface {}) (len=1 cap=1) {
      (map[string]interface {}) (len=3) {
       (string) (len=4) "name": (string) (len=17) "alertmanager-main",
       (string) (len=9) "namespace": (string) (len=10) "monitoring",
       (string) (len=4) "port": (string) (len=3) "web"
      }
     }
    },
    (string) (len=13) "probeSelector": (map[string]interface {}) {
    },
    (string) (len=18) "podMonitorSelector": (map[string]interface {}) {
    },
    (string) (len=6) "thanos": (map[string]interface {}) (len=3) {
     (string) (len=19) "objectStorageConfig": (map[string]interface {}) (len=2) {
      (string) (len=3) "key": (string) (len=11) "thanos.yaml",
      (string) (len=4) "name": (string) (len=22) "thanos-objstore-config"
     },
     (string) (len=7) "version": (string) (len=7) "v0.16.0",
     (string) (len=9) "baseImage": (string) (len=21) "quay.io/thanos/thanos"
    },
    (string) (len=9) "resources": (map[string]interface {}) (len=2) {
     (string) (len=6) "limits": (map[string]interface {}) (len=2) {
      (string) (len=3) "cpu": (string) (len=4) "250m",
      (string) (len=6) "memory": (string) (len=6) "1024Mi"
     },
     (string) (len=8) "requests": (map[string]interface {}) (len=2) {
      (string) (len=3) "cpu": (string) (len=4) "200m",
      (string) (len=6) "memory": (string) (len=5) "200Mi"
     }
    },
    (string) (len=22) "serviceMonitorSelector": (map[string]interface {}) {
    },
    (string) (len=27) "podMonitorNamespaceSelector": (map[string]interface {}) {
    },
    (string) (len=5) "image": (string) (len=37) "quay.io/prometheus/prometheus:v2.25.2",
    (string) (len=31) "serviceMonitorNamespaceSelector": (map[string]interface {}) {
    },
    (string) (len=22) "probeNamespaceSelector": (map[string]interface {}) {
    }
   },
   (string) (len=10) "apiVersion": (string) (len=24) "monitoring.coreos.com/v1",
   (string) (len=4) "kind": (string) (len=10) "Prometheus"
  },
  (string) (len=8) "wait_for": (interface {}) <nil>
 }
}
RAW provider 2021/04/03 23:49:15 Finished
RAW provider 2021/04/03 23:52:11 Starting up with command line: []string{".terraform/providers/registry.terraform.io/hashicorp/kubernetes-alpha/0.2.1/darwin_amd64/terraform-provider-kubernetes-alpha_v0.2.1_x5"}
RAW provider 2021/04/03 23:52:11 Finished
RAW provider 2021/04/03 23:52:11 Starting up with command line: []string{".terraform/providers/registry.terraform.io/hashicorp/kubernetes-alpha/0.2.1/darwin_amd64/terraform-provider-kubernetes-alpha_v0.2.1_x5"}
RAW provider 2021/04/03 23:52:11 Finished
RAW provider 2021/04/03 23:52:13 Starting up with command line: []string{".terraform/providers/registry.terraform.io/hashicorp/kubernetes-alpha/0.2.1/darwin_amd64/terraform-provider-kubernetes-alpha_v0.2.1_x5"}
RAW provider 2021/04/03 23:52:13 [Configure][ClientConfig] (rest.Config) &rest.Config{Host:"https://5BE469949E293A3A880C6FE683A7079F.gr7.us-east-1.eks.amazonaws.com", APIPath:"", ContentConfig:rest.ContentConfig{AcceptContentTypes:"", ContentType:"", GroupVersion:(*schema.GroupVersion)(nil), NegotiatedSerializer:runtime.NegotiatedSerializer(nil)}, Username:"", Password:"", BearerToken:"--- REDACTED ---", BearerTokenFile:"", Impersonate:rest.ImpersonationConfig{UserName:"", Groups:[]string(nil), Extra:map[string][]string(nil)}, AuthProvider:<nil>, AuthConfigPersister:rest.AuthProviderConfigPersister(nil), ExecProvider:<nil>, TLSClientConfig:rest.sanitizedTLSClientConfig{Insecure:false, ServerName:"", CertFile:"", KeyFile:"", CAFile:"", CertData:[]uint8(nil), KeyData:[]uint8(nil), CAData:[]uint8{0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x42, 0x45, 0x47, 0x49, 0x4e, 0x20, 0x43, 0x45, 0x52, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x45, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0xa, 0x4d, 0x49, 0x49, 0x43, 0x79, 0x44, 0x43, 0x43, 0x41, 0x62, 0x43, 0x67, 0x41, 0x77, 0x49, 0x42, 0x41, 0x67, 0x49, 0x42, 0x41, 0x44, 0x41, 0x4e, 0x42, 0x67, 0x6b, 0x71, 0x68, 0x6b, 0x69, 0x47, 0x39, 0x77, 0x30, 0x42, 0x41, 0x51, 0x73, 0x46, 0x41, 0x44, 0x41, 0x56, 0x4d, 0x52, 0x4d, 0x77, 0x45, 0x51, 0x59, 0x44, 0x56, 0x51, 0x51, 0x44, 0x45, 0x77, 0x70, 0x72, 0x64, 0x57, 0x4a, 0x6c, 0xa, 0x63, 0x6d, 0x35, 0x6c, 0x64, 0x47, 0x56, 0x7a, 0x4d, 0x42, 0x34, 0x58, 0x44, 0x54, 0x49, 0x77, 0x4d, 0x54, 0x41, 0x79, 0x4d, 0x54, 0x49, 0x78, 0x4e, 0x44, 0x63, 0x77, 0x4e, 0x46, 0x6f, 0x58, 0x44, 0x54, 0x4d, 0x77, 0x4d, 0x54, 0x41, 0x78, 0x4f, 0x54, 0x49, 0x78, 0x4e, 0x44, 0x63, 0x77, 0x4e, 0x46, 0x6f, 0x77, 0x46, 0x54, 0x45, 0x54, 0x4d, 0x42, 0x45, 0x47, 0x41, 0x31, 0x55, 0x45, 0xa, 0x41, 0x78, 0x4d, 0x4b, 0x61, 0x33, 0x56, 0x69, 0x5a, 0x58, 0x4a, 0x75, 0x5a, 0x58, 0x52, 0x6c, 0x63, 0x7a, 0x43, 0x43, 0x41, 0x53, 0x49, 0x77, 0x44, 0x51, 0x59, 0x4a, 0x4b, 0x6f, 0x5a, 0x49, 0x68, 0x76, 0x63, 0x4e, 0x41, 0x51, 0x45, 0x42, 0x42, 0x51, 0x41, 0x44, 0x67, 0x67, 0x45, 0x50, 0x41, 0x44, 0x43, 0x43, 0x41, 0x51, 0x6f, 0x43, 0x67, 0x67, 0x45, 0x42, 0x41, 0x4c, 0x42, 0x62, 0xa, 0x50, 0x46, 0x2b, 0x39, 0x30, 0x52, 0x6f, 0x67, 0x48, 0x58, 0x41, 0x79, 0x46, 0x56, 0x74, 0x41, 0x2b, 0x7a, 0x43, 0x46, 0x6d, 0x33, 0x56, 0x53, 0x31, 0x61, 0x59, 0x59, 0x79, 0x4c, 0x7a, 0x2f, 0x32, 0x51, 0x48, 0x76, 0x37, 0x4a, 0x65, 0x45, 0x48, 0x71, 0x49, 0x77, 0x66, 0x63, 0x75, 0x7a, 0x56, 0x71, 0x58, 0x38, 0x66, 0x4b, 0x70, 0x33, 0x68, 0x4c, 0x79, 0x79, 0x62, 0x6b, 0x2f, 0x64, 0xa, 0x55, 0x47, 0x49, 0x45, 0x41, 0x30, 0x75, 0x54, 0x6a, 0x4c, 0x67, 0x67, 0x71, 0x66, 0x66, 0x6f, 0x65, 0x6f, 0x31, 0x38, 0x7a, 0x35, 0x48, 0x4a, 0x6e, 0x73, 0x41, 0x6f, 0x6b, 0x43, 0x38, 0x64, 0x7a, 0x70, 0x5a, 0x43, 0x6b, 0x67, 0x31, 0x73, 0x78, 0x45, 0x79, 0x62, 0x2f, 0x2b, 0x39, 0x6d, 0x31, 0x69, 0x49, 0x67, 0x56, 0x33, 0x59, 0x39, 0x74, 0x48, 0x44, 0x45, 0x59, 0x4a, 0x6c, 0x37, 0xa, 0x56, 0x77, 0x51, 0x68, 0x70, 0x38, 0x48, 0x6e, 0x33, 0x46, 0x49, 0x2f, 0x4a, 0x63, 0x77, 0x44, 0x49, 0x6b, 0x55, 0x36, 0x45, 0x6a, 0x65, 0x46, 0x30, 0x71, 0x4c, 0x4b, 0x42, 0x75, 0x54, 0x31, 0x6e, 0x66, 0x45, 0x74, 0x6f, 0x68, 0x54, 0x4e, 0x37, 0x78, 0x70, 0x4e, 0x43, 0x76, 0x44, 0x61, 0x36, 0x44, 0x53, 0x32, 0x4c, 0x54, 0x57, 0x39, 0x6f, 0x6e, 0x74, 0x6d, 0x4b, 0x79, 0x45, 0x47, 0xa, 0x78, 0x6c, 0x73, 0x78, 0x74, 0x6b, 0x64, 0x47, 0x45, 0x37, 0x79, 0x55, 0x55, 0x67, 0x77, 0x52, 0x53, 0x72, 0x79, 0x6a, 0x41, 0x65, 0x76, 0x41, 0x79, 0x5a, 0x64, 0x37, 0x71, 0x45, 0x72, 0x67, 0x74, 0x41, 0x56, 0x6c, 0x35, 0x70, 0x44, 0x46, 0x48, 0x30, 0x74, 0x42, 0x48, 0x53, 0x74, 0x67, 0x6b, 0x41, 0x51, 0x59, 0x57, 0x48, 0x77, 0x78, 0x62, 0x62, 0x79, 0x70, 0x59, 0x37, 0x33, 0x4c, 0xa, 0x5a, 0x43, 0x51, 0x73, 0x2b, 0x4c, 0x35, 0x44, 0x6d, 0x67, 0x2f, 0x43, 0x6e, 0x57, 0x31, 0x75, 0x62, 0x47, 0x46, 0x32, 0x59, 0x75, 0x47, 0x33, 0x79, 0x46, 0x59, 0x4b, 0x31, 0x6c, 0x32, 0x4e, 0x46, 0x78, 0x2f, 0x74, 0x67, 0x48, 0x71, 0x4e, 0x78, 0x56, 0x48, 0x6a, 0x31, 0x53, 0x42, 0x5a, 0x32, 0x41, 0x54, 0x76, 0x61, 0x4b, 0x47, 0x6f, 0x6c, 0x56, 0x35, 0x53, 0x69, 0x57, 0x33, 0x49, 0xa, 0x68, 0x45, 0x46, 0x46, 0x2b, 0x77, 0x4b, 0x50, 0x73, 0x63, 0x46, 0x59, 0x4f, 0x49, 0x76, 0x53, 0x4d, 0x44, 0x38, 0x43, 0x41, 0x77, 0x45, 0x41, 0x41, 0x61, 0x4d, 0x6a, 0x4d, 0x43, 0x45, 0x77, 0x44, 0x67, 0x59, 0x44, 0x56, 0x52, 0x30, 0x50, 0x41, 0x51, 0x48, 0x2f, 0x42, 0x41, 0x51, 0x44, 0x41, 0x67, 0x4b, 0x6b, 0x4d, 0x41, 0x38, 0x47, 0x41, 0x31, 0x55, 0x64, 0x45, 0x77, 0x45, 0x42, 0xa, 0x2f, 0x77, 0x51, 0x46, 0x4d, 0x41, 0x4d, 0x42, 0x41, 0x66, 0x38, 0x77, 0x44, 0x51, 0x59, 0x4a, 0x4b, 0x6f, 0x5a, 0x49, 0x68, 0x76, 0x63, 0x4e, 0x41, 0x51, 0x45, 0x4c, 0x42, 0x51, 0x41, 0x44, 0x67, 0x67, 0x45, 0x42, 0x41, 0x46, 0x2b, 0x59, 0x44, 0x46, 0x31, 0x4e, 0x4b, 0x65, 0x6f, 0x41, 0x38, 0x49, 0x72, 0x65, 0x4f, 0x78, 0x4d, 0x2f, 0x4f, 0x45, 0x59, 0x70, 0x54, 0x44, 0x6a, 0x76, 0xa, 0x50, 0x64, 0x55, 0x69, 0x31, 0x61, 0x37, 0x79, 0x75, 0x74, 0x2b, 0x30, 0x39, 0x37, 0x70, 0x36, 0x6f, 0x2f, 0x32, 0x41, 0x53, 0x35, 0x56, 0x52, 0x6a, 0x70, 0x32, 0x57, 0x55, 0x7a, 0x72, 0x4b, 0x79, 0x73, 0x57, 0x75, 0x65, 0x74, 0x55, 0x45, 0x2b, 0x72, 0x6e, 0x41, 0x70, 0x33, 0x39, 0x37, 0x2f, 0x6a, 0x78, 0x75, 0x73, 0x54, 0x78, 0x2f, 0x50, 0x76, 0x58, 0x57, 0x44, 0x34, 0x75, 0x61, 0xa, 0x51, 0x32, 0x7a, 0x49, 0x38, 0x44, 0x59, 0x62, 0x6b, 0x64, 0x75, 0x63, 0x4f, 0x47, 0x67, 0x4a, 0x31, 0x78, 0x61, 0x4e, 0x70, 0x6b, 0x75, 0x62, 0x48, 0x33, 0x64, 0x61, 0x48, 0x59, 0x5a, 0x2b, 0x48, 0x38, 0x71, 0x42, 0x70, 0x2f, 0x74, 0x50, 0x41, 0x42, 0x57, 0x73, 0x32, 0x35, 0x66, 0x78, 0x78, 0x31, 0x53, 0x69, 0x75, 0x38, 0x4e, 0x38, 0x4b, 0x59, 0x4a, 0x2b, 0x32, 0x49, 0x68, 0x75, 0xa, 0x61, 0x64, 0x42, 0x71, 0x61, 0x73, 0x56, 0x4a, 0x6c, 0x79, 0x55, 0x4d, 0x79, 0x50, 0x49, 0x7a, 0x4b, 0x46, 0x36, 0x6e, 0x4c, 0x54, 0x57, 0x66, 0x59, 0x5a, 0x4f, 0x31, 0x76, 0x30, 0x32, 0x36, 0x4b, 0x36, 0x6f, 0x31, 0x63, 0x39, 0x78, 0x63, 0x74, 0x69, 0x77, 0x54, 0x6a, 0x54, 0x59, 0x43, 0x34, 0x7a, 0x38, 0x65, 0x4b, 0x69, 0x41, 0x4c, 0x49, 0x36, 0x33, 0x33, 0x34, 0x74, 0x4e, 0x51, 0xa, 0x33, 0x32, 0x5a, 0x77, 0x4f, 0x75, 0x73, 0x58, 0x6e, 0x4a, 0x33, 0x6b, 0x34, 0x75, 0x42, 0x57, 0x70, 0x79, 0x31, 0x69, 0x39, 0x6f, 0x4e, 0x6b, 0x75, 0x75, 0x48, 0x45, 0x64, 0x69, 0x48, 0x37, 0x36, 0x30, 0x35, 0x4a, 0x31, 0x66, 0x77, 0x57, 0x53, 0x30, 0x63, 0x65, 0x35, 0x67, 0x49, 0x50, 0x35, 0x6a, 0x6e, 0x4e, 0x73, 0x4d, 0x64, 0x61, 0x44, 0x49, 0x2f, 0x39, 0x54, 0x4a, 0x4e, 0x6e, 0xa, 0x70, 0x67, 0x2b, 0x41, 0x58, 0x55, 0x4a, 0x78, 0x46, 0x30, 0x4f, 0x77, 0x50, 0x42, 0x63, 0x45, 0x37, 0x4a, 0x41, 0x43, 0x64, 0x52, 0x6d, 0x58, 0x73, 0x2b, 0x33, 0x78, 0x6c, 0x54, 0x59, 0x4a, 0x76, 0x70, 0x53, 0x75, 0x32, 0x4b, 0x65, 0x6c, 0x4c, 0x55, 0x6a, 0x52, 0x34, 0x5a, 0x4c, 0x72, 0x5a, 0x34, 0x78, 0x39, 0x4c, 0x45, 0x36, 0x54, 0x65, 0x77, 0x34, 0x3d, 0xa, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x45, 0x4e, 0x44, 0x20, 0x43, 0x45, 0x52, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x45, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0xa}, NextProtos:[]string(nil)}, UserAgent:"", DisableCompression:false, Transport:http.RoundTripper(nil), WrapTransport:(transport.WrapperFunc)(nil), QPS:0, Burst:0, RateLimiter:flowcontrol.RateLimiter(nil), Timeout:0, Dial:(func(context.Context, string, string) (net.Conn, error))(nil)}

RAW provider 2021/04/03 23:52:16 Finished
RAW provider 2021/04/03 23:52:16 Starting up with command line: []string{".terraform/providers/registry.terraform.io/hashicorp/kubernetes-alpha/0.2.1/darwin_amd64/terraform-provider-kubernetes-alpha_v0.2.1_x5"}
RAW provider 2021/04/03 23:52:16 [Configure][ClientConfig] (rest.Config) &rest.Config{Host:"https://5BE469949E293A3A880C6FE683A7079F.gr7.us-east-1.eks.amazonaws.com", APIPath:"", ContentConfig:rest.ContentConfig{AcceptContentTypes:"", ContentType:"", GroupVersion:(*schema.GroupVersion)(nil), NegotiatedSerializer:runtime.NegotiatedSerializer(nil)}, Username:"", Password:"", BearerToken:"--- REDACTED ---", BearerTokenFile:"", Impersonate:rest.ImpersonationConfig{UserName:"", Groups:[]string(nil), Extra:map[string][]string(nil)}, AuthProvider:<nil>, AuthConfigPersister:rest.AuthProviderConfigPersister(nil), ExecProvider:<nil>, TLSClientConfig:rest.sanitizedTLSClientConfig{Insecure:false, ServerName:"", CertFile:"", KeyFile:"", CAFile:"", CertData:[]uint8(nil), KeyData:[]uint8(nil), CAData:[]uint8{0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x42, 0x45, 0x47, 0x49, 0x4e, 0x20, 0x43, 0x45, 0x52, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x45, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0xa, 0x4d, 0x49, 0x49, 0x43, 0x79, 0x44, 0x43, 0x43, 0x41, 0x62, 0x43, 0x67, 0x41, 0x77, 0x49, 0x42, 0x41, 0x67, 0x49, 0x42, 0x41, 0x44, 0x41, 0x4e, 0x42, 0x67, 0x6b, 0x71, 0x68, 0x6b, 0x69, 0x47, 0x39, 0x77, 0x30, 0x42, 0x41, 0x51, 0x73, 0x46, 0x41, 0x44, 0x41, 0x56, 0x4d, 0x52, 0x4d, 0x77, 0x45, 0x51, 0x59, 0x44, 0x56, 0x51, 0x51, 0x44, 0x45, 0x77, 0x70, 0x72, 0x64, 0x57, 0x4a, 0x6c, 0xa, 0x63, 0x6d, 0x35, 0x6c, 0x64, 0x47, 0x56, 0x7a, 0x4d, 0x42, 0x34, 0x58, 0x44, 0x54, 0x49, 0x77, 0x4d, 0x54, 0x41, 0x79, 0x4d, 0x54, 0x49, 0x78, 0x4e, 0x44, 0x63, 0x77, 0x4e, 0x46, 0x6f, 0x58, 0x44, 0x54, 0x4d, 0x77, 0x4d, 0x54, 0x41, 0x78, 0x4f, 0x54, 0x49, 0x78, 0x4e, 0x44, 0x63, 0x77, 0x4e, 0x46, 0x6f, 0x77, 0x46, 0x54, 0x45, 0x54, 0x4d, 0x42, 0x45, 0x47, 0x41, 0x31, 0x55, 0x45, 0xa, 0x41, 0x78, 0x4d, 0x4b, 0x61, 0x33, 0x56, 0x69, 0x5a, 0x58, 0x4a, 0x75, 0x5a, 0x58, 0x52, 0x6c, 0x63, 0x7a, 0x43, 0x43, 0x41, 0x53, 0x49, 0x77, 0x44, 0x51, 0x59, 0x4a, 0x4b, 0x6f, 0x5a, 0x49, 0x68, 0x76, 0x63, 0x4e, 0x41, 0x51, 0x45, 0x42, 0x42, 0x51, 0x41, 0x44, 0x67, 0x67, 0x45, 0x50, 0x41, 0x44, 0x43, 0x43, 0x41, 0x51, 0x6f, 0x43, 0x67, 0x67, 0x45, 0x42, 0x41, 0x4c, 0x42, 0x62, 0xa, 0x50, 0x46, 0x2b, 0x39, 0x30, 0x52, 0x6f, 0x67, 0x48, 0x58, 0x41, 0x79, 0x46, 0x56, 0x74, 0x41, 0x2b, 0x7a, 0x43, 0x46, 0x6d, 0x33, 0x56, 0x53, 0x31, 0x61, 0x59, 0x59, 0x79, 0x4c, 0x7a, 0x2f, 0x32, 0x51, 0x48, 0x76, 0x37, 0x4a, 0x65, 0x45, 0x48, 0x71, 0x49, 0x77, 0x66, 0x63, 0x75, 0x7a, 0x56, 0x71, 0x58, 0x38, 0x66, 0x4b, 0x70, 0x33, 0x68, 0x4c, 0x79, 0x79, 0x62, 0x6b, 0x2f, 0x64, 0xa, 0x55, 0x47, 0x49, 0x45, 0x41, 0x30, 0x75, 0x54, 0x6a, 0x4c, 0x67, 0x67, 0x71, 0x66, 0x66, 0x6f, 0x65, 0x6f, 0x31, 0x38, 0x7a, 0x35, 0x48, 0x4a, 0x6e, 0x73, 0x41, 0x6f, 0x6b, 0x43, 0x38, 0x64, 0x7a, 0x70, 0x5a, 0x43, 0x6b, 0x67, 0x31, 0x73, 0x78, 0x45, 0x79, 0x62, 0x2f, 0x2b, 0x39, 0x6d, 0x31, 0x69, 0x49, 0x67, 0x56, 0x33, 0x59, 0x39, 0x74, 0x48, 0x44, 0x45, 0x59, 0x4a, 0x6c, 0x37, 0xa, 0x56, 0x77, 0x51, 0x68, 0x70, 0x38, 0x48, 0x6e, 0x33, 0x46, 0x49, 0x2f, 0x4a, 0x63, 0x77, 0x44, 0x49, 0x6b, 0x55, 0x36, 0x45, 0x6a, 0x65, 0x46, 0x30, 0x71, 0x4c, 0x4b, 0x42, 0x75, 0x54, 0x31, 0x6e, 0x66, 0x45, 0x74, 0x6f, 0x68, 0x54, 0x4e, 0x37, 0x78, 0x70, 0x4e, 0x43, 0x76, 0x44, 0x61, 0x36, 0x44, 0x53, 0x32, 0x4c, 0x54, 0x57, 0x39, 0x6f, 0x6e, 0x74, 0x6d, 0x4b, 0x79, 0x45, 0x47, 0xa, 0x78, 0x6c, 0x73, 0x78, 0x74, 0x6b, 0x64, 0x47, 0x45, 0x37, 0x79, 0x55, 0x55, 0x67, 0x77, 0x52, 0x53, 0x72, 0x79, 0x6a, 0x41, 0x65, 0x76, 0x41, 0x79, 0x5a, 0x64, 0x37, 0x71, 0x45, 0x72, 0x67, 0x74, 0x41, 0x56, 0x6c, 0x35, 0x70, 0x44, 0x46, 0x48, 0x30, 0x74, 0x42, 0x48, 0x53, 0x74, 0x67, 0x6b, 0x41, 0x51, 0x59, 0x57, 0x48, 0x77, 0x78, 0x62, 0x62, 0x79, 0x70, 0x59, 0x37, 0x33, 0x4c, 0xa, 0x5a, 0x43, 0x51, 0x73, 0x2b, 0x4c, 0x35, 0x44, 0x6d, 0x67, 0x2f, 0x43, 0x6e, 0x57, 0x31, 0x75, 0x62, 0x47, 0x46, 0x32, 0x59, 0x75, 0x47, 0x33, 0x79, 0x46, 0x59, 0x4b, 0x31, 0x6c, 0x32, 0x4e, 0x46, 0x78, 0x2f, 0x74, 0x67, 0x48, 0x71, 0x4e, 0x78, 0x56, 0x48, 0x6a, 0x31, 0x53, 0x42, 0x5a, 0x32, 0x41, 0x54, 0x76, 0x61, 0x4b, 0x47, 0x6f, 0x6c, 0x56, 0x35, 0x53, 0x69, 0x57, 0x33, 0x49, 0xa, 0x68, 0x45, 0x46, 0x46, 0x2b, 0x77, 0x4b, 0x50, 0x73, 0x63, 0x46, 0x59, 0x4f, 0x49, 0x76, 0x53, 0x4d, 0x44, 0x38, 0x43, 0x41, 0x77, 0x45, 0x41, 0x41, 0x61, 0x4d, 0x6a, 0x4d, 0x43, 0x45, 0x77, 0x44, 0x67, 0x59, 0x44, 0x56, 0x52, 0x30, 0x50, 0x41, 0x51, 0x48, 0x2f, 0x42, 0x41, 0x51, 0x44, 0x41, 0x67, 0x4b, 0x6b, 0x4d, 0x41, 0x38, 0x47, 0x41, 0x31, 0x55, 0x64, 0x45, 0x77, 0x45, 0x42, 0xa, 0x2f, 0x77, 0x51, 0x46, 0x4d, 0x41, 0x4d, 0x42, 0x41, 0x66, 0x38, 0x77, 0x44, 0x51, 0x59, 0x4a, 0x4b, 0x6f, 0x5a, 0x49, 0x68, 0x76, 0x63, 0x4e, 0x41, 0x51, 0x45, 0x4c, 0x42, 0x51, 0x41, 0x44, 0x67, 0x67, 0x45, 0x42, 0x41, 0x46, 0x2b, 0x59, 0x44, 0x46, 0x31, 0x4e, 0x4b, 0x65, 0x6f, 0x41, 0x38, 0x49, 0x72, 0x65, 0x4f, 0x78, 0x4d, 0x2f, 0x4f, 0x45, 0x59, 0x70, 0x54, 0x44, 0x6a, 0x76, 0xa, 0x50, 0x64, 0x55, 0x69, 0x31, 0x61, 0x37, 0x79, 0x75, 0x74, 0x2b, 0x30, 0x39, 0x37, 0x70, 0x36, 0x6f, 0x2f, 0x32, 0x41, 0x53, 0x35, 0x56, 0x52, 0x6a, 0x70, 0x32, 0x57, 0x55, 0x7a, 0x72, 0x4b, 0x79, 0x73, 0x57, 0x75, 0x65, 0x74, 0x55, 0x45, 0x2b, 0x72, 0x6e, 0x41, 0x70, 0x33, 0x39, 0x37, 0x2f, 0x6a, 0x78, 0x75, 0x73, 0x54, 0x78, 0x2f, 0x50, 0x76, 0x58, 0x57, 0x44, 0x34, 0x75, 0x61, 0xa, 0x51, 0x32, 0x7a, 0x49, 0x38, 0x44, 0x59, 0x62, 0x6b, 0x64, 0x75, 0x63, 0x4f, 0x47, 0x67, 0x4a, 0x31, 0x78, 0x61, 0x4e, 0x70, 0x6b, 0x75, 0x62, 0x48, 0x33, 0x64, 0x61, 0x48, 0x59, 0x5a, 0x2b, 0x48, 0x38, 0x71, 0x42, 0x70, 0x2f, 0x74, 0x50, 0x41, 0x42, 0x57, 0x73, 0x32, 0x35, 0x66, 0x78, 0x78, 0x31, 0x53, 0x69, 0x75, 0x38, 0x4e, 0x38, 0x4b, 0x59, 0x4a, 0x2b, 0x32, 0x49, 0x68, 0x75, 0xa, 0x61, 0x64, 0x42, 0x71, 0x61, 0x73, 0x56, 0x4a, 0x6c, 0x79, 0x55, 0x4d, 0x79, 0x50, 0x49, 0x7a, 0x4b, 0x46, 0x36, 0x6e, 0x4c, 0x54, 0x57, 0x66, 0x59, 0x5a, 0x4f, 0x31, 0x76, 0x30, 0x32, 0x36, 0x4b, 0x36, 0x6f, 0x31, 0x63, 0x39, 0x78, 0x63, 0x74, 0x69, 0x77, 0x54, 0x6a, 0x54, 0x59, 0x43, 0x34, 0x7a, 0x38, 0x65, 0x4b, 0x69, 0x41, 0x4c, 0x49, 0x36, 0x33, 0x33, 0x34, 0x74, 0x4e, 0x51, 0xa, 0x33, 0x32, 0x5a, 0x77, 0x4f, 0x75, 0x73, 0x58, 0x6e, 0x4a, 0x33, 0x6b, 0x34, 0x75, 0x42, 0x57, 0x70, 0x79, 0x31, 0x69, 0x39, 0x6f, 0x4e, 0x6b, 0x75, 0x75, 0x48, 0x45, 0x64, 0x69, 0x48, 0x37, 0x36, 0x30, 0x35, 0x4a, 0x31, 0x66, 0x77, 0x57, 0x53, 0x30, 0x63, 0x65, 0x35, 0x67, 0x49, 0x50, 0x35, 0x6a, 0x6e, 0x4e, 0x73, 0x4d, 0x64, 0x61, 0x44, 0x49, 0x2f, 0x39, 0x54, 0x4a, 0x4e, 0x6e, 0xa, 0x70, 0x67, 0x2b, 0x41, 0x58, 0x55, 0x4a, 0x78, 0x46, 0x30, 0x4f, 0x77, 0x50, 0x42, 0x63, 0x45, 0x37, 0x4a, 0x41, 0x43, 0x64, 0x52, 0x6d, 0x58, 0x73, 0x2b, 0x33, 0x78, 0x6c, 0x54, 0x59, 0x4a, 0x76, 0x70, 0x53, 0x75, 0x32, 0x4b, 0x65, 0x6c, 0x4c, 0x55, 0x6a, 0x52, 0x34, 0x5a, 0x4c, 0x72, 0x5a, 0x34, 0x78, 0x39, 0x4c, 0x45, 0x36, 0x54, 0x65, 0x77, 0x34, 0x3d, 0xa, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x45, 0x4e, 0x44, 0x20, 0x43, 0x45, 0x52, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x45, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0xa}, NextProtos:[]string(nil)}, UserAgent:"", DisableCompression:false, Transport:http.RoundTripper(nil), WrapTransport:(transport.WrapperFunc)(nil), QPS:0, Burst:0, RateLimiter:flowcontrol.RateLimiter(nil), Timeout:0, Dial:(func(context.Context, string, string) (net.Conn, error))(nil)}

RAW provider 2021/04/03 23:52:16 Finished
RAW provider 2021/04/04 00:02:51 Starting up with command line: []string{".terraform/providers/registry.terraform.io/hashicorp/kubernetes-alpha/0.2.1/darwin_amd64/terraform-provider-kubernetes-alpha_v0.2.1_x5"}
RAW provider 2021/04/04 00:02:51 Finished
RAW provider 2021/04/04 00:02:52 Starting up with command line: []string{".terraform/providers/registry.terraform.io/hashicorp/kubernetes-alpha/0.2.1/darwin_amd64/terraform-provider-kubernetes-alpha_v0.2.1_x5"}
RAW provider 2021/04/04 00:02:52 Finished
RAW provider 2021/04/04 00:02:54 Starting up with command line: []string{".terraform/providers/registry.terraform.io/hashicorp/kubernetes-alpha/0.2.1/darwin_amd64/terraform-provider-kubernetes-alpha_v0.2.1_x5"}
RAW provider 2021/04/04 00:02:55 [Configure][ClientConfig] (rest.Config) &rest.Config{Host:"https://5BE469949E293A3A880C6FE683A7079F.gr7.us-east-1.eks.amazonaws.com", APIPath:"", ContentConfig:rest.ContentConfig{AcceptContentTypes:"", ContentType:"", GroupVersion:(*schema.GroupVersion)(nil), NegotiatedSerializer:runtime.NegotiatedSerializer(nil)}, Username:"", Password:"", BearerToken:"--- REDACTED ---", BearerTokenFile:"", Impersonate:rest.ImpersonationConfig{UserName:"", Groups:[]string(nil), Extra:map[string][]string(nil)}, AuthProvider:<nil>, AuthConfigPersister:rest.AuthProviderConfigPersister(nil), ExecProvider:<nil>, TLSClientConfig:rest.sanitizedTLSClientConfig{Insecure:false, ServerName:"", CertFile:"", KeyFile:"", CAFile:"", CertData:[]uint8(nil), KeyData:[]uint8(nil), CAData:[]uint8{0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x42, 0x45, 0x47, 0x49, 0x4e, 0x20, 0x43, 0x45, 0x52, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x45, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0xa, 0x4d, 0x49, 0x49, 0x43, 0x79, 0x44, 0x43, 0x43, 0x41, 0x62, 0x43, 0x67, 0x41, 0x77, 0x49, 0x42, 0x41, 0x67, 0x49, 0x42, 0x41, 0x44, 0x41, 0x4e, 0x42, 0x67, 0x6b, 0x71, 0x68, 0x6b, 0x69, 0x47, 0x39, 0x77, 0x30, 0x42, 0x41, 0x51, 0x73, 0x46, 0x41, 0x44, 0x41, 0x56, 0x4d, 0x52, 0x4d, 0x77, 0x45, 0x51, 0x59, 0x44, 0x56, 0x51, 0x51, 0x44, 0x45, 0x77, 0x70, 0x72, 0x64, 0x57, 0x4a, 0x6c, 0xa, 0x63, 0x6d, 0x35, 0x6c, 0x64, 0x47, 0x56, 0x7a, 0x4d, 0x42, 0x34, 0x58, 0x44, 0x54, 0x49, 0x77, 0x4d, 0x54, 0x41, 0x79, 0x4d, 0x54, 0x49, 0x78, 0x4e, 0x44, 0x63, 0x77, 0x4e, 0x46, 0x6f, 0x58, 0x44, 0x54, 0x4d, 0x77, 0x4d, 0x54, 0x41, 0x78, 0x4f, 0x54, 0x49, 0x78, 0x4e, 0x44, 0x63, 0x77, 0x4e, 0x46, 0x6f, 0x77, 0x46, 0x54, 0x45, 0x54, 0x4d, 0x42, 0x45, 0x47, 0x41, 0x31, 0x55, 0x45, 0xa, 0x41, 0x78, 0x4d, 0x4b, 0x61, 0x33, 0x56, 0x69, 0x5a, 0x58, 0x4a, 0x75, 0x5a, 0x58, 0x52, 0x6c, 0x63, 0x7a, 0x43, 0x43, 0x41, 0x53, 0x49, 0x77, 0x44, 0x51, 0x59, 0x4a, 0x4b, 0x6f, 0x5a, 0x49, 0x68, 0x76, 0x63, 0x4e, 0x41, 0x51, 0x45, 0x42, 0x42, 0x51, 0x41, 0x44, 0x67, 0x67, 0x45, 0x50, 0x41, 0x44, 0x43, 0x43, 0x41, 0x51, 0x6f, 0x43, 0x67, 0x67, 0x45, 0x42, 0x41, 0x4c, 0x42, 0x62, 0xa, 0x50, 0x46, 0x2b, 0x39, 0x30, 0x52, 0x6f, 0x67, 0x48, 0x58, 0x41, 0x79, 0x46, 0x56, 0x74, 0x41, 0x2b, 0x7a, 0x43, 0x46, 0x6d, 0x33, 0x56, 0x53, 0x31, 0x61, 0x59, 0x59, 0x79, 0x4c, 0x7a, 0x2f, 0x32, 0x51, 0x48, 0x76, 0x37, 0x4a, 0x65, 0x45, 0x48, 0x71, 0x49, 0x77, 0x66, 0x63, 0x75, 0x7a, 0x56, 0x71, 0x58, 0x38, 0x66, 0x4b, 0x70, 0x33, 0x68, 0x4c, 0x79, 0x79, 0x62, 0x6b, 0x2f, 0x64, 0xa, 0x55, 0x47, 0x49, 0x45, 0x41, 0x30, 0x75, 0x54, 0x6a, 0x4c, 0x67, 0x67, 0x71, 0x66, 0x66, 0x6f, 0x65, 0x6f, 0x31, 0x38, 0x7a, 0x35, 0x48, 0x4a, 0x6e, 0x73, 0x41, 0x6f, 0x6b, 0x43, 0x38, 0x64, 0x7a, 0x70, 0x5a, 0x43, 0x6b, 0x67, 0x31, 0x73, 0x78, 0x45, 0x79, 0x62, 0x2f, 0x2b, 0x39, 0x6d, 0x31, 0x69, 0x49, 0x67, 0x56, 0x33, 0x59, 0x39, 0x74, 0x48, 0x44, 0x45, 0x59, 0x4a, 0x6c, 0x37, 0xa, 0x56, 0x77, 0x51, 0x68, 0x70, 0x38, 0x48, 0x6e, 0x33, 0x46, 0x49, 0x2f, 0x4a, 0x63, 0x77, 0x44, 0x49, 0x6b, 0x55, 0x36, 0x45, 0x6a, 0x65, 0x46, 0x30, 0x71, 0x4c, 0x4b, 0x42, 0x75, 0x54, 0x31, 0x6e, 0x66, 0x45, 0x74, 0x6f, 0x68, 0x54, 0x4e, 0x37, 0x78, 0x70, 0x4e, 0x43, 0x76, 0x44, 0x61, 0x36, 0x44, 0x53, 0x32, 0x4c, 0x54, 0x57, 0x39, 0x6f, 0x6e, 0x74, 0x6d, 0x4b, 0x79, 0x45, 0x47, 0xa, 0x78, 0x6c, 0x73, 0x78, 0x74, 0x6b, 0x64, 0x47, 0x45, 0x37, 0x79, 0x55, 0x55, 0x67, 0x77, 0x52, 0x53, 0x72, 0x79, 0x6a, 0x41, 0x65, 0x76, 0x41, 0x79, 0x5a, 0x64, 0x37, 0x71, 0x45, 0x72, 0x67, 0x74, 0x41, 0x56, 0x6c, 0x35, 0x70, 0x44, 0x46, 0x48, 0x30, 0x74, 0x42, 0x48, 0x53, 0x74, 0x67, 0x6b, 0x41, 0x51, 0x59, 0x57, 0x48, 0x77, 0x78, 0x62, 0x62, 0x79, 0x70, 0x59, 0x37, 0x33, 0x4c, 0xa, 0x5a, 0x43, 0x51, 0x73, 0x2b, 0x4c, 0x35, 0x44, 0x6d, 0x67, 0x2f, 0x43, 0x6e, 0x57, 0x31, 0x75, 0x62, 0x47, 0x46, 0x32, 0x59, 0x75, 0x47, 0x33, 0x79, 0x46, 0x59, 0x4b, 0x31, 0x6c, 0x32, 0x4e, 0x46, 0x78, 0x2f, 0x74, 0x67, 0x48, 0x71, 0x4e, 0x78, 0x56, 0x48, 0x6a, 0x31, 0x53, 0x42, 0x5a, 0x32, 0x41, 0x54, 0x76, 0x61, 0x4b, 0x47, 0x6f, 0x6c, 0x56, 0x35, 0x53, 0x69, 0x57, 0x33, 0x49, 0xa, 0x68, 0x45, 0x46, 0x46, 0x2b, 0x77, 0x4b, 0x50, 0x73, 0x63, 0x46, 0x59, 0x4f, 0x49, 0x76, 0x53, 0x4d, 0x44, 0x38, 0x43, 0x41, 0x77, 0x45, 0x41, 0x41, 0x61, 0x4d, 0x6a, 0x4d, 0x43, 0x45, 0x77, 0x44, 0x67, 0x59, 0x44, 0x56, 0x52, 0x30, 0x50, 0x41, 0x51, 0x48, 0x2f, 0x42, 0x41, 0x51, 0x44, 0x41, 0x67, 0x4b, 0x6b, 0x4d, 0x41, 0x38, 0x47, 0x41, 0x31, 0x55, 0x64, 0x45, 0x77, 0x45, 0x42, 0xa, 0x2f, 0x77, 0x51, 0x46, 0x4d, 0x41, 0x4d, 0x42, 0x41, 0x66, 0x38, 0x77, 0x44, 0x51, 0x59, 0x4a, 0x4b, 0x6f, 0x5a, 0x49, 0x68, 0x76, 0x63, 0x4e, 0x41, 0x51, 0x45, 0x4c, 0x42, 0x51, 0x41, 0x44, 0x67, 0x67, 0x45, 0x42, 0x41, 0x46, 0x2b, 0x59, 0x44, 0x46, 0x31, 0x4e, 0x4b, 0x65, 0x6f, 0x41, 0x38, 0x49, 0x72, 0x65, 0x4f, 0x78, 0x4d, 0x2f, 0x4f, 0x45, 0x59, 0x70, 0x54, 0x44, 0x6a, 0x76, 0xa, 0x50, 0x64, 0x55, 0x69, 0x31, 0x61, 0x37, 0x79, 0x75, 0x74, 0x2b, 0x30, 0x39, 0x37, 0x70, 0x36, 0x6f, 0x2f, 0x32, 0x41, 0x53, 0x35, 0x56, 0x52, 0x6a, 0x70, 0x32, 0x57, 0x55, 0x7a, 0x72, 0x4b, 0x79, 0x73, 0x57, 0x75, 0x65, 0x74, 0x55, 0x45, 0x2b, 0x72, 0x6e, 0x41, 0x70, 0x33, 0x39, 0x37, 0x2f, 0x6a, 0x78, 0x75, 0x73, 0x54, 0x78, 0x2f, 0x50, 0x76, 0x58, 0x57, 0x44, 0x34, 0x75, 0x61, 0xa, 0x51, 0x32, 0x7a, 0x49, 0x38, 0x44, 0x59, 0x62, 0x6b, 0x64, 0x75, 0x63, 0x4f, 0x47, 0x67, 0x4a, 0x31, 0x78, 0x61, 0x4e, 0x70, 0x6b, 0x75, 0x62, 0x48, 0x33, 0x64, 0x61, 0x48, 0x59, 0x5a, 0x2b, 0x48, 0x38, 0x71, 0x42, 0x70, 0x2f, 0x74, 0x50, 0x41, 0x42, 0x57, 0x73, 0x32, 0x35, 0x66, 0x78, 0x78, 0x31, 0x53, 0x69, 0x75, 0x38, 0x4e, 0x38, 0x4b, 0x59, 0x4a, 0x2b, 0x32, 0x49, 0x68, 0x75, 0xa, 0x61, 0x64, 0x42, 0x71, 0x61, 0x73, 0x56, 0x4a, 0x6c, 0x79, 0x55, 0x4d, 0x79, 0x50, 0x49, 0x7a, 0x4b, 0x46, 0x36, 0x6e, 0x4c, 0x54, 0x57, 0x66, 0x59, 0x5a, 0x4f, 0x31, 0x76, 0x30, 0x32, 0x36, 0x4b, 0x36, 0x6f, 0x31, 0x63, 0x39, 0x78, 0x63, 0x74, 0x69, 0x77, 0x54, 0x6a, 0x54, 0x59, 0x43, 0x34, 0x7a, 0x38, 0x65, 0x4b, 0x69, 0x41, 0x4c, 0x49, 0x36, 0x33, 0x33, 0x34, 0x74, 0x4e, 0x51, 0xa, 0x33, 0x32, 0x5a, 0x77, 0x4f, 0x75, 0x73, 0x58, 0x6e, 0x4a, 0x33, 0x6b, 0x34, 0x75, 0x42, 0x57, 0x70, 0x79, 0x31, 0x69, 0x39, 0x6f, 0x4e, 0x6b, 0x75, 0x75, 0x48, 0x45, 0x64, 0x69, 0x48, 0x37, 0x36, 0x30, 0x35, 0x4a, 0x31, 0x66, 0x77, 0x57, 0x53, 0x30, 0x63, 0x65, 0x35, 0x67, 0x49, 0x50, 0x35, 0x6a, 0x6e, 0x4e, 0x73, 0x4d, 0x64, 0x61, 0x44, 0x49, 0x2f, 0x39, 0x54, 0x4a, 0x4e, 0x6e, 0xa, 0x70, 0x67, 0x2b, 0x41, 0x58, 0x55, 0x4a, 0x78, 0x46, 0x30, 0x4f, 0x77, 0x50, 0x42, 0x63, 0x45, 0x37, 0x4a, 0x41, 0x43, 0x64, 0x52, 0x6d, 0x58, 0x73, 0x2b, 0x33, 0x78, 0x6c, 0x54, 0x59, 0x4a, 0x76, 0x70, 0x53, 0x75, 0x32, 0x4b, 0x65, 0x6c, 0x4c, 0x55, 0x6a, 0x52, 0x34, 0x5a, 0x4c, 0x72, 0x5a, 0x34, 0x78, 0x39, 0x4c, 0x45, 0x36, 0x54, 0x65, 0x77, 0x34, 0x3d, 0xa, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x45, 0x4e, 0x44, 0x20, 0x43, 0x45, 0x52, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x45, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0xa}, NextProtos:[]string(nil)}, UserAgent:"", DisableCompression:false, Transport:http.RoundTripper(nil), WrapTransport:(transport.WrapperFunc)(nil), QPS:0, Burst:0, RateLimiter:flowcontrol.RateLimiter(nil), Timeout:0, Dial:(func(context.Context, string, string) (net.Conn, error))(nil)}

RAW provider 2021/04/04 00:03:00 Finished
RAW provider 2021/04/04 00:03:00 Starting up with command line: []string{".terraform/providers/registry.terraform.io/hashicorp/kubernetes-alpha/0.2.1/darwin_amd64/terraform-provider-kubernetes-alpha_v0.2.1_x5"}
RAW provider 2021/04/04 00:03:00 [Configure][ClientConfig] (rest.Config) &rest.Config{Host:"https://5BE469949E293A3A880C6FE683A7079F.gr7.us-east-1.eks.amazonaws.com", APIPath:"", ContentConfig:rest.ContentConfig{AcceptContentTypes:"", ContentType:"", GroupVersion:(*schema.GroupVersion)(nil), NegotiatedSerializer:runtime.NegotiatedSerializer(nil)}, Username:"", Password:"", BearerToken:"--- REDACTED ---", BearerTokenFile:"", Impersonate:rest.ImpersonationConfig{UserName:"", Groups:[]string(nil), Extra:map[string][]string(nil)}, AuthProvider:<nil>, AuthConfigPersister:rest.AuthProviderConfigPersister(nil), ExecProvider:<nil>, TLSClientConfig:rest.sanitizedTLSClientConfig{Insecure:false, ServerName:"", CertFile:"", KeyFile:"", CAFile:"", CertData:[]uint8(nil), KeyData:[]uint8(nil), CAData:[]uint8{0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x42, 0x45, 0x47, 0x49, 0x4e, 0x20, 0x43, 0x45, 0x52, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x45, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0xa, 0x4d, 0x49, 0x49, 0x43, 0x79, 0x44, 0x43, 0x43, 0x41, 0x62, 0x43, 0x67, 0x41, 0x77, 0x49, 0x42, 0x41, 0x67, 0x49, 0x42, 0x41, 0x44, 0x41, 0x4e, 0x42, 0x67, 0x6b, 0x71, 0x68, 0x6b, 0x69, 0x47, 0x39, 0x77, 0x30, 0x42, 0x41, 0x51, 0x73, 0x46, 0x41, 0x44, 0x41, 0x56, 0x4d, 0x52, 0x4d, 0x77, 0x45, 0x51, 0x59, 0x44, 0x56, 0x51, 0x51, 0x44, 0x45, 0x77, 0x70, 0x72, 0x64, 0x57, 0x4a, 0x6c, 0xa, 0x63, 0x6d, 0x35, 0x6c, 0x64, 0x47, 0x56, 0x7a, 0x4d, 0x42, 0x34, 0x58, 0x44, 0x54, 0x49, 0x77, 0x4d, 0x54, 0x41, 0x79, 0x4d, 0x54, 0x49, 0x78, 0x4e, 0x44, 0x63, 0x77, 0x4e, 0x46, 0x6f, 0x58, 0x44, 0x54, 0x4d, 0x77, 0x4d, 0x54, 0x41, 0x78, 0x4f, 0x54, 0x49, 0x78, 0x4e, 0x44, 0x63, 0x77, 0x4e, 0x46, 0x6f, 0x77, 0x46, 0x54, 0x45, 0x54, 0x4d, 0x42, 0x45, 0x47, 0x41, 0x31, 0x55, 0x45, 0xa, 0x41, 0x78, 0x4d, 0x4b, 0x61, 0x33, 0x56, 0x69, 0x5a, 0x58, 0x4a, 0x75, 0x5a, 0x58, 0x52, 0x6c, 0x63, 0x7a, 0x43, 0x43, 0x41, 0x53, 0x49, 0x77, 0x44, 0x51, 0x59, 0x4a, 0x4b, 0x6f, 0x5a, 0x49, 0x68, 0x76, 0x63, 0x4e, 0x41, 0x51, 0x45, 0x42, 0x42, 0x51, 0x41, 0x44, 0x67, 0x67, 0x45, 0x50, 0x41, 0x44, 0x43, 0x43, 0x41, 0x51, 0x6f, 0x43, 0x67, 0x67, 0x45, 0x42, 0x41, 0x4c, 0x42, 0x62, 0xa, 0x50, 0x46, 0x2b, 0x39, 0x30, 0x52, 0x6f, 0x67, 0x48, 0x58, 0x41, 0x79, 0x46, 0x56, 0x74, 0x41, 0x2b, 0x7a, 0x43, 0x46, 0x6d, 0x33, 0x56, 0x53, 0x31, 0x61, 0x59, 0x59, 0x79, 0x4c, 0x7a, 0x2f, 0x32, 0x51, 0x48, 0x76, 0x37, 0x4a, 0x65, 0x45, 0x48, 0x71, 0x49, 0x77, 0x66, 0x63, 0x75, 0x7a, 0x56, 0x71, 0x58, 0x38, 0x66, 0x4b, 0x70, 0x33, 0x68, 0x4c, 0x79, 0x79, 0x62, 0x6b, 0x2f, 0x64, 0xa, 0x55, 0x47, 0x49, 0x45, 0x41, 0x30, 0x75, 0x54, 0x6a, 0x4c, 0x67, 0x67, 0x71, 0x66, 0x66, 0x6f, 0x65, 0x6f, 0x31, 0x38, 0x7a, 0x35, 0x48, 0x4a, 0x6e, 0x73, 0x41, 0x6f, 0x6b, 0x43, 0x38, 0x64, 0x7a, 0x70, 0x5a, 0x43, 0x6b, 0x67, 0x31, 0x73, 0x78, 0x45, 0x79, 0x62, 0x2f, 0x2b, 0x39, 0x6d, 0x31, 0x69, 0x49, 0x67, 0x56, 0x33, 0x59, 0x39, 0x74, 0x48, 0x44, 0x45, 0x59, 0x4a, 0x6c, 0x37, 0xa, 0x56, 0x77, 0x51, 0x68, 0x70, 0x38, 0x48, 0x6e, 0x33, 0x46, 0x49, 0x2f, 0x4a, 0x63, 0x77, 0x44, 0x49, 0x6b, 0x55, 0x36, 0x45, 0x6a, 0x65, 0x46, 0x30, 0x71, 0x4c, 0x4b, 0x42, 0x75, 0x54, 0x31, 0x6e, 0x66, 0x45, 0x74, 0x6f, 0x68, 0x54, 0x4e, 0x37, 0x78, 0x70, 0x4e, 0x43, 0x76, 0x44, 0x61, 0x36, 0x44, 0x53, 0x32, 0x4c, 0x54, 0x57, 0x39, 0x6f, 0x6e, 0x74, 0x6d, 0x4b, 0x79, 0x45, 0x47, 0xa, 0x78, 0x6c, 0x73, 0x78, 0x74, 0x6b, 0x64, 0x47, 0x45, 0x37, 0x79, 0x55, 0x55, 0x67, 0x77, 0x52, 0x53, 0x72, 0x79, 0x6a, 0x41, 0x65, 0x76, 0x41, 0x79, 0x5a, 0x64, 0x37, 0x71, 0x45, 0x72, 0x67, 0x74, 0x41, 0x56, 0x6c, 0x35, 0x70, 0x44, 0x46, 0x48, 0x30, 0x74, 0x42, 0x48, 0x53, 0x74, 0x67, 0x6b, 0x41, 0x51, 0x59, 0x57, 0x48, 0x77, 0x78, 0x62, 0x62, 0x79, 0x70, 0x59, 0x37, 0x33, 0x4c, 0xa, 0x5a, 0x43, 0x51, 0x73, 0x2b, 0x4c, 0x35, 0x44, 0x6d, 0x67, 0x2f, 0x43, 0x6e, 0x57, 0x31, 0x75, 0x62, 0x47, 0x46, 0x32, 0x59, 0x75, 0x47, 0x33, 0x79, 0x46, 0x59, 0x4b, 0x31, 0x6c, 0x32, 0x4e, 0x46, 0x78, 0x2f, 0x74, 0x67, 0x48, 0x71, 0x4e, 0x78, 0x56, 0x48, 0x6a, 0x31, 0x53, 0x42, 0x5a, 0x32, 0x41, 0x54, 0x76, 0x61, 0x4b, 0x47, 0x6f, 0x6c, 0x56, 0x35, 0x53, 0x69, 0x57, 0x33, 0x49, 0xa, 0x68, 0x45, 0x46, 0x46, 0x2b, 0x77, 0x4b, 0x50, 0x73, 0x63, 0x46, 0x59, 0x4f, 0x49, 0x76, 0x53, 0x4d, 0x44, 0x38, 0x43, 0x41, 0x77, 0x45, 0x41, 0x41, 0x61, 0x4d, 0x6a, 0x4d, 0x43, 0x45, 0x77, 0x44, 0x67, 0x59, 0x44, 0x56, 0x52, 0x30, 0x50, 0x41, 0x51, 0x48, 0x2f, 0x42, 0x41, 0x51, 0x44, 0x41, 0x67, 0x4b, 0x6b, 0x4d, 0x41, 0x38, 0x47, 0x41, 0x31, 0x55, 0x64, 0x45, 0x77, 0x45, 0x42, 0xa, 0x2f, 0x77, 0x51, 0x46, 0x4d, 0x41, 0x4d, 0x42, 0x41, 0x66, 0x38, 0x77, 0x44, 0x51, 0x59, 0x4a, 0x4b, 0x6f, 0x5a, 0x49, 0x68, 0x76, 0x63, 0x4e, 0x41, 0x51, 0x45, 0x4c, 0x42, 0x51, 0x41, 0x44, 0x67, 0x67, 0x45, 0x42, 0x41, 0x46, 0x2b, 0x59, 0x44, 0x46, 0x31, 0x4e, 0x4b, 0x65, 0x6f, 0x41, 0x38, 0x49, 0x72, 0x65, 0x4f, 0x78, 0x4d, 0x2f, 0x4f, 0x45, 0x59, 0x70, 0x54, 0x44, 0x6a, 0x76, 0xa, 0x50, 0x64, 0x55, 0x69, 0x31, 0x61, 0x37, 0x79, 0x75, 0x74, 0x2b, 0x30, 0x39, 0x37, 0x70, 0x36, 0x6f, 0x2f, 0x32, 0x41, 0x53, 0x35, 0x56, 0x52, 0x6a, 0x70, 0x32, 0x57, 0x55, 0x7a, 0x72, 0x4b, 0x79, 0x73, 0x57, 0x75, 0x65, 0x74, 0x55, 0x45, 0x2b, 0x72, 0x6e, 0x41, 0x70, 0x33, 0x39, 0x37, 0x2f, 0x6a, 0x78, 0x75, 0x73, 0x54, 0x78, 0x2f, 0x50, 0x76, 0x58, 0x57, 0x44, 0x34, 0x75, 0x61, 0xa, 0x51, 0x32, 0x7a, 0x49, 0x38, 0x44, 0x59, 0x62, 0x6b, 0x64, 0x75, 0x63, 0x4f, 0x47, 0x67, 0x4a, 0x31, 0x78, 0x61, 0x4e, 0x70, 0x6b, 0x75, 0x62, 0x48, 0x33, 0x64, 0x61, 0x48, 0x59, 0x5a, 0x2b, 0x48, 0x38, 0x71, 0x42, 0x70, 0x2f, 0x74, 0x50, 0x41, 0x42, 0x57, 0x73, 0x32, 0x35, 0x66, 0x78, 0x78, 0x31, 0x53, 0x69, 0x75, 0x38, 0x4e, 0x38, 0x4b, 0x59, 0x4a, 0x2b, 0x32, 0x49, 0x68, 0x75, 0xa, 0x61, 0x64, 0x42, 0x71, 0x61, 0x73, 0x56, 0x4a, 0x6c, 0x79, 0x55, 0x4d, 0x79, 0x50, 0x49, 0x7a, 0x4b, 0x46, 0x36, 0x6e, 0x4c, 0x54, 0x57, 0x66, 0x59, 0x5a, 0x4f, 0x31, 0x76, 0x30, 0x32, 0x36, 0x4b, 0x36, 0x6f, 0x31, 0x63, 0x39, 0x78, 0x63, 0x74, 0x69, 0x77, 0x54, 0x6a, 0x54, 0x59, 0x43, 0x34, 0x7a, 0x38, 0x65, 0x4b, 0x69, 0x41, 0x4c, 0x49, 0x36, 0x33, 0x33, 0x34, 0x74, 0x4e, 0x51, 0xa, 0x33, 0x32, 0x5a, 0x77, 0x4f, 0x75, 0x73, 0x58, 0x6e, 0x4a, 0x33, 0x6b, 0x34, 0x75, 0x42, 0x57, 0x70, 0x79, 0x31, 0x69, 0x39, 0x6f, 0x4e, 0x6b, 0x75, 0x75, 0x48, 0x45, 0x64, 0x69, 0x48, 0x37, 0x36, 0x30, 0x35, 0x4a, 0x31, 0x66, 0x77, 0x57, 0x53, 0x30, 0x63, 0x65, 0x35, 0x67, 0x49, 0x50, 0x35, 0x6a, 0x6e, 0x4e, 0x73, 0x4d, 0x64, 0x61, 0x44, 0x49, 0x2f, 0x39, 0x54, 0x4a, 0x4e, 0x6e, 0xa, 0x70, 0x67, 0x2b, 0x41, 0x58, 0x55, 0x4a, 0x78, 0x46, 0x30, 0x4f, 0x77, 0x50, 0x42, 0x63, 0x45, 0x37, 0x4a, 0x41, 0x43, 0x64, 0x52, 0x6d, 0x58, 0x73, 0x2b, 0x33, 0x78, 0x6c, 0x54, 0x59, 0x4a, 0x76, 0x70, 0x53, 0x75, 0x32, 0x4b, 0x65, 0x6c, 0x4c, 0x55, 0x6a, 0x52, 0x34, 0x5a, 0x4c, 0x72, 0x5a, 0x34, 0x78, 0x39, 0x4c, 0x45, 0x36, 0x54, 0x65, 0x77, 0x34, 0x3d, 0xa, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x45, 0x4e, 0x44, 0x20, 0x43, 0x45, 0x52, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x45, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0xa}, NextProtos:[]string(nil)}, UserAgent:"", DisableCompression:false, Transport:http.RoundTripper(nil), WrapTransport:(transport.WrapperFunc)(nil), QPS:0, Burst:0, RateLimiter:flowcontrol.RateLimiter(nil), Timeout:0, Dial:(func(context.Context, string, string) (net.Conn, error))(nil)}

RAW provider 2021/04/04 00:03:01 [ApplyResourceChange][Request][PlannedState]
(cty.Value) {
 ty: (cty.Type) {
  typeImpl: (cty.typeObject) {
   typeImplSigil: (cty.typeImplSigil) {
   },
   AttrTypes: (map[string]cty.Type) (len=3) {
    (string) (len=6) "object": (cty.Type) {
     typeImpl: (cty.typeObject) {
      typeImplSigil: (cty.typeImplSigil) {
      },
      AttrTypes: (map[string]cty.Type) (len=4) {
       (string) (len=10) "apiVersion": (cty.Type) {
        typeImpl: (cty.primitiveType) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         Kind: (cty.primitiveTypeKind) 83
        }
       },
       (string) (len=4) "kind": (cty.Type) {
        typeImpl: (cty.primitiveType) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         Kind: (cty.primitiveTypeKind) 83
        }
       },
       (string) (len=8) "metadata": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) (len=2) {
          (string) (len=4) "name": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=9) "namespace": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          }
         }
        }
       },
       (string) (len=4) "spec": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) (len=20) {
          (string) (len=23) "additionalScrapeConfigs": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=2) {
             (string) (len=3) "key": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             },
             (string) (len=4) "name": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             }
            }
           }
          },
          (string) (len=22) "serviceMonitorSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=8) "replicas": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 78
           }
          },
          (string) (len=18) "serviceAccountName": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=18) "podMonitorSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=27) "podMonitorNamespaceSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=7) "version": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=5) "image": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=6) "thanos": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=3) {
             (string) (len=7) "version": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             },
             (string) (len=9) "baseImage": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             },
             (string) (len=19) "objectStorageConfig": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=3) "key": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=4) "name": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=14) "scrapeInterval": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=9) "resources": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=2) {
             (string) (len=6) "limits": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=3) "cpu": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=6) "memory": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             },
             (string) (len=8) "requests": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=6) "memory": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=3) "cpu": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=7) "storage": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=1) {
             (string) (len=19) "volumeClaimTemplate": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=1) {
                (string) (len=4) "spec": (cty.Type) {
                 typeImpl: (cty.typeObject) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  AttrTypes: (map[string]cty.Type) (len=2) {
                   (string) (len=16) "storageClassName": (cty.Type) {
                    typeImpl: (cty.primitiveType) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     Kind: (cty.primitiveTypeKind) 83
                    }
                   },
                   (string) (len=9) "resources": (cty.Type) {
                    typeImpl: (cty.typeObject) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     AttrTypes: (map[string]cty.Type) (len=1) {
                      (string) (len=8) "requests": (cty.Type) {
                       typeImpl: (cty.typeObject) {
                        typeImplSigil: (cty.typeImplSigil) {
                        },
                        AttrTypes: (map[string]cty.Type) (len=1) {
                         (string) (len=7) "storage": (cty.Type) {
                          typeImpl: (cty.primitiveType) {
                           typeImplSigil: (cty.typeImplSigil) {
                           },
                           Kind: (cty.primitiveTypeKind) 83
                          }
                         }
                        }
                       }
                      }
                     }
                    }
                   }
                  }
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=14) "externalLabels": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=2) {
             (string) (len=7) "cluster": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             },
             (string) (len=7) "product": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             }
            }
           }
          },
          (string) (len=12) "ruleSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=1) {
             (string) (len=11) "matchLabels": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=10) "prometheus": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=4) "role": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=8) "alerting": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=1) {
             (string) (len=13) "alertmanagers": (cty.Type) {
              typeImpl: (cty.typeTuple) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               ElemTypes: ([]cty.Type) (len=1 cap=1) {
                (cty.Type) {
                 typeImpl: (cty.typeObject) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  AttrTypes: (map[string]cty.Type) (len=3) {
                   (string) (len=4) "name": (cty.Type) {
                    typeImpl: (cty.primitiveType) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     Kind: (cty.primitiveTypeKind) 83
                    }
                   },
                   (string) (len=9) "namespace": (cty.Type) {
                    typeImpl: (cty.primitiveType) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     Kind: (cty.primitiveTypeKind) 83
                    }
                   },
                   (string) (len=4) "port": (cty.Type) {
                    typeImpl: (cty.primitiveType) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     Kind: (cty.primitiveTypeKind) 83
                    }
                   }
                  }
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=13) "probeSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=15) "securityContext": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=3) {
             (string) (len=7) "fsGroup": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 78
              }
             },
             (string) (len=12) "runAsNonRoot": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 66
              }
             },
             (string) (len=9) "runAsUser": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 78
              }
             }
            }
           }
          },
          (string) (len=31) "serviceMonitorNamespaceSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=22) "probeNamespaceSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=12) "nodeSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=1) {
             (string) (len=4) "role": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             }
            }
           }
          }
         }
        }
       }
      }
     }
    },
    (string) (len=8) "wait_for": (cty.Type) {
     typeImpl: (cty.typeObject) {
      typeImplSigil: (cty.typeImplSigil) {
      },
      AttrTypes: (map[string]cty.Type) (len=1) {
       (string) (len=6) "fields": (cty.Type) {
        typeImpl: (cty.typeMap) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         ElementTypeT: (cty.Type) {
          typeImpl: (cty.primitiveType) {
           typeImplSigil: (cty.typeImplSigil) {
           },
           Kind: (cty.primitiveTypeKind) 83
          }
         }
        }
       }
      }
     }
    },
    (string) (len=8) "manifest": (cty.Type) {
     typeImpl: (cty.typeObject) {
      typeImplSigil: (cty.typeImplSigil) {
      },
      AttrTypes: (map[string]cty.Type) (len=4) {
       (string) (len=4) "kind": (cty.Type) {
        typeImpl: (cty.primitiveType) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         Kind: (cty.primitiveTypeKind) 83
        }
       },
       (string) (len=8) "metadata": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) (len=2) {
          (string) (len=4) "name": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=9) "namespace": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          }
         }
        }
       },
       (string) (len=4) "spec": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) (len=22) {
          (string) (len=7) "version": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=4) "name": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=23) "additionalScrapeConfigs": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=2) {
             (string) (len=3) "key": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             },
             (string) (len=4) "name": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             }
            }
           }
          },
          (string) (len=8) "alerting": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=1) {
             (string) (len=13) "alertmanagers": (cty.Type) {
              typeImpl: (cty.typeTuple) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               ElemTypes: ([]cty.Type) (len=1 cap=1) {
                (cty.Type) {
                 typeImpl: (cty.typeObject) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  AttrTypes: (map[string]cty.Type) (len=3) {
                   (string) (len=4) "name": (cty.Type) {
                    typeImpl: (cty.primitiveType) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     Kind: (cty.primitiveTypeKind) 83
                    }
                   },
                   (string) (len=9) "namespace": (cty.Type) {
                    typeImpl: (cty.primitiveType) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     Kind: (cty.primitiveTypeKind) 83
                    }
                   },
                   (string) (len=4) "port": (cty.Type) {
                    typeImpl: (cty.primitiveType) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     Kind: (cty.primitiveTypeKind) 83
                    }
                   }
                  }
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=5) "image": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=22) "probeNamespaceSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=13) "probeSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=15) "securityContext": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=3) {
             (string) (len=12) "runAsNonRoot": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 66
              }
             },
             (string) (len=9) "runAsUser": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 78
              }
             },
             (string) (len=7) "fsGroup": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 78
              }
             }
            }
           }
          },
          (string) (len=18) "serviceAccountName": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=12) "ruleSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=1) {
             (string) (len=11) "matchLabels": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=4) "role": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=10) "prometheus": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=14) "scrapeInterval": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=18) "podMonitorSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=9) "resources": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=2) {
             (string) (len=6) "limits": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=6) "memory": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=3) "cpu": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             },
             (string) (len=8) "requests": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=3) "cpu": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=6) "memory": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=9) "namespace": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=8) "replicas": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 78
           }
          },
          (string) (len=7) "storage": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=1) {
             (string) (len=19) "volumeClaimTemplate": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=1) {
                (string) (len=4) "spec": (cty.Type) {
                 typeImpl: (cty.typeObject) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  AttrTypes: (map[string]cty.Type) (len=2) {
                   (string) (len=9) "resources": (cty.Type) {
                    typeImpl: (cty.typeObject) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     AttrTypes: (map[string]cty.Type) (len=1) {
                      (string) (len=8) "requests": (cty.Type) {
                       typeImpl: (cty.typeObject) {
                        typeImplSigil: (cty.typeImplSigil) {
                        },
                        AttrTypes: (map[string]cty.Type) (len=1) {
                         (string) (len=7) "storage": (cty.Type) {
                          typeImpl: (cty.primitiveType) {
                           typeImplSigil: (cty.typeImplSigil) {
                           },
                           Kind: (cty.primitiveTypeKind) 83
                          }
                         }
                        }
                       }
                      }
                     }
                    }
                   },
                   (string) (len=16) "storageClassName": (cty.Type) {
                    typeImpl: (cty.primitiveType) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     Kind: (cty.primitiveTypeKind) 83
                    }
                   }
                  }
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=14) "externalLabels": (cty.Type) {
           typeImpl: (cty.typeMap) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            ElementTypeT: (cty.Type) {
             typeImpl: (cty.primitiveType) {
              typeImplSigil: (cty.typeImplSigil) {
              },
              Kind: (cty.primitiveTypeKind) 83
             }
            }
           }
          },
          (string) (len=12) "nodeSelector": (cty.Type) {
           typeImpl: (cty.typeMap) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            ElementTypeT: (cty.Type) {
             typeImpl: (cty.primitiveType) {
              typeImplSigil: (cty.typeImplSigil) {
              },
              Kind: (cty.primitiveTypeKind) 83
             }
            }
           }
          },
          (string) (len=6) "thanos": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=3) {
             (string) (len=9) "baseImage": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             },
             (string) (len=19) "objectStorageConfig": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=3) "key": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=4) "name": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             },
             (string) (len=7) "version": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             }
            }
           }
          },
          (string) (len=31) "serviceMonitorNamespaceSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=22) "serviceMonitorSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=27) "podMonitorNamespaceSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          }
         }
        }
       },
       (string) (len=10) "apiVersion": (cty.Type) {
        typeImpl: (cty.primitiveType) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         Kind: (cty.primitiveTypeKind) 83
        }
       }
      }
     }
    }
   }
  }
 },
 v: (map[string]interface {}) (len=3) {
  (string) (len=8) "manifest": (map[string]interface {}) (len=4) {
   (string) (len=4) "kind": (string) (len=10) "Prometheus",
   (string) (len=8) "metadata": (map[string]interface {}) (len=2) {
    (string) (len=4) "name": (string) (len=6) "test-1",
    (string) (len=9) "namespace": (string) (len=15) "test-operator-1"
   },
   (string) (len=4) "spec": (map[string]interface {}) (len=22) {
    (string) (len=6) "thanos": (map[string]interface {}) (len=3) {
     (string) (len=9) "baseImage": (string) (len=21) "quay.io/thanos/thanos",
     (string) (len=19) "objectStorageConfig": (map[string]interface {}) (len=2) {
      (string) (len=3) "key": (string) (len=11) "thanos.yaml",
      (string) (len=4) "name": (string) (len=22) "thanos-objstore-config"
     },
     (string) (len=7) "version": (string) (len=7) "v0.16.0"
    },
    (string) (len=14) "scrapeInterval": (string) (len=3) "30s",
    (string) (len=31) "serviceMonitorNamespaceSelector": (map[string]interface {}) {
    },
    (string) (len=23) "additionalScrapeConfigs": (map[string]interface {}) (len=2) {
     (string) (len=3) "key": (string) (len=26) "prometheus-additional.yaml",
     (string) (len=4) "name": (string) (len=25) "additional-scrape-configs"
    },
    (string) (len=9) "namespace": (string) (len=15) "test-operator-1",
    (string) (len=7) "storage": (map[string]interface {}) (len=1) {
     (string) (len=19) "volumeClaimTemplate": (map[string]interface {}) (len=1) {
      (string) (len=4) "spec": (map[string]interface {}) (len=2) {
       (string) (len=9) "resources": (map[string]interface {}) (len=1) {
        (string) (len=8) "requests": (map[string]interface {}) (len=1) {
         (string) (len=7) "storage": (string) (len=4) "10Gi"
        }
       },
       (string) (len=16) "storageClassName": (string) (len=3) "gp2"
      }
     }
    },
    (string) (len=14) "externalLabels": (map[string]interface {}) (len=2) {
     (string) (len=7) "cluster": (string) (len=12) "my-cluster-2",
     (string) (len=7) "product": (string) (len=13) "api beep boop"
    },
    (string) (len=27) "podMonitorNamespaceSelector": (map[string]interface {}) {
    },
    (string) (len=18) "serviceAccountName": (string) (len=14) "prometheus-k8s",
    (string) (len=9) "resources": (map[string]interface {}) (len=2) {
     (string) (len=6) "limits": (map[string]interface {}) (len=2) {
      (string) (len=6) "memory": (string) (len=6) "1024Mi",
      (string) (len=3) "cpu": (string) (len=4) "250m"
     },
     (string) (len=8) "requests": (map[string]interface {}) (len=2) {
      (string) (len=3) "cpu": (string) (len=4) "200m",
      (string) (len=6) "memory": (string) (len=5) "200Mi"
     }
    },
    (string) (len=18) "podMonitorSelector": (map[string]interface {}) {
    },
    (string) (len=13) "probeSelector": (map[string]interface {}) {
    },
    (string) (len=12) "ruleSelector": (map[string]interface {}) (len=1) {
     (string) (len=11) "matchLabels": (map[string]interface {}) (len=2) {
      (string) (len=4) "role": (string) (len=11) "alert-rules",
      (string) (len=10) "prometheus": (string) (len=3) "k8s"
     }
    },
    (string) (len=8) "alerting": (map[string]interface {}) (len=1) {
     (string) (len=13) "alertmanagers": ([]interface {}) (len=1 cap=1) {
      (map[string]interface {}) (len=3) {
       (string) (len=4) "name": (string) (len=17) "alertmanager-main",
       (string) (len=9) "namespace": (string) (len=10) "monitoring",
       (string) (len=4) "port": (string) (len=3) "web"
      }
     }
    },
    (string) (len=4) "name": (string) (len=6) "test-1",
    (string) (len=12) "nodeSelector": (map[string]interface {}) (len=1) {
     (string) (len=4) "role": (string) (len=8) "services"
    },
    (string) (len=15) "securityContext": (map[string]interface {}) (len=3) {
     (string) (len=7) "fsGroup": (*big.Float)(0xc0001fd170)(2000),
     (string) (len=12) "runAsNonRoot": (bool) true,
     (string) (len=9) "runAsUser": (*big.Float)(0xc0001fd1a0)(1000)
    },
    (string) (len=22) "serviceMonitorSelector": (map[string]interface {}) {
    },
    (string) (len=5) "image": (string) (len=37) "quay.io/prometheus/prometheus:v2.25.2",
    (string) (len=7) "version": (string) (len=7) "v2.25.2",
    (string) (len=22) "probeNamespaceSelector": (map[string]interface {}) {
    },
    (string) (len=8) "replicas": (*big.Float)(0xc0001fcf60)(1)
   },
   (string) (len=10) "apiVersion": (string) (len=24) "monitoring.coreos.com/v1"
  },
  (string) (len=6) "object": (map[string]interface {}) (len=4) {
   (string) (len=4) "spec": (map[string]interface {}) (len=20) {
    (string) (len=6) "thanos": (map[string]interface {}) (len=3) {
     (string) (len=9) "baseImage": (string) (len=21) "quay.io/thanos/thanos",
     (string) (len=19) "objectStorageConfig": (map[string]interface {}) (len=2) {
      (string) (len=3) "key": (string) (len=11) "thanos.yaml",
      (string) (len=4) "name": (string) (len=22) "thanos-objstore-config"
     },
     (string) (len=7) "version": (string) (len=7) "v0.16.0"
    },
    (string) (len=7) "version": (string) (len=7) "v2.25.2",
    (string) (len=14) "externalLabels": (map[string]interface {}) (len=2) {
     (string) (len=7) "cluster": (string) (len=12) "my-cluster-2",
     (string) (len=7) "product": (string) (len=13) "api beep boop"
    },
    (string) (len=27) "podMonitorNamespaceSelector": (map[string]interface {}) {
    },
    (string) (len=5) "image": (string) (len=37) "quay.io/prometheus/prometheus:v2.25.2",
    (string) (len=23) "additionalScrapeConfigs": (map[string]interface {}) (len=2) {
     (string) (len=3) "key": (string) (len=26) "prometheus-additional.yaml",
     (string) (len=4) "name": (string) (len=25) "additional-scrape-configs"
    },
    (string) (len=12) "nodeSelector": (map[string]interface {}) (len=1) {
     (string) (len=4) "role": (string) (len=8) "services"
    },
    (string) (len=18) "podMonitorSelector": (map[string]interface {}) {
    },
    (string) (len=15) "securityContext": (map[string]interface {}) (len=3) {
     (string) (len=12) "runAsNonRoot": (bool) true,
     (string) (len=9) "runAsUser": (*big.Float)(0xc0006b5230)(1000),
     (string) (len=7) "fsGroup": (*big.Float)(0xc0006b5200)(2000)
    },
    (string) (len=7) "storage": (map[string]interface {}) (len=1) {
     (string) (len=19) "volumeClaimTemplate": (map[string]interface {}) (len=1) {
      (string) (len=4) "spec": (map[string]interface {}) (len=2) {
       (string) (len=16) "storageClassName": (string) (len=3) "gp2",
       (string) (len=9) "resources": (map[string]interface {}) (len=1) {
        (string) (len=8) "requests": (map[string]interface {}) (len=1) {
         (string) (len=7) "storage": (string) (len=4) "10Gi"
        }
       }
      }
     }
    },
    (string) (len=8) "replicas": (*big.Float)(0xc0006b4ff0)(1),
    (string) (len=12) "ruleSelector": (map[string]interface {}) (len=1) {
     (string) (len=11) "matchLabels": (map[string]interface {}) (len=2) {
      (string) (len=10) "prometheus": (string) (len=3) "k8s",
      (string) (len=4) "role": (string) (len=11) "alert-rules"
     }
    },
    (string) (len=13) "probeSelector": (map[string]interface {}) {
    },
    (string) (len=22) "serviceMonitorSelector": (map[string]interface {}) {
    },
    (string) (len=9) "resources": (map[string]interface {}) (len=2) {
     (string) (len=6) "limits": (map[string]interface {}) (len=2) {
      (string) (len=3) "cpu": (string) (len=4) "250m",
      (string) (len=6) "memory": (string) (len=6) "1024Mi"
     },
     (string) (len=8) "requests": (map[string]interface {}) (len=2) {
      (string) (len=6) "memory": (string) (len=5) "200Mi",
      (string) (len=3) "cpu": (string) (len=4) "200m"
     }
    },
    (string) (len=8) "alerting": (map[string]interface {}) (len=1) {
     (string) (len=13) "alertmanagers": ([]interface {}) (len=1 cap=1) {
      (map[string]interface {}) (len=3) {
       (string) (len=4) "name": (string) (len=17) "alertmanager-main",
       (string) (len=9) "namespace": (string) (len=10) "monitoring",
       (string) (len=4) "port": (string) (len=3) "web"
      }
     }
    },
    (string) (len=14) "scrapeInterval": (string) (len=3) "30s",
    (string) (len=31) "serviceMonitorNamespaceSelector": (map[string]interface {}) {
    },
    (string) (len=22) "probeNamespaceSelector": (map[string]interface {}) {
    },
    (string) (len=18) "serviceAccountName": (string) (len=14) "prometheus-k8s"
   },
   (string) (len=10) "apiVersion": (string) (len=24) "monitoring.coreos.com/v1",
   (string) (len=4) "kind": (string) (len=10) "Prometheus",
   (string) (len=8) "metadata": (map[string]interface {}) (len=2) {
    (string) (len=4) "name": (string) (len=6) "test-1",
    (string) (len=9) "namespace": (string) (len=15) "test-operator-1"
   }
  },
  (string) (len=8) "wait_for": (interface {}) <nil>
 }
}

RAW provider 2021/04/04 00:03:01 [ApplyResourceChange][Request][PriorState]
(cty.Value) {
 ty: (cty.Type) {
  typeImpl: (cty.typeObject) {
   typeImplSigil: (cty.typeImplSigil) {
   },
   AttrTypes: (map[string]cty.Type) (len=3) {
    (string) (len=8) "manifest": (cty.Type) {
     typeImpl: (cty.typeObject) {
      typeImplSigil: (cty.typeImplSigil) {
      },
      AttrTypes: (map[string]cty.Type) (len=4) {
       (string) (len=4) "spec": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) (len=21) {
          (string) (len=4) "name": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=27) "podMonitorNamespaceSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=8) "alerting": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=1) {
             (string) (len=13) "alertmanagers": (cty.Type) {
              typeImpl: (cty.typeTuple) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               ElemTypes: ([]cty.Type) (len=1 cap=1) {
                (cty.Type) {
                 typeImpl: (cty.typeObject) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  AttrTypes: (map[string]cty.Type) (len=3) {
                   (string) (len=4) "port": (cty.Type) {
                    typeImpl: (cty.primitiveType) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     Kind: (cty.primitiveTypeKind) 83
                    }
                   },
                   (string) (len=4) "name": (cty.Type) {
                    typeImpl: (cty.primitiveType) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     Kind: (cty.primitiveTypeKind) 83
                    }
                   },
                   (string) (len=9) "namespace": (cty.Type) {
                    typeImpl: (cty.primitiveType) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     Kind: (cty.primitiveTypeKind) 83
                    }
                   }
                  }
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=22) "probeNamespaceSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=23) "additionalScrapeConfigs": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=2) {
             (string) (len=3) "key": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             },
             (string) (len=4) "name": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             }
            }
           }
          },
          (string) (len=22) "serviceMonitorSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=12) "nodeSelector": (cty.Type) {
           typeImpl: (cty.typeMap) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            ElementTypeT: (cty.Type) {
             typeImpl: (cty.primitiveType) {
              typeImplSigil: (cty.typeImplSigil) {
              },
              Kind: (cty.primitiveTypeKind) 83
             }
            }
           }
          },
          (string) (len=8) "replicas": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 78
           }
          },
          (string) (len=9) "namespace": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=14) "externalLabels": (cty.Type) {
           typeImpl: (cty.typeMap) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            ElementTypeT: (cty.Type) {
             typeImpl: (cty.primitiveType) {
              typeImplSigil: (cty.typeImplSigil) {
              },
              Kind: (cty.primitiveTypeKind) 83
             }
            }
           }
          },
          (string) (len=12) "ruleSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=1) {
             (string) (len=11) "matchLabels": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=10) "prometheus": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=4) "role": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=7) "storage": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=1) {
             (string) (len=19) "volumeClaimTemplate": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=1) {
                (string) (len=4) "spec": (cty.Type) {
                 typeImpl: (cty.typeObject) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  AttrTypes: (map[string]cty.Type) (len=2) {
                   (string) (len=9) "resources": (cty.Type) {
                    typeImpl: (cty.typeObject) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     AttrTypes: (map[string]cty.Type) (len=1) {
                      (string) (len=8) "requests": (cty.Type) {
                       typeImpl: (cty.typeObject) {
                        typeImplSigil: (cty.typeImplSigil) {
                        },
                        AttrTypes: (map[string]cty.Type) (len=1) {
                         (string) (len=7) "storage": (cty.Type) {
                          typeImpl: (cty.primitiveType) {
                           typeImplSigil: (cty.typeImplSigil) {
                           },
                           Kind: (cty.primitiveTypeKind) 83
                          }
                         }
                        }
                       }
                      }
                     }
                    }
                   },
                   (string) (len=16) "storageClassName": (cty.Type) {
                    typeImpl: (cty.primitiveType) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     Kind: (cty.primitiveTypeKind) 83
                    }
                   }
                  }
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=15) "securityContext": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=3) {
             (string) (len=9) "runAsUser": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 78
              }
             },
             (string) (len=7) "fsGroup": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 78
              }
             },
             (string) (len=12) "runAsNonRoot": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 66
              }
             }
            }
           }
          },
          (string) (len=13) "probeSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=7) "version": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=9) "resources": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=2) {
             (string) (len=6) "limits": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=3) "cpu": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=6) "memory": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             },
             (string) (len=8) "requests": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=6) "memory": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=3) "cpu": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=18) "podMonitorSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=5) "image": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=6) "thanos": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=3) {
             (string) (len=9) "baseImage": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             },
             (string) (len=19) "objectStorageConfig": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=3) "key": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=4) "name": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             },
             (string) (len=7) "version": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             }
            }
           }
          },
          (string) (len=18) "serviceAccountName": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=31) "serviceMonitorNamespaceSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          }
         }
        }
       },
       (string) (len=10) "apiVersion": (cty.Type) {
        typeImpl: (cty.primitiveType) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         Kind: (cty.primitiveTypeKind) 83
        }
       },
       (string) (len=4) "kind": (cty.Type) {
        typeImpl: (cty.primitiveType) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         Kind: (cty.primitiveTypeKind) 83
        }
       },
       (string) (len=8) "metadata": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) (len=2) {
          (string) (len=9) "namespace": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=4) "name": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          }
         }
        }
       }
      }
     }
    },
    (string) (len=6) "object": (cty.Type) {
     typeImpl: (cty.typeObject) {
      typeImplSigil: (cty.typeImplSigil) {
      },
      AttrTypes: (map[string]cty.Type) (len=4) {
       (string) (len=10) "apiVersion": (cty.Type) {
        typeImpl: (cty.primitiveType) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         Kind: (cty.primitiveTypeKind) 83
        }
       },
       (string) (len=4) "kind": (cty.Type) {
        typeImpl: (cty.primitiveType) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         Kind: (cty.primitiveTypeKind) 83
        }
       },
       (string) (len=8) "metadata": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) (len=2) {
          (string) (len=9) "namespace": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=4) "name": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          }
         }
        }
       },
       (string) (len=4) "spec": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) (len=19) {
          (string) (len=6) "thanos": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=3) {
             (string) (len=19) "objectStorageConfig": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=4) "name": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=3) "key": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             },
             (string) (len=7) "version": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             },
             (string) (len=9) "baseImage": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             }
            }
           }
          },
          (string) (len=8) "alerting": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=1) {
             (string) (len=13) "alertmanagers": (cty.Type) {
              typeImpl: (cty.typeTuple) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               ElemTypes: ([]cty.Type) (len=1 cap=1) {
                (cty.Type) {
                 typeImpl: (cty.typeObject) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  AttrTypes: (map[string]cty.Type) (len=3) {
                   (string) (len=9) "namespace": (cty.Type) {
                    typeImpl: (cty.primitiveType) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     Kind: (cty.primitiveTypeKind) 83
                    }
                   },
                   (string) (len=4) "port": (cty.Type) {
                    typeImpl: (cty.primitiveType) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     Kind: (cty.primitiveTypeKind) 83
                    }
                   },
                   (string) (len=4) "name": (cty.Type) {
                    typeImpl: (cty.primitiveType) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     Kind: (cty.primitiveTypeKind) 83
                    }
                   }
                  }
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=7) "version": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=9) "resources": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=2) {
             (string) (len=6) "limits": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=3) "cpu": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=6) "memory": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             },
             (string) (len=8) "requests": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=3) "cpu": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=6) "memory": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=13) "probeSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=5) "image": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=8) "replicas": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 78
           }
          },
          (string) (len=18) "serviceAccountName": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=27) "podMonitorNamespaceSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=7) "storage": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=1) {
             (string) (len=19) "volumeClaimTemplate": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=1) {
                (string) (len=4) "spec": (cty.Type) {
                 typeImpl: (cty.typeObject) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  AttrTypes: (map[string]cty.Type) (len=2) {
                   (string) (len=16) "storageClassName": (cty.Type) {
                    typeImpl: (cty.primitiveType) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     Kind: (cty.primitiveTypeKind) 83
                    }
                   },
                   (string) (len=9) "resources": (cty.Type) {
                    typeImpl: (cty.typeObject) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     AttrTypes: (map[string]cty.Type) (len=1) {
                      (string) (len=8) "requests": (cty.Type) {
                       typeImpl: (cty.typeObject) {
                        typeImplSigil: (cty.typeImplSigil) {
                        },
                        AttrTypes: (map[string]cty.Type) (len=1) {
                         (string) (len=7) "storage": (cty.Type) {
                          typeImpl: (cty.primitiveType) {
                           typeImplSigil: (cty.typeImplSigil) {
                           },
                           Kind: (cty.primitiveTypeKind) 83
                          }
                         }
                        }
                       }
                      }
                     }
                    }
                   }
                  }
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=18) "podMonitorSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=12) "ruleSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=1) {
             (string) (len=11) "matchLabels": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=10) "prometheus": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=4) "role": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=22) "serviceMonitorSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=12) "nodeSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=1) {
             (string) (len=4) "role": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             }
            }
           }
          },
          (string) (len=31) "serviceMonitorNamespaceSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=14) "externalLabels": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=2) {
             (string) (len=7) "cluster": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             },
             (string) (len=7) "product": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             }
            }
           }
          },
          (string) (len=22) "probeNamespaceSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=23) "additionalScrapeConfigs": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=2) {
             (string) (len=3) "key": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             },
             (string) (len=4) "name": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             }
            }
           }
          },
          (string) (len=15) "securityContext": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=3) {
             (string) (len=12) "runAsNonRoot": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 66
              }
             },
             (string) (len=9) "runAsUser": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 78
              }
             },
             (string) (len=7) "fsGroup": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 78
              }
             }
            }
           }
          }
         }
        }
       }
      }
     }
    },
    (string) (len=8) "wait_for": (cty.Type) {
     typeImpl: (cty.typeObject) {
      typeImplSigil: (cty.typeImplSigil) {
      },
      AttrTypes: (map[string]cty.Type) (len=1) {
       (string) (len=6) "fields": (cty.Type) {
        typeImpl: (cty.typeMap) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         ElementTypeT: (cty.Type) {
          typeImpl: (cty.primitiveType) {
           typeImplSigil: (cty.typeImplSigil) {
           },
           Kind: (cty.primitiveTypeKind) 83
          }
         }
        }
       }
      }
     }
    }
   }
  }
 },
 v: (map[string]interface {}) (len=3) {
  (string) (len=8) "manifest": (map[string]interface {}) (len=4) {
   (string) (len=4) "kind": (string) (len=10) "Prometheus",
   (string) (len=8) "metadata": (map[string]interface {}) (len=2) {
    (string) (len=4) "name": (string) (len=6) "test-1",
    (string) (len=9) "namespace": (string) (len=15) "test-operator-1"
   },
   (string) (len=4) "spec": (map[string]interface {}) (len=21) {
    (string) (len=27) "podMonitorNamespaceSelector": (map[string]interface {}) {
    },
    (string) (len=9) "resources": (map[string]interface {}) (len=2) {
     (string) (len=6) "limits": (map[string]interface {}) (len=2) {
      (string) (len=3) "cpu": (string) (len=4) "250m",
      (string) (len=6) "memory": (string) (len=6) "1024Mi"
     },
     (string) (len=8) "requests": (map[string]interface {}) (len=2) {
      (string) (len=3) "cpu": (string) (len=4) "200m",
      (string) (len=6) "memory": (string) (len=5) "200Mi"
     }
    },
    (string) (len=31) "serviceMonitorNamespaceSelector": (map[string]interface {}) {
    },
    (string) (len=6) "thanos": (map[string]interface {}) (len=3) {
     (string) (len=7) "version": (string) (len=7) "v0.16.0",
     (string) (len=9) "baseImage": (string) (len=21) "quay.io/thanos/thanos",
     (string) (len=19) "objectStorageConfig": (map[string]interface {}) (len=2) {
      (string) (len=3) "key": (string) (len=11) "thanos.yaml",
      (string) (len=4) "name": (string) (len=22) "thanos-objstore-config"
     }
    },
    (string) (len=18) "podMonitorSelector": (map[string]interface {}) {
    },
    (string) (len=7) "storage": (map[string]interface {}) (len=1) {
     (string) (len=19) "volumeClaimTemplate": (map[string]interface {}) (len=1) {
      (string) (len=4) "spec": (map[string]interface {}) (len=2) {
       (string) (len=9) "resources": (map[string]interface {}) (len=1) {
        (string) (len=8) "requests": (map[string]interface {}) (len=1) {
         (string) (len=7) "storage": (string) (len=4) "10Gi"
        }
       },
       (string) (len=16) "storageClassName": (string) (len=3) "gp2"
      }
     }
    },
    (string) (len=7) "version": (string) (len=7) "v2.25.2",
    (string) (len=23) "additionalScrapeConfigs": (map[string]interface {}) (len=2) {
     (string) (len=3) "key": (string) (len=26) "prometheus-additional.yaml",
     (string) (len=4) "name": (string) (len=25) "additional-scrape-configs"
    },
    (string) (len=5) "image": (string) (len=37) "quay.io/prometheus/prometheus:v2.25.2",
    (string) (len=15) "securityContext": (map[string]interface {}) (len=3) {
     (string) (len=9) "runAsUser": (*big.Float)(0xc0007697d0)(1000),
     (string) (len=7) "fsGroup": (*big.Float)(0xc0007697a0)(2000),
     (string) (len=12) "runAsNonRoot": (bool) true
    },
    (string) (len=9) "namespace": (string) (len=15) "test-operator-1",
    (string) (len=14) "externalLabels": (map[string]interface {}) (len=2) {
     (string) (len=7) "cluster": (string) (len=12) "my-cluster-2",
     (string) (len=7) "product": (string) (len=13) "api beep boop"
    },
    (string) (len=12) "ruleSelector": (map[string]interface {}) (len=1) {
     (string) (len=11) "matchLabels": (map[string]interface {}) (len=2) {
      (string) (len=10) "prometheus": (string) (len=3) "k8s",
      (string) (len=4) "role": (string) (len=11) "alert-rules"
     }
    },
    (string) (len=8) "replicas": (*big.Float)(0xc000769590)(1),
    (string) (len=22) "serviceMonitorSelector": (map[string]interface {}) {
    },
    (string) (len=13) "probeSelector": (map[string]interface {}) {
    },
    (string) (len=8) "alerting": (map[string]interface {}) (len=1) {
     (string) (len=13) "alertmanagers": ([]interface {}) (len=1 cap=1) {
      (map[string]interface {}) (len=3) {
       (string) (len=4) "name": (string) (len=17) "alertmanager-main",
       (string) (len=9) "namespace": (string) (len=10) "monitoring",
       (string) (len=4) "port": (string) (len=3) "web"
      }
     }
    },
    (string) (len=22) "probeNamespaceSelector": (map[string]interface {}) {
    },
    (string) (len=18) "serviceAccountName": (string) (len=14) "prometheus-k8s",
    (string) (len=12) "nodeSelector": (map[string]interface {}) (len=1) {
     (string) (len=4) "role": (string) (len=8) "services"
    },
    (string) (len=4) "name": (string) (len=6) "test-1"
   },
   (string) (len=10) "apiVersion": (string) (len=24) "monitoring.coreos.com/v1"
  },
  (string) (len=6) "object": (map[string]interface {}) (len=4) {
   (string) (len=10) "apiVersion": (string) (len=24) "monitoring.coreos.com/v1",
   (string) (len=4) "kind": (string) (len=10) "Prometheus",
   (string) (len=8) "metadata": (map[string]interface {}) (len=2) {
    (string) (len=4) "name": (string) (len=6) "test-1",
    (string) (len=9) "namespace": (string) (len=15) "test-operator-1"
   },
   (string) (len=4) "spec": (map[string]interface {}) (len=19) {
    (string) (len=22) "serviceMonitorSelector": (map[string]interface {}) {
    },
    (string) (len=22) "probeNamespaceSelector": (map[string]interface {}) {
    },
    (string) (len=23) "additionalScrapeConfigs": (map[string]interface {}) (len=2) {
     (string) (len=4) "name": (string) (len=25) "additional-scrape-configs",
     (string) (len=3) "key": (string) (len=26) "prometheus-additional.yaml"
    },
    (string) (len=12) "nodeSelector": (map[string]interface {}) (len=1) {
     (string) (len=4) "role": (string) (len=8) "services"
    },
    (string) (len=31) "serviceMonitorNamespaceSelector": (map[string]interface {}) {
    },
    (string) (len=15) "securityContext": (map[string]interface {}) (len=3) {
     (string) (len=7) "fsGroup": (*big.Float)(0xc0006ab860)(2000),
     (string) (len=12) "runAsNonRoot": (bool) true,
     (string) (len=9) "runAsUser": (*big.Float)(0xc0006ab890)(1000)
    },
    (string) (len=27) "podMonitorNamespaceSelector": (map[string]interface {}) {
    },
    (string) (len=13) "probeSelector": (map[string]interface {}) {
    },
    (string) (len=18) "podMonitorSelector": (map[string]interface {}) {
    },
    (string) (len=8) "replicas": (*big.Float)(0xc0006ab650)(1),
    (string) (len=14) "externalLabels": (map[string]interface {}) (len=2) {
     (string) (len=7) "cluster": (string) (len=12) "my-cluster-2",
     (string) (len=7) "product": (string) (len=13) "api beep boop"
    },
    (string) (len=18) "serviceAccountName": (string) (len=14) "prometheus-k8s",
    (string) (len=12) "ruleSelector": (map[string]interface {}) (len=1) {
     (string) (len=11) "matchLabels": (map[string]interface {}) (len=2) {
      (string) (len=10) "prometheus": (string) (len=3) "k8s",
      (string) (len=4) "role": (string) (len=11) "alert-rules"
     }
    },
    (string) (len=9) "resources": (map[string]interface {}) (len=2) {
     (string) (len=6) "limits": (map[string]interface {}) (len=2) {
      (string) (len=3) "cpu": (string) (len=4) "250m",
      (string) (len=6) "memory": (string) (len=6) "1024Mi"
     },
     (string) (len=8) "requests": (map[string]interface {}) (len=2) {
      (string) (len=3) "cpu": (string) (len=4) "200m",
      (string) (len=6) "memory": (string) (len=5) "200Mi"
     }
    },
    (string) (len=7) "storage": (map[string]interface {}) (len=1) {
     (string) (len=19) "volumeClaimTemplate": (map[string]interface {}) (len=1) {
      (string) (len=4) "spec": (map[string]interface {}) (len=2) {
       (string) (len=16) "storageClassName": (string) (len=3) "gp2",
       (string) (len=9) "resources": (map[string]interface {}) (len=1) {
        (string) (len=8) "requests": (map[string]interface {}) (len=1) {
         (string) (len=7) "storage": (string) (len=4) "10Gi"
        }
       }
      }
     }
    },
    (string) (len=6) "thanos": (map[string]interface {}) (len=3) {
     (string) (len=19) "objectStorageConfig": (map[string]interface {}) (len=2) {
      (string) (len=4) "name": (string) (len=22) "thanos-objstore-config",
      (string) (len=3) "key": (string) (len=11) "thanos.yaml"
     },
     (string) (len=7) "version": (string) (len=7) "v0.16.0",
     (string) (len=9) "baseImage": (string) (len=21) "quay.io/thanos/thanos"
    },
    (string) (len=7) "version": (string) (len=7) "v2.25.2",
    (string) (len=5) "image": (string) (len=37) "quay.io/prometheus/prometheus:v2.25.2",
    (string) (len=8) "alerting": (map[string]interface {}) (len=1) {
     (string) (len=13) "alertmanagers": ([]interface {}) (len=1 cap=1) {
      (map[string]interface {}) (len=3) {
       (string) (len=4) "name": (string) (len=17) "alertmanager-main",
       (string) (len=9) "namespace": (string) (len=10) "monitoring",
       (string) (len=4) "port": (string) (len=3) "web"
      }
     }
    }
   }
  },
  (string) (len=8) "wait_for": (interface {}) <nil>
 }
}

RAW provider 2021/04/04 00:03:01 [ApplyResourceChange][Request][PlannedPrivate]
([]uint8) <nil>

RAW provider 2021/04/04 00:03:02 [ApplyResourceChange][Update] API response:
(*unstructured.Unstructured)(0xc000568ad8)({
 Object: (map[string]interface {}) (len=4) {
  (string) (len=4) "kind": (string) (len=10) "Prometheus",
  (string) (len=8) "metadata": (map[string]interface {}) (len=8) {
   (string) (len=8) "selfLink": (string) (len=77) "/apis/monitoring.coreos.com/v1/namespaces/test-operator-1/prometheuses/test-1",
   (string) (len=3) "uid": (string) (len=36) "4fb61a0d-9f19-4b6d-8d53-45d2b4f903b7",
   (string) (len=17) "creationTimestamp": (string) (len=20) "2021-04-04T03:45:15Z",
   (string) (len=10) "generation": (int64) 3,
   (string) (len=13) "managedFields": ([]interface {}) (len=1 cap=1) {
    (map[string]interface {}) (len=6) {
     (string) (len=10) "apiVersion": (string) (len=24) "monitoring.coreos.com/v1",
     (string) (len=10) "fieldsType": (string) (len=8) "FieldsV1",
     (string) (len=8) "fieldsV1": (map[string]interface {}) (len=1) {
      (string) (len=6) "f:spec": (map[string]interface {}) (len=21) {
       (string) (len=11) "f:resources": (map[string]interface {}) (len=3) {
        (string) (len=1) ".": (map[string]interface {}) {
        },
        (string) (len=8) "f:limits": (map[string]interface {}) (len=3) {
         (string) (len=1) ".": (map[string]interface {}) {
         },
         (string) (len=5) "f:cpu": (map[string]interface {}) {
         },
         (string) (len=8) "f:memory": (map[string]interface {}) {
         }
        },
        (string) (len=10) "f:requests": (map[string]interface {}) (len=3) {
         (string) (len=5) "f:cpu": (map[string]interface {}) {
         },
         (string) (len=8) "f:memory": (map[string]interface {}) {
         },
         (string) (len=1) ".": (map[string]interface {}) {
         }
        }
       },
       (string) (len=14) "f:ruleSelector": (map[string]interface {}) (len=2) {
        (string) (len=1) ".": (map[string]interface {}) {
        },
        (string) (len=13) "f:matchLabels": (map[string]interface {}) (len=3) {
         (string) (len=1) ".": (map[string]interface {}) {
         },
         (string) (len=12) "f:prometheus": (map[string]interface {}) {
         },
         (string) (len=6) "f:role": (map[string]interface {}) {
         }
        }
       },
       (string) (len=17) "f:securityContext": (map[string]interface {}) (len=4) {
        (string) (len=1) ".": (map[string]interface {}) {
        },
        (string) (len=9) "f:fsGroup": (map[string]interface {}) {
        },
        (string) (len=14) "f:runAsNonRoot": (map[string]interface {}) {
        },
        (string) (len=11) "f:runAsUser": (map[string]interface {}) {
        }
       },
       (string) (len=33) "f:serviceMonitorNamespaceSelector": (map[string]interface {}) {
       },
       (string) (len=1) ".": (map[string]interface {}) {
       },
       (string) (len=25) "f:additionalScrapeConfigs": (map[string]interface {}) (len=3) {
        (string) (len=5) "f:key": (map[string]interface {}) {
        },
        (string) (len=6) "f:name": (map[string]interface {}) {
        },
        (string) (len=1) ".": (map[string]interface {}) {
        }
       },
       (string) (len=7) "f:image": (map[string]interface {}) {
       },
       (string) (len=10) "f:replicas": (map[string]interface {}) {
       },
       (string) (len=9) "f:storage": (map[string]interface {}) (len=2) {
        (string) (len=21) "f:volumeClaimTemplate": (map[string]interface {}) (len=2) {
         (string) (len=1) ".": (map[string]interface {}) {
         },
         (string) (len=6) "f:spec": (map[string]interface {}) (len=3) {
          (string) (len=1) ".": (map[string]interface {}) {
          },
          (string) (len=11) "f:resources": (map[string]interface {}) (len=2) {
           (string) (len=1) ".": (map[string]interface {}) {
           },
           (string) (len=10) "f:requests": (map[string]interface {}) (len=2) {
            (string) (len=1) ".": (map[string]interface {}) {
            },
            (string) (len=9) "f:storage": (map[string]interface {}) {
            }
           }
          },
          (string) (len=18) "f:storageClassName": (map[string]interface {}) {
          }
         }
        },
        (string) (len=1) ".": (map[string]interface {}) {
        }
       },
       (string) (len=16) "f:scrapeInterval": (map[string]interface {}) {
       },
       (string) (len=20) "f:serviceAccountName": (map[string]interface {}) {
       },
       (string) (len=8) "f:thanos": (map[string]interface {}) (len=4) {
        (string) (len=9) "f:version": (map[string]interface {}) {
        },
        (string) (len=1) ".": (map[string]interface {}) {
        },
        (string) (len=11) "f:baseImage": (map[string]interface {}) {
        },
        (string) (len=21) "f:objectStorageConfig": (map[string]interface {}) (len=3) {
         (string) (len=1) ".": (map[string]interface {}) {
         },
         (string) (len=5) "f:key": (map[string]interface {}) {
         },
         (string) (len=6) "f:name": (map[string]interface {}) {
         }
        }
       },
       (string) (len=10) "f:alerting": (map[string]interface {}) (len=2) {
        (string) (len=15) "f:alertmanagers": (map[string]interface {}) {
        },
        (string) (len=1) ".": (map[string]interface {}) {
        }
       },
       (string) (len=14) "f:nodeSelector": (map[string]interface {}) (len=2) {
        (string) (len=1) ".": (map[string]interface {}) {
        },
        (string) (len=6) "f:role": (map[string]interface {}) {
        }
       },
       (string) (len=15) "f:probeSelector": (map[string]interface {}) {
       },
       (string) (len=24) "f:serviceMonitorSelector": (map[string]interface {}) {
       },
       (string) (len=9) "f:version": (map[string]interface {}) {
       },
       (string) (len=16) "f:externalLabels": (map[string]interface {}) (len=3) {
        (string) (len=1) ".": (map[string]interface {}) {
        },
        (string) (len=9) "f:cluster": (map[string]interface {}) {
        },
        (string) (len=9) "f:product": (map[string]interface {}) {
        }
       },
       (string) (len=29) "f:podMonitorNamespaceSelector": (map[string]interface {}) {
       },
       (string) (len=20) "f:podMonitorSelector": (map[string]interface {}) {
       },
       (string) (len=24) "f:probeNamespaceSelector": (map[string]interface {}) {
       }
      }
     },
     (string) (len=7) "manager": (string) (len=9) "Terraform",
     (string) (len=9) "operation": (string) (len=5) "Apply",
     (string) (len=4) "time": (string) (len=20) "2021-04-04T04:03:02Z"
    }
   },
   (string) (len=4) "name": (string) (len=6) "test-1",
   (string) (len=9) "namespace": (string) (len=15) "test-operator-1",
   (string) (len=15) "resourceVersion": (string) (len=8) "50995051"
  },
  (string) (len=4) "spec": (map[string]interface {}) (len=20) {
   (string) (len=14) "externalLabels": (map[string]interface {}) (len=2) {
    (string) (len=7) "cluster": (string) (len=12) "my-cluster-2",
    (string) (len=7) "product": (string) (len=13) "api beep boop"
   },
   (string) (len=5) "image": (string) (len=37) "quay.io/prometheus/prometheus:v2.25.2",
   (string) (len=18) "podMonitorSelector": (map[string]interface {}) {
   },
   (string) (len=14) "scrapeInterval": (string) (len=3) "30s",
   (string) (len=7) "storage": (map[string]interface {}) (len=1) {
    (string) (len=19) "volumeClaimTemplate": (map[string]interface {}) (len=1) {
     (string) (len=4) "spec": (map[string]interface {}) (len=2) {
      (string) (len=9) "resources": (map[string]interface {}) (len=1) {
       (string) (len=8) "requests": (map[string]interface {}) (len=1) {
        (string) (len=7) "storage": (string) (len=4) "10Gi"
       }
      },
      (string) (len=16) "storageClassName": (string) (len=3) "gp2"
     }
    }
   },
   (string) (len=7) "version": (string) (len=7) "v2.25.2",
   (string) (len=23) "additionalScrapeConfigs": (map[string]interface {}) (len=2) {
    (string) (len=3) "key": (string) (len=26) "prometheus-additional.yaml",
    (string) (len=4) "name": (string) (len=25) "additional-scrape-configs"
   },
   (string) (len=12) "ruleSelector": (map[string]interface {}) (len=1) {
    (string) (len=11) "matchLabels": (map[string]interface {}) (len=2) {
     (string) (len=10) "prometheus": (string) (len=3) "k8s",
     (string) (len=4) "role": (string) (len=11) "alert-rules"
    }
   },
   (string) (len=6) "thanos": (map[string]interface {}) (len=3) {
    (string) (len=9) "baseImage": (string) (len=21) "quay.io/thanos/thanos",
    (string) (len=19) "objectStorageConfig": (map[string]interface {}) (len=2) {
     (string) (len=3) "key": (string) (len=11) "thanos.yaml",
     (string) (len=4) "name": (string) (len=22) "thanos-objstore-config"
    },
    (string) (len=7) "version": (string) (len=7) "v0.16.0"
   },
   (string) (len=22) "serviceMonitorSelector": (map[string]interface {}) {
   },
   (string) (len=22) "probeNamespaceSelector": (map[string]interface {}) {
   },
   (string) (len=13) "probeSelector": (map[string]interface {}) {
   },
   (string) (len=8) "replicas": (int64) 1,
   (string) (len=9) "resources": (map[string]interface {}) (len=2) {
    (string) (len=6) "limits": (map[string]interface {}) (len=2) {
     (string) (len=3) "cpu": (string) (len=4) "250m",
     (string) (len=6) "memory": (string) (len=6) "1024Mi"
    },
    (string) (len=8) "requests": (map[string]interface {}) (len=2) {
     (string) (len=3) "cpu": (string) (len=4) "200m",
     (string) (len=6) "memory": (string) (len=5) "200Mi"
    }
   },
   (string) (len=15) "securityContext": (map[string]interface {}) (len=3) {
    (string) (len=7) "fsGroup": (int64) 2000,
    (string) (len=12) "runAsNonRoot": (bool) true,
    (string) (len=9) "runAsUser": (int64) 1000
   },
   (string) (len=18) "serviceAccountName": (string) (len=14) "prometheus-k8s",
   (string) (len=8) "alerting": (map[string]interface {}) (len=1) {
    (string) (len=13) "alertmanagers": ([]interface {}) (len=1 cap=1) {
     (map[string]interface {}) (len=3) {
      (string) (len=4) "name": (string) (len=17) "alertmanager-main",
      (string) (len=9) "namespace": (string) (len=10) "monitoring",
      (string) (len=4) "port": (string) (len=3) "web"
     }
    }
   },
   (string) (len=12) "nodeSelector": (map[string]interface {}) (len=1) {
    (string) (len=4) "role": (string) (len=8) "services"
   },
   (string) (len=27) "podMonitorNamespaceSelector": (map[string]interface {}) {
   },
   (string) (len=31) "serviceMonitorNamespaceSelector": (map[string]interface {}) {
   }
  },
  (string) (len=10) "apiVersion": (string) (len=24) "monitoring.coreos.com/v1"
 }
})

RAW provider 2021/04/04 00:03:02 [ApplyResourceChange][Update] transformed response:
(cty.Value) {
 ty: (cty.Type) {
  typeImpl: (cty.typeObject) {
   typeImplSigil: (cty.typeImplSigil) {
   },
   AttrTypes: (map[string]cty.Type) (len=4) {
    (string) (len=10) "apiVersion": (cty.Type) {
     typeImpl: (cty.primitiveType) {
      typeImplSigil: (cty.typeImplSigil) {
      },
      Kind: (cty.primitiveTypeKind) 83
     }
    },
    (string) (len=4) "kind": (cty.Type) {
     typeImpl: (cty.primitiveType) {
      typeImplSigil: (cty.typeImplSigil) {
      },
      Kind: (cty.primitiveTypeKind) 83
     }
    },
    (string) (len=8) "metadata": (cty.Type) {
     typeImpl: (cty.typeObject) {
      typeImplSigil: (cty.typeImplSigil) {
      },
      AttrTypes: (map[string]cty.Type) (len=2) {
       (string) (len=4) "name": (cty.Type) {
        typeImpl: (cty.primitiveType) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         Kind: (cty.primitiveTypeKind) 83
        }
       },
       (string) (len=9) "namespace": (cty.Type) {
        typeImpl: (cty.primitiveType) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         Kind: (cty.primitiveTypeKind) 83
        }
       }
      }
     }
    },
    (string) (len=4) "spec": (cty.Type) {
     typeImpl: (cty.typeObject) {
      typeImplSigil: (cty.typeImplSigil) {
      },
      AttrTypes: (map[string]cty.Type) (len=20) {
       (string) (len=14) "externalLabels": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) (len=2) {
          (string) (len=7) "cluster": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=7) "product": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          }
         }
        }
       },
       (string) (len=18) "serviceAccountName": (cty.Type) {
        typeImpl: (cty.primitiveType) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         Kind: (cty.primitiveTypeKind) 83
        }
       },
       (string) (len=15) "securityContext": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) (len=3) {
          (string) (len=9) "runAsUser": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 78
           }
          },
          (string) (len=7) "fsGroup": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 78
           }
          },
          (string) (len=12) "runAsNonRoot": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 66
           }
          }
         }
        }
       },
       (string) (len=23) "additionalScrapeConfigs": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) (len=2) {
          (string) (len=3) "key": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=4) "name": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          }
         }
        }
       },
       (string) (len=5) "image": (cty.Type) {
        typeImpl: (cty.primitiveType) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         Kind: (cty.primitiveTypeKind) 83
        }
       },
       (string) (len=22) "serviceMonitorSelector": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) {
         }
        }
       },
       (string) (len=13) "probeSelector": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) {
         }
        }
       },
       (string) (len=31) "serviceMonitorNamespaceSelector": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) {
         }
        }
       },
       (string) (len=12) "ruleSelector": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) (len=1) {
          (string) (len=11) "matchLabels": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=2) {
             (string) (len=4) "role": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             },
             (string) (len=10) "prometheus": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             }
            }
           }
          }
         }
        }
       },
       (string) (len=12) "nodeSelector": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) (len=1) {
          (string) (len=4) "role": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          }
         }
        }
       },
       (string) (len=8) "replicas": (cty.Type) {
        typeImpl: (cty.primitiveType) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         Kind: (cty.primitiveTypeKind) 78
        }
       },
       (string) (len=18) "podMonitorSelector": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) {
         }
        }
       },
       (string) (len=6) "thanos": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) (len=3) {
          (string) (len=19) "objectStorageConfig": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=2) {
             (string) (len=3) "key": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             },
             (string) (len=4) "name": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             }
            }
           }
          },
          (string) (len=7) "version": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=9) "baseImage": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          }
         }
        }
       },
       (string) (len=8) "alerting": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) (len=1) {
          (string) (len=13) "alertmanagers": (cty.Type) {
           typeImpl: (cty.typeTuple) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            ElemTypes: ([]cty.Type) (len=1 cap=1) {
             (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=3) {
                (string) (len=4) "name": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=9) "namespace": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=4) "port": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             }
            }
           }
          }
         }
        }
       },
       (string) (len=22) "probeNamespaceSelector": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) {
         }
        }
       },
       (string) (len=7) "version": (cty.Type) {
        typeImpl: (cty.primitiveType) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         Kind: (cty.primitiveTypeKind) 83
        }
       },
       (string) (len=9) "resources": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) (len=2) {
          (string) (len=6) "limits": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=2) {
             (string) (len=6) "memory": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             },
             (string) (len=3) "cpu": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             }
            }
           }
          },
          (string) (len=8) "requests": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=2) {
             (string) (len=3) "cpu": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             },
             (string) (len=6) "memory": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             }
            }
           }
          }
         }
        }
       },
       (string) (len=7) "storage": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) (len=1) {
          (string) (len=19) "volumeClaimTemplate": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=1) {
             (string) (len=4) "spec": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=9) "resources": (cty.Type) {
                 typeImpl: (cty.typeObject) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  AttrTypes: (map[string]cty.Type) (len=1) {
                   (string) (len=8) "requests": (cty.Type) {
                    typeImpl: (cty.typeObject) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     AttrTypes: (map[string]cty.Type) (len=1) {
                      (string) (len=7) "storage": (cty.Type) {
                       typeImpl: (cty.primitiveType) {
                        typeImplSigil: (cty.typeImplSigil) {
                        },
                        Kind: (cty.primitiveTypeKind) 83
                       }
                      }
                     }
                    }
                   }
                  }
                 }
                },
                (string) (len=16) "storageClassName": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             }
            }
           }
          }
         }
        }
       },
       (string) (len=14) "scrapeInterval": (cty.Type) {
        typeImpl: (cty.primitiveType) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         Kind: (cty.primitiveTypeKind) 83
        }
       },
       (string) (len=27) "podMonitorNamespaceSelector": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) {
         }
        }
       }
      }
     }
    }
   }
  }
 },
 v: (map[string]interface {}) (len=4) {
  (string) (len=10) "apiVersion": (string) (len=24) "monitoring.coreos.com/v1",
  (string) (len=4) "kind": (string) (len=10) "Prometheus",
  (string) (len=8) "metadata": (map[string]interface {}) (len=2) {
   (string) (len=9) "namespace": (string) (len=15) "test-operator-1",
   (string) (len=4) "name": (string) (len=6) "test-1"
  },
  (string) (len=4) "spec": (map[string]interface {}) (len=20) {
   (string) (len=12) "ruleSelector": (map[string]interface {}) (len=1) {
    (string) (len=11) "matchLabels": (map[string]interface {}) (len=2) {
     (string) (len=10) "prometheus": (string) (len=3) "k8s",
     (string) (len=4) "role": (string) (len=11) "alert-rules"
    }
   },
   (string) (len=6) "thanos": (map[string]interface {}) (len=3) {
    (string) (len=9) "baseImage": (string) (len=21) "quay.io/thanos/thanos",
    (string) (len=19) "objectStorageConfig": (map[string]interface {}) (len=2) {
     (string) (len=3) "key": (string) (len=11) "thanos.yaml",
     (string) (len=4) "name": (string) (len=22) "thanos-objstore-config"
    },
    (string) (len=7) "version": (string) (len=7) "v0.16.0"
   },
   (string) (len=22) "probeNamespaceSelector": (map[string]interface {}) {
   },
   (string) (len=15) "securityContext": (map[string]interface {}) (len=3) {
    (string) (len=12) "runAsNonRoot": (bool) true,
    (string) (len=9) "runAsUser": (*big.Float)(0xc00033dbc0)(1000),
    (string) (len=7) "fsGroup": (*big.Float)(0xc00033d9e0)(2000)
   },
   (string) (len=31) "serviceMonitorNamespaceSelector": (map[string]interface {}) {
   },
   (string) (len=18) "podMonitorSelector": (map[string]interface {}) {
   },
   (string) (len=14) "scrapeInterval": (string) (len=3) "30s",
   (string) (len=18) "serviceAccountName": (string) (len=14) "prometheus-k8s",
   (string) (len=22) "serviceMonitorSelector": (map[string]interface {}) {
   },
   (string) (len=8) "alerting": (map[string]interface {}) (len=1) {
    (string) (len=13) "alertmanagers": ([]interface {}) (len=1 cap=1) {
     (map[string]interface {}) (len=3) {
      (string) (len=4) "name": (string) (len=17) "alertmanager-main",
      (string) (len=9) "namespace": (string) (len=10) "monitoring",
      (string) (len=4) "port": (string) (len=3) "web"
     }
    }
   },
   (string) (len=27) "podMonitorNamespaceSelector": (map[string]interface {}) {
   },
   (string) (len=13) "probeSelector": (map[string]interface {}) {
   },
   (string) (len=5) "image": (string) (len=37) "quay.io/prometheus/prometheus:v2.25.2",
   (string) (len=12) "nodeSelector": (map[string]interface {}) (len=1) {
    (string) (len=4) "role": (string) (len=8) "services"
   },
   (string) (len=14) "externalLabels": (map[string]interface {}) (len=2) {
    (string) (len=7) "cluster": (string) (len=12) "my-cluster-2",
    (string) (len=7) "product": (string) (len=13) "api beep boop"
   },
   (string) (len=7) "storage": (map[string]interface {}) (len=1) {
    (string) (len=19) "volumeClaimTemplate": (map[string]interface {}) (len=1) {
     (string) (len=4) "spec": (map[string]interface {}) (len=2) {
      (string) (len=9) "resources": (map[string]interface {}) (len=1) {
       (string) (len=8) "requests": (map[string]interface {}) (len=1) {
        (string) (len=7) "storage": (string) (len=4) "10Gi"
       }
      },
      (string) (len=16) "storageClassName": (string) (len=3) "gp2"
     }
    }
   },
   (string) (len=7) "version": (string) (len=7) "v2.25.2",
   (string) (len=9) "resources": (map[string]interface {}) (len=2) {
    (string) (len=6) "limits": (map[string]interface {}) (len=2) {
     (string) (len=6) "memory": (string) (len=6) "1024Mi",
     (string) (len=3) "cpu": (string) (len=4) "250m"
    },
    (string) (len=8) "requests": (map[string]interface {}) (len=2) {
     (string) (len=3) "cpu": (string) (len=4) "200m",
     (string) (len=6) "memory": (string) (len=5) "200Mi"
    }
   },
   (string) (len=8) "replicas": (*big.Float)(0xc00068ffb0)(1),
   (string) (len=23) "additionalScrapeConfigs": (map[string]interface {}) (len=2) {
    (string) (len=3) "key": (string) (len=26) "prometheus-additional.yaml",
    (string) (len=4) "name": (string) (len=25) "additional-scrape-configs"
   }
  }
 }
}
RAW provider 2021/04/04 00:03:02 [ApplyResourceChange][Update] transformed new state:
(cty.Value) {
 ty: (cty.Type) {
  typeImpl: (cty.typeObject) {
   typeImplSigil: (cty.typeImplSigil) {
   },
   AttrTypes: (map[string]cty.Type) (len=3) {
    (string) (len=8) "manifest": (cty.Type) {
     typeImpl: (cty.typeObject) {
      typeImplSigil: (cty.typeImplSigil) {
      },
      AttrTypes: (map[string]cty.Type) (len=4) {
       (string) (len=8) "metadata": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) (len=2) {
          (string) (len=9) "namespace": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=4) "name": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          }
         }
        }
       },
       (string) (len=4) "spec": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) (len=22) {
          (string) (len=23) "additionalScrapeConfigs": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=2) {
             (string) (len=4) "name": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             },
             (string) (len=3) "key": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             }
            }
           }
          },
          (string) (len=5) "image": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=6) "thanos": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=3) {
             (string) (len=19) "objectStorageConfig": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=3) "key": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=4) "name": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             },
             (string) (len=7) "version": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             },
             (string) (len=9) "baseImage": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             }
            }
           }
          },
          (string) (len=9) "resources": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=2) {
             (string) (len=6) "limits": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=6) "memory": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=3) "cpu": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             },
             (string) (len=8) "requests": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=3) "cpu": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=6) "memory": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=14) "externalLabels": (cty.Type) {
           typeImpl: (cty.typeMap) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            ElementTypeT: (cty.Type) {
             typeImpl: (cty.primitiveType) {
              typeImplSigil: (cty.typeImplSigil) {
              },
              Kind: (cty.primitiveTypeKind) 83
             }
            }
           }
          },
          (string) (len=12) "nodeSelector": (cty.Type) {
           typeImpl: (cty.typeMap) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            ElementTypeT: (cty.Type) {
             typeImpl: (cty.primitiveType) {
              typeImplSigil: (cty.typeImplSigil) {
              },
              Kind: (cty.primitiveTypeKind) 83
             }
            }
           }
          },
          (string) (len=8) "alerting": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=1) {
             (string) (len=13) "alertmanagers": (cty.Type) {
              typeImpl: (cty.typeTuple) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               ElemTypes: ([]cty.Type) (len=1 cap=1) {
                (cty.Type) {
                 typeImpl: (cty.typeObject) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  AttrTypes: (map[string]cty.Type) (len=3) {
                   (string) (len=4) "name": (cty.Type) {
                    typeImpl: (cty.primitiveType) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     Kind: (cty.primitiveTypeKind) 83
                    }
                   },
                   (string) (len=9) "namespace": (cty.Type) {
                    typeImpl: (cty.primitiveType) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     Kind: (cty.primitiveTypeKind) 83
                    }
                   },
                   (string) (len=4) "port": (cty.Type) {
                    typeImpl: (cty.primitiveType) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     Kind: (cty.primitiveTypeKind) 83
                    }
                   }
                  }
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=7) "version": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=9) "namespace": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=18) "serviceAccountName": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=31) "serviceMonitorNamespaceSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=14) "scrapeInterval": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=8) "replicas": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 78
           }
          },
          (string) (len=13) "probeSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=12) "ruleSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=1) {
             (string) (len=11) "matchLabels": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=4) "role": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=10) "prometheus": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=4) "name": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=22) "probeNamespaceSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=18) "podMonitorSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=7) "storage": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=1) {
             (string) (len=19) "volumeClaimTemplate": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=1) {
                (string) (len=4) "spec": (cty.Type) {
                 typeImpl: (cty.typeObject) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  AttrTypes: (map[string]cty.Type) (len=2) {
                   (string) (len=16) "storageClassName": (cty.Type) {
                    typeImpl: (cty.primitiveType) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     Kind: (cty.primitiveTypeKind) 83
                    }
                   },
                   (string) (len=9) "resources": (cty.Type) {
                    typeImpl: (cty.typeObject) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     AttrTypes: (map[string]cty.Type) (len=1) {
                      (string) (len=8) "requests": (cty.Type) {
                       typeImpl: (cty.typeObject) {
                        typeImplSigil: (cty.typeImplSigil) {
                        },
                        AttrTypes: (map[string]cty.Type) (len=1) {
                         (string) (len=7) "storage": (cty.Type) {
                          typeImpl: (cty.primitiveType) {
                           typeImplSigil: (cty.typeImplSigil) {
                           },
                           Kind: (cty.primitiveTypeKind) 83
                          }
                         }
                        }
                       }
                      }
                     }
                    }
                   }
                  }
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=15) "securityContext": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=3) {
             (string) (len=9) "runAsUser": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 78
              }
             },
             (string) (len=7) "fsGroup": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 78
              }
             },
             (string) (len=12) "runAsNonRoot": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 66
              }
             }
            }
           }
          },
          (string) (len=22) "serviceMonitorSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=27) "podMonitorNamespaceSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          }
         }
        }
       },
       (string) (len=10) "apiVersion": (cty.Type) {
        typeImpl: (cty.primitiveType) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         Kind: (cty.primitiveTypeKind) 83
        }
       },
       (string) (len=4) "kind": (cty.Type) {
        typeImpl: (cty.primitiveType) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         Kind: (cty.primitiveTypeKind) 83
        }
       }
      }
     }
    },
    (string) (len=6) "object": (cty.Type) {
     typeImpl: (cty.typeObject) {
      typeImplSigil: (cty.typeImplSigil) {
      },
      AttrTypes: (map[string]cty.Type) (len=4) {
       (string) (len=10) "apiVersion": (cty.Type) {
        typeImpl: (cty.primitiveType) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         Kind: (cty.primitiveTypeKind) 83
        }
       },
       (string) (len=4) "kind": (cty.Type) {
        typeImpl: (cty.primitiveType) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         Kind: (cty.primitiveTypeKind) 83
        }
       },
       (string) (len=8) "metadata": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) (len=2) {
          (string) (len=4) "name": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=9) "namespace": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          }
         }
        }
       },
       (string) (len=4) "spec": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) (len=20) {
          (string) (len=27) "podMonitorNamespaceSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=14) "scrapeInterval": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=31) "serviceMonitorNamespaceSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=14) "externalLabels": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=2) {
             (string) (len=7) "cluster": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             },
             (string) (len=7) "product": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             }
            }
           }
          },
          (string) (len=18) "serviceAccountName": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=15) "securityContext": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=3) {
             (string) (len=12) "runAsNonRoot": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 66
              }
             },
             (string) (len=9) "runAsUser": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 78
              }
             },
             (string) (len=7) "fsGroup": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 78
              }
             }
            }
           }
          },
          (string) (len=23) "additionalScrapeConfigs": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=2) {
             (string) (len=3) "key": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             },
             (string) (len=4) "name": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             }
            }
           }
          },
          (string) (len=5) "image": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=22) "serviceMonitorSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=13) "probeSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=18) "podMonitorSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=12) "ruleSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=1) {
             (string) (len=11) "matchLabels": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=10) "prometheus": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=4) "role": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=12) "nodeSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=1) {
             (string) (len=4) "role": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             }
            }
           }
          },
          (string) (len=8) "replicas": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 78
           }
          },
          (string) (len=7) "storage": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=1) {
             (string) (len=19) "volumeClaimTemplate": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=1) {
                (string) (len=4) "spec": (cty.Type) {
                 typeImpl: (cty.typeObject) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  AttrTypes: (map[string]cty.Type) (len=2) {
                   (string) (len=9) "resources": (cty.Type) {
                    typeImpl: (cty.typeObject) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     AttrTypes: (map[string]cty.Type) (len=1) {
                      (string) (len=8) "requests": (cty.Type) {
                       typeImpl: (cty.typeObject) {
                        typeImplSigil: (cty.typeImplSigil) {
                        },
                        AttrTypes: (map[string]cty.Type) (len=1) {
                         (string) (len=7) "storage": (cty.Type) {
                          typeImpl: (cty.primitiveType) {
                           typeImplSigil: (cty.typeImplSigil) {
                           },
                           Kind: (cty.primitiveTypeKind) 83
                          }
                         }
                        }
                       }
                      }
                     }
                    }
                   },
                   (string) (len=16) "storageClassName": (cty.Type) {
                    typeImpl: (cty.primitiveType) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     Kind: (cty.primitiveTypeKind) 83
                    }
                   }
                  }
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=6) "thanos": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=3) {
             (string) (len=19) "objectStorageConfig": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=3) "key": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=4) "name": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             },
             (string) (len=7) "version": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             },
             (string) (len=9) "baseImage": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             }
            }
           }
          },
          (string) (len=8) "alerting": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=1) {
             (string) (len=13) "alertmanagers": (cty.Type) {
              typeImpl: (cty.typeTuple) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               ElemTypes: ([]cty.Type) (len=1 cap=1) {
                (cty.Type) {
                 typeImpl: (cty.typeObject) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  AttrTypes: (map[string]cty.Type) (len=3) {
                   (string) (len=4) "name": (cty.Type) {
                    typeImpl: (cty.primitiveType) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     Kind: (cty.primitiveTypeKind) 83
                    }
                   },
                   (string) (len=9) "namespace": (cty.Type) {
                    typeImpl: (cty.primitiveType) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     Kind: (cty.primitiveTypeKind) 83
                    }
                   },
                   (string) (len=4) "port": (cty.Type) {
                    typeImpl: (cty.primitiveType) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     Kind: (cty.primitiveTypeKind) 83
                    }
                   }
                  }
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=22) "probeNamespaceSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=7) "version": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=9) "resources": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=2) {
             (string) (len=6) "limits": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=6) "memory": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=3) "cpu": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             },
             (string) (len=8) "requests": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=3) "cpu": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=6) "memory": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             }
            }
           }
          }
         }
        }
       }
      }
     }
    },
    (string) (len=8) "wait_for": (cty.Type) {
     typeImpl: (cty.typeObject) {
      typeImplSigil: (cty.typeImplSigil) {
      },
      AttrTypes: (map[string]cty.Type) (len=1) {
       (string) (len=6) "fields": (cty.Type) {
        typeImpl: (cty.typeMap) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         ElementTypeT: (cty.Type) {
          typeImpl: (cty.primitiveType) {
           typeImplSigil: (cty.typeImplSigil) {
           },
           Kind: (cty.primitiveTypeKind) 83
          }
         }
        }
       }
      }
     }
    }
   }
  }
 },
 v: (map[string]interface {}) (len=3) {
  (string) (len=8) "manifest": (map[string]interface {}) (len=4) {
   (string) (len=4) "spec": (map[string]interface {}) (len=22) {
    (string) (len=22) "serviceMonitorSelector": (map[string]interface {}) {
    },
    (string) (len=9) "namespace": (string) (len=15) "test-operator-1",
    (string) (len=8) "alerting": (map[string]interface {}) (len=1) {
     (string) (len=13) "alertmanagers": ([]interface {}) (len=1 cap=1) {
      (map[string]interface {}) (len=3) {
       (string) (len=4) "port": (string) (len=3) "web",
       (string) (len=4) "name": (string) (len=17) "alertmanager-main",
       (string) (len=9) "namespace": (string) (len=10) "monitoring"
      }
     }
    },
    (string) (len=12) "ruleSelector": (map[string]interface {}) (len=1) {
     (string) (len=11) "matchLabels": (map[string]interface {}) (len=2) {
      (string) (len=10) "prometheus": (string) (len=3) "k8s",
      (string) (len=4) "role": (string) (len=11) "alert-rules"
     }
    },
    (string) (len=13) "probeSelector": (map[string]interface {}) {
    },
    (string) (len=18) "podMonitorSelector": (map[string]interface {}) {
    },
    (string) (len=7) "storage": (map[string]interface {}) (len=1) {
     (string) (len=19) "volumeClaimTemplate": (map[string]interface {}) (len=1) {
      (string) (len=4) "spec": (map[string]interface {}) (len=2) {
       (string) (len=9) "resources": (map[string]interface {}) (len=1) {
        (string) (len=8) "requests": (map[string]interface {}) (len=1) {
         (string) (len=7) "storage": (string) (len=4) "10Gi"
        }
       },
       (string) (len=16) "storageClassName": (string) (len=3) "gp2"
      }
     }
    },
    (string) (len=12) "nodeSelector": (map[string]interface {}) (len=1) {
     (string) (len=4) "role": (string) (len=8) "services"
    },
    (string) (len=5) "image": (string) (len=37) "quay.io/prometheus/prometheus:v2.25.2",
    (string) (len=9) "resources": (map[string]interface {}) (len=2) {
     (string) (len=6) "limits": (map[string]interface {}) (len=2) {
      (string) (len=6) "memory": (string) (len=6) "1024Mi",
      (string) (len=3) "cpu": (string) (len=4) "250m"
     },
     (string) (len=8) "requests": (map[string]interface {}) (len=2) {
      (string) (len=6) "memory": (string) (len=5) "200Mi",
      (string) (len=3) "cpu": (string) (len=4) "200m"
     }
    },
    (string) (len=6) "thanos": (map[string]interface {}) (len=3) {
     (string) (len=7) "version": (string) (len=7) "v0.16.0",
     (string) (len=9) "baseImage": (string) (len=21) "quay.io/thanos/thanos",
     (string) (len=19) "objectStorageConfig": (map[string]interface {}) (len=2) {
      (string) (len=4) "name": (string) (len=22) "thanos-objstore-config",
      (string) (len=3) "key": (string) (len=11) "thanos.yaml"
     }
    },
    (string) (len=31) "serviceMonitorNamespaceSelector": (map[string]interface {}) {
    },
    (string) (len=23) "additionalScrapeConfigs": (map[string]interface {}) (len=2) {
     (string) (len=4) "name": (string) (len=25) "additional-scrape-configs",
     (string) (len=3) "key": (string) (len=26) "prometheus-additional.yaml"
    },
    (string) (len=27) "podMonitorNamespaceSelector": (map[string]interface {}) {
    },
    (string) (len=15) "securityContext": (map[string]interface {}) (len=3) {
     (string) (len=7) "fsGroup": (*big.Float)(0xc0001fd170)(2000),
     (string) (len=12) "runAsNonRoot": (bool) true,
     (string) (len=9) "runAsUser": (*big.Float)(0xc0001fd1a0)(1000)
    },
    (string) (len=4) "name": (string) (len=6) "test-1",
    (string) (len=7) "version": (string) (len=7) "v2.25.2",
    (string) (len=14) "scrapeInterval": (string) (len=3) "30s",
    (string) (len=8) "replicas": (*big.Float)(0xc0001fcf60)(1),
    (string) (len=14) "externalLabels": (map[string]interface {}) (len=2) {
     (string) (len=7) "cluster": (string) (len=12) "my-cluster-2",
     (string) (len=7) "product": (string) (len=13) "api beep boop"
    },
    (string) (len=18) "serviceAccountName": (string) (len=14) "prometheus-k8s",
    (string) (len=22) "probeNamespaceSelector": (map[string]interface {}) {
    }
   },
   (string) (len=10) "apiVersion": (string) (len=24) "monitoring.coreos.com/v1",
   (string) (len=4) "kind": (string) (len=10) "Prometheus",
   (string) (len=8) "metadata": (map[string]interface {}) (len=2) {
    (string) (len=4) "name": (string) (len=6) "test-1",
    (string) (len=9) "namespace": (string) (len=15) "test-operator-1"
   }
  },
  (string) (len=6) "object": (map[string]interface {}) (len=4) {
   (string) (len=10) "apiVersion": (string) (len=24) "monitoring.coreos.com/v1",
   (string) (len=4) "kind": (string) (len=10) "Prometheus",
   (string) (len=8) "metadata": (map[string]interface {}) (len=2) {
    (string) (len=4) "name": (string) (len=6) "test-1",
    (string) (len=9) "namespace": (string) (len=15) "test-operator-1"
   },
   (string) (len=4) "spec": (map[string]interface {}) (len=20) {
    (string) (len=12) "ruleSelector": (map[string]interface {}) (len=1) {
     (string) (len=11) "matchLabels": (map[string]interface {}) (len=2) {
      (string) (len=10) "prometheus": (string) (len=3) "k8s",
      (string) (len=4) "role": (string) (len=11) "alert-rules"
     }
    },
    (string) (len=6) "thanos": (map[string]interface {}) (len=3) {
     (string) (len=7) "version": (string) (len=7) "v0.16.0",
     (string) (len=9) "baseImage": (string) (len=21) "quay.io/thanos/thanos",
     (string) (len=19) "objectStorageConfig": (map[string]interface {}) (len=2) {
      (string) (len=3) "key": (string) (len=11) "thanos.yaml",
      (string) (len=4) "name": (string) (len=22) "thanos-objstore-config"
     }
    },
    (string) (len=22) "probeNamespaceSelector": (map[string]interface {}) {
    },
    (string) (len=31) "serviceMonitorNamespaceSelector": (map[string]interface {}) {
    },
    (string) (len=18) "podMonitorSelector": (map[string]interface {}) {
    },
    (string) (len=14) "scrapeInterval": (string) (len=3) "30s",
    (string) (len=15) "securityContext": (map[string]interface {}) (len=3) {
     (string) (len=7) "fsGroup": (*big.Float)(0xc00033d9e0)(2000),
     (string) (len=12) "runAsNonRoot": (bool) true,
     (string) (len=9) "runAsUser": (*big.Float)(0xc00033dbc0)(1000)
    },
    (string) (len=5) "image": (string) (len=37) "quay.io/prometheus/prometheus:v2.25.2",
    (string) (len=12) "nodeSelector": (map[string]interface {}) (len=1) {
     (string) (len=4) "role": (string) (len=8) "services"
    },
    (string) (len=14) "externalLabels": (map[string]interface {}) (len=2) {
     (string) (len=7) "cluster": (string) (len=12) "my-cluster-2",
     (string) (len=7) "product": (string) (len=13) "api beep boop"
    },
    (string) (len=18) "serviceAccountName": (string) (len=14) "prometheus-k8s",
    (string) (len=22) "serviceMonitorSelector": (map[string]interface {}) {
    },
    (string) (len=8) "alerting": (map[string]interface {}) (len=1) {
     (string) (len=13) "alertmanagers": ([]interface {}) (len=1 cap=1) {
      (map[string]interface {}) (len=3) {
       (string) (len=4) "name": (string) (len=17) "alertmanager-main",
       (string) (len=9) "namespace": (string) (len=10) "monitoring",
       (string) (len=4) "port": (string) (len=3) "web"
      }
     }
    },
    (string) (len=27) "podMonitorNamespaceSelector": (map[string]interface {}) {
    },
    (string) (len=13) "probeSelector": (map[string]interface {}) {
    },
    (string) (len=7) "storage": (map[string]interface {}) (len=1) {
     (string) (len=19) "volumeClaimTemplate": (map[string]interface {}) (len=1) {
      (string) (len=4) "spec": (map[string]interface {}) (len=2) {
       (string) (len=9) "resources": (map[string]interface {}) (len=1) {
        (string) (len=8) "requests": (map[string]interface {}) (len=1) {
         (string) (len=7) "storage": (string) (len=4) "10Gi"
        }
       },
       (string) (len=16) "storageClassName": (string) (len=3) "gp2"
      }
     }
    },
    (string) (len=9) "resources": (map[string]interface {}) (len=2) {
     (string) (len=6) "limits": (map[string]interface {}) (len=2) {
      (string) (len=3) "cpu": (string) (len=4) "250m",
      (string) (len=6) "memory": (string) (len=6) "1024Mi"
     },
     (string) (len=8) "requests": (map[string]interface {}) (len=2) {
      (string) (len=3) "cpu": (string) (len=4) "200m",
      (string) (len=6) "memory": (string) (len=5) "200Mi"
     }
    },
    (string) (len=8) "replicas": (*big.Float)(0xc00068ffb0)(1),
    (string) (len=23) "additionalScrapeConfigs": (map[string]interface {}) (len=2) {
     (string) (len=3) "key": (string) (len=26) "prometheus-additional.yaml",
     (string) (len=4) "name": (string) (len=25) "additional-scrape-configs"
    },
    (string) (len=7) "version": (string) (len=7) "v2.25.2"
   }
  },
  (string) (len=8) "wait_for": (interface {}) <nil>
 }
}
RAW provider 2021/04/04 00:03:02 Finished
RAW provider 2021/04/04 00:03:43 Starting up with command line: []string{".terraform/providers/registry.terraform.io/hashicorp/kubernetes-alpha/0.2.1/darwin_amd64/terraform-provider-kubernetes-alpha_v0.2.1_x5"}
RAW provider 2021/04/04 00:03:43 Finished
RAW provider 2021/04/04 00:03:43 Starting up with command line: []string{".terraform/providers/registry.terraform.io/hashicorp/kubernetes-alpha/0.2.1/darwin_amd64/terraform-provider-kubernetes-alpha_v0.2.1_x5"}
RAW provider 2021/04/04 00:03:43 Finished
RAW provider 2021/04/04 00:03:46 Starting up with command line: []string{".terraform/providers/registry.terraform.io/hashicorp/kubernetes-alpha/0.2.1/darwin_amd64/terraform-provider-kubernetes-alpha_v0.2.1_x5"}
RAW provider 2021/04/04 00:03:46 [Configure][ClientConfig] (rest.Config) &rest.Config{Host:"https://5BE469949E293A3A880C6FE683A7079F.gr7.us-east-1.eks.amazonaws.com", APIPath:"", ContentConfig:rest.ContentConfig{AcceptContentTypes:"", ContentType:"", GroupVersion:(*schema.GroupVersion)(nil), NegotiatedSerializer:runtime.NegotiatedSerializer(nil)}, Username:"", Password:"", BearerToken:"--- REDACTED ---", BearerTokenFile:"", Impersonate:rest.ImpersonationConfig{UserName:"", Groups:[]string(nil), Extra:map[string][]string(nil)}, AuthProvider:<nil>, AuthConfigPersister:rest.AuthProviderConfigPersister(nil), ExecProvider:<nil>, TLSClientConfig:rest.sanitizedTLSClientConfig{Insecure:false, ServerName:"", CertFile:"", KeyFile:"", CAFile:"", CertData:[]uint8(nil), KeyData:[]uint8(nil), CAData:[]uint8{0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x42, 0x45, 0x47, 0x49, 0x4e, 0x20, 0x43, 0x45, 0x52, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x45, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0xa, 0x4d, 0x49, 0x49, 0x43, 0x79, 0x44, 0x43, 0x43, 0x41, 0x62, 0x43, 0x67, 0x41, 0x77, 0x49, 0x42, 0x41, 0x67, 0x49, 0x42, 0x41, 0x44, 0x41, 0x4e, 0x42, 0x67, 0x6b, 0x71, 0x68, 0x6b, 0x69, 0x47, 0x39, 0x77, 0x30, 0x42, 0x41, 0x51, 0x73, 0x46, 0x41, 0x44, 0x41, 0x56, 0x4d, 0x52, 0x4d, 0x77, 0x45, 0x51, 0x59, 0x44, 0x56, 0x51, 0x51, 0x44, 0x45, 0x77, 0x70, 0x72, 0x64, 0x57, 0x4a, 0x6c, 0xa, 0x63, 0x6d, 0x35, 0x6c, 0x64, 0x47, 0x56, 0x7a, 0x4d, 0x42, 0x34, 0x58, 0x44, 0x54, 0x49, 0x77, 0x4d, 0x54, 0x41, 0x79, 0x4d, 0x54, 0x49, 0x78, 0x4e, 0x44, 0x63, 0x77, 0x4e, 0x46, 0x6f, 0x58, 0x44, 0x54, 0x4d, 0x77, 0x4d, 0x54, 0x41, 0x78, 0x4f, 0x54, 0x49, 0x78, 0x4e, 0x44, 0x63, 0x77, 0x4e, 0x46, 0x6f, 0x77, 0x46, 0x54, 0x45, 0x54, 0x4d, 0x42, 0x45, 0x47, 0x41, 0x31, 0x55, 0x45, 0xa, 0x41, 0x78, 0x4d, 0x4b, 0x61, 0x33, 0x56, 0x69, 0x5a, 0x58, 0x4a, 0x75, 0x5a, 0x58, 0x52, 0x6c, 0x63, 0x7a, 0x43, 0x43, 0x41, 0x53, 0x49, 0x77, 0x44, 0x51, 0x59, 0x4a, 0x4b, 0x6f, 0x5a, 0x49, 0x68, 0x76, 0x63, 0x4e, 0x41, 0x51, 0x45, 0x42, 0x42, 0x51, 0x41, 0x44, 0x67, 0x67, 0x45, 0x50, 0x41, 0x44, 0x43, 0x43, 0x41, 0x51, 0x6f, 0x43, 0x67, 0x67, 0x45, 0x42, 0x41, 0x4c, 0x42, 0x62, 0xa, 0x50, 0x46, 0x2b, 0x39, 0x30, 0x52, 0x6f, 0x67, 0x48, 0x58, 0x41, 0x79, 0x46, 0x56, 0x74, 0x41, 0x2b, 0x7a, 0x43, 0x46, 0x6d, 0x33, 0x56, 0x53, 0x31, 0x61, 0x59, 0x59, 0x79, 0x4c, 0x7a, 0x2f, 0x32, 0x51, 0x48, 0x76, 0x37, 0x4a, 0x65, 0x45, 0x48, 0x71, 0x49, 0x77, 0x66, 0x63, 0x75, 0x7a, 0x56, 0x71, 0x58, 0x38, 0x66, 0x4b, 0x70, 0x33, 0x68, 0x4c, 0x79, 0x79, 0x62, 0x6b, 0x2f, 0x64, 0xa, 0x55, 0x47, 0x49, 0x45, 0x41, 0x30, 0x75, 0x54, 0x6a, 0x4c, 0x67, 0x67, 0x71, 0x66, 0x66, 0x6f, 0x65, 0x6f, 0x31, 0x38, 0x7a, 0x35, 0x48, 0x4a, 0x6e, 0x73, 0x41, 0x6f, 0x6b, 0x43, 0x38, 0x64, 0x7a, 0x70, 0x5a, 0x43, 0x6b, 0x67, 0x31, 0x73, 0x78, 0x45, 0x79, 0x62, 0x2f, 0x2b, 0x39, 0x6d, 0x31, 0x69, 0x49, 0x67, 0x56, 0x33, 0x59, 0x39, 0x74, 0x48, 0x44, 0x45, 0x59, 0x4a, 0x6c, 0x37, 0xa, 0x56, 0x77, 0x51, 0x68, 0x70, 0x38, 0x48, 0x6e, 0x33, 0x46, 0x49, 0x2f, 0x4a, 0x63, 0x77, 0x44, 0x49, 0x6b, 0x55, 0x36, 0x45, 0x6a, 0x65, 0x46, 0x30, 0x71, 0x4c, 0x4b, 0x42, 0x75, 0x54, 0x31, 0x6e, 0x66, 0x45, 0x74, 0x6f, 0x68, 0x54, 0x4e, 0x37, 0x78, 0x70, 0x4e, 0x43, 0x76, 0x44, 0x61, 0x36, 0x44, 0x53, 0x32, 0x4c, 0x54, 0x57, 0x39, 0x6f, 0x6e, 0x74, 0x6d, 0x4b, 0x79, 0x45, 0x47, 0xa, 0x78, 0x6c, 0x73, 0x78, 0x74, 0x6b, 0x64, 0x47, 0x45, 0x37, 0x79, 0x55, 0x55, 0x67, 0x77, 0x52, 0x53, 0x72, 0x79, 0x6a, 0x41, 0x65, 0x76, 0x41, 0x79, 0x5a, 0x64, 0x37, 0x71, 0x45, 0x72, 0x67, 0x74, 0x41, 0x56, 0x6c, 0x35, 0x70, 0x44, 0x46, 0x48, 0x30, 0x74, 0x42, 0x48, 0x53, 0x74, 0x67, 0x6b, 0x41, 0x51, 0x59, 0x57, 0x48, 0x77, 0x78, 0x62, 0x62, 0x79, 0x70, 0x59, 0x37, 0x33, 0x4c, 0xa, 0x5a, 0x43, 0x51, 0x73, 0x2b, 0x4c, 0x35, 0x44, 0x6d, 0x67, 0x2f, 0x43, 0x6e, 0x57, 0x31, 0x75, 0x62, 0x47, 0x46, 0x32, 0x59, 0x75, 0x47, 0x33, 0x79, 0x46, 0x59, 0x4b, 0x31, 0x6c, 0x32, 0x4e, 0x46, 0x78, 0x2f, 0x74, 0x67, 0x48, 0x71, 0x4e, 0x78, 0x56, 0x48, 0x6a, 0x31, 0x53, 0x42, 0x5a, 0x32, 0x41, 0x54, 0x76, 0x61, 0x4b, 0x47, 0x6f, 0x6c, 0x56, 0x35, 0x53, 0x69, 0x57, 0x33, 0x49, 0xa, 0x68, 0x45, 0x46, 0x46, 0x2b, 0x77, 0x4b, 0x50, 0x73, 0x63, 0x46, 0x59, 0x4f, 0x49, 0x76, 0x53, 0x4d, 0x44, 0x38, 0x43, 0x41, 0x77, 0x45, 0x41, 0x41, 0x61, 0x4d, 0x6a, 0x4d, 0x43, 0x45, 0x77, 0x44, 0x67, 0x59, 0x44, 0x56, 0x52, 0x30, 0x50, 0x41, 0x51, 0x48, 0x2f, 0x42, 0x41, 0x51, 0x44, 0x41, 0x67, 0x4b, 0x6b, 0x4d, 0x41, 0x38, 0x47, 0x41, 0x31, 0x55, 0x64, 0x45, 0x77, 0x45, 0x42, 0xa, 0x2f, 0x77, 0x51, 0x46, 0x4d, 0x41, 0x4d, 0x42, 0x41, 0x66, 0x38, 0x77, 0x44, 0x51, 0x59, 0x4a, 0x4b, 0x6f, 0x5a, 0x49, 0x68, 0x76, 0x63, 0x4e, 0x41, 0x51, 0x45, 0x4c, 0x42, 0x51, 0x41, 0x44, 0x67, 0x67, 0x45, 0x42, 0x41, 0x46, 0x2b, 0x59, 0x44, 0x46, 0x31, 0x4e, 0x4b, 0x65, 0x6f, 0x41, 0x38, 0x49, 0x72, 0x65, 0x4f, 0x78, 0x4d, 0x2f, 0x4f, 0x45, 0x59, 0x70, 0x54, 0x44, 0x6a, 0x76, 0xa, 0x50, 0x64, 0x55, 0x69, 0x31, 0x61, 0x37, 0x79, 0x75, 0x74, 0x2b, 0x30, 0x39, 0x37, 0x70, 0x36, 0x6f, 0x2f, 0x32, 0x41, 0x53, 0x35, 0x56, 0x52, 0x6a, 0x70, 0x32, 0x57, 0x55, 0x7a, 0x72, 0x4b, 0x79, 0x73, 0x57, 0x75, 0x65, 0x74, 0x55, 0x45, 0x2b, 0x72, 0x6e, 0x41, 0x70, 0x33, 0x39, 0x37, 0x2f, 0x6a, 0x78, 0x75, 0x73, 0x54, 0x78, 0x2f, 0x50, 0x76, 0x58, 0x57, 0x44, 0x34, 0x75, 0x61, 0xa, 0x51, 0x32, 0x7a, 0x49, 0x38, 0x44, 0x59, 0x62, 0x6b, 0x64, 0x75, 0x63, 0x4f, 0x47, 0x67, 0x4a, 0x31, 0x78, 0x61, 0x4e, 0x70, 0x6b, 0x75, 0x62, 0x48, 0x33, 0x64, 0x61, 0x48, 0x59, 0x5a, 0x2b, 0x48, 0x38, 0x71, 0x42, 0x70, 0x2f, 0x74, 0x50, 0x41, 0x42, 0x57, 0x73, 0x32, 0x35, 0x66, 0x78, 0x78, 0x31, 0x53, 0x69, 0x75, 0x38, 0x4e, 0x38, 0x4b, 0x59, 0x4a, 0x2b, 0x32, 0x49, 0x68, 0x75, 0xa, 0x61, 0x64, 0x42, 0x71, 0x61, 0x73, 0x56, 0x4a, 0x6c, 0x79, 0x55, 0x4d, 0x79, 0x50, 0x49, 0x7a, 0x4b, 0x46, 0x36, 0x6e, 0x4c, 0x54, 0x57, 0x66, 0x59, 0x5a, 0x4f, 0x31, 0x76, 0x30, 0x32, 0x36, 0x4b, 0x36, 0x6f, 0x31, 0x63, 0x39, 0x78, 0x63, 0x74, 0x69, 0x77, 0x54, 0x6a, 0x54, 0x59, 0x43, 0x34, 0x7a, 0x38, 0x65, 0x4b, 0x69, 0x41, 0x4c, 0x49, 0x36, 0x33, 0x33, 0x34, 0x74, 0x4e, 0x51, 0xa, 0x33, 0x32, 0x5a, 0x77, 0x4f, 0x75, 0x73, 0x58, 0x6e, 0x4a, 0x33, 0x6b, 0x34, 0x75, 0x42, 0x57, 0x70, 0x79, 0x31, 0x69, 0x39, 0x6f, 0x4e, 0x6b, 0x75, 0x75, 0x48, 0x45, 0x64, 0x69, 0x48, 0x37, 0x36, 0x30, 0x35, 0x4a, 0x31, 0x66, 0x77, 0x57, 0x53, 0x30, 0x63, 0x65, 0x35, 0x67, 0x49, 0x50, 0x35, 0x6a, 0x6e, 0x4e, 0x73, 0x4d, 0x64, 0x61, 0x44, 0x49, 0x2f, 0x39, 0x54, 0x4a, 0x4e, 0x6e, 0xa, 0x70, 0x67, 0x2b, 0x41, 0x58, 0x55, 0x4a, 0x78, 0x46, 0x30, 0x4f, 0x77, 0x50, 0x42, 0x63, 0x45, 0x37, 0x4a, 0x41, 0x43, 0x64, 0x52, 0x6d, 0x58, 0x73, 0x2b, 0x33, 0x78, 0x6c, 0x54, 0x59, 0x4a, 0x76, 0x70, 0x53, 0x75, 0x32, 0x4b, 0x65, 0x6c, 0x4c, 0x55, 0x6a, 0x52, 0x34, 0x5a, 0x4c, 0x72, 0x5a, 0x34, 0x78, 0x39, 0x4c, 0x45, 0x36, 0x54, 0x65, 0x77, 0x34, 0x3d, 0xa, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x45, 0x4e, 0x44, 0x20, 0x43, 0x45, 0x52, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x45, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0xa}, NextProtos:[]string(nil)}, UserAgent:"", DisableCompression:false, Transport:http.RoundTripper(nil), WrapTransport:(transport.WrapperFunc)(nil), QPS:0, Burst:0, RateLimiter:flowcontrol.RateLimiter(nil), Timeout:0, Dial:(func(context.Context, string, string) (net.Conn, error))(nil)}

RAW provider 2021/04/04 00:03:49 Finished
RAW provider 2021/04/04 00:03:49 Starting up with command line: []string{".terraform/providers/registry.terraform.io/hashicorp/kubernetes-alpha/0.2.1/darwin_amd64/terraform-provider-kubernetes-alpha_v0.2.1_x5"}
RAW provider 2021/04/04 00:03:49 [Configure][ClientConfig] (rest.Config) &rest.Config{Host:"https://5BE469949E293A3A880C6FE683A7079F.gr7.us-east-1.eks.amazonaws.com", APIPath:"", ContentConfig:rest.ContentConfig{AcceptContentTypes:"", ContentType:"", GroupVersion:(*schema.GroupVersion)(nil), NegotiatedSerializer:runtime.NegotiatedSerializer(nil)}, Username:"", Password:"", BearerToken:"--- REDACTED ---", BearerTokenFile:"", Impersonate:rest.ImpersonationConfig{UserName:"", Groups:[]string(nil), Extra:map[string][]string(nil)}, AuthProvider:<nil>, AuthConfigPersister:rest.AuthProviderConfigPersister(nil), ExecProvider:<nil>, TLSClientConfig:rest.sanitizedTLSClientConfig{Insecure:false, ServerName:"", CertFile:"", KeyFile:"", CAFile:"", CertData:[]uint8(nil), KeyData:[]uint8(nil), CAData:[]uint8{0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x42, 0x45, 0x47, 0x49, 0x4e, 0x20, 0x43, 0x45, 0x52, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x45, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0xa, 0x4d, 0x49, 0x49, 0x43, 0x79, 0x44, 0x43, 0x43, 0x41, 0x62, 0x43, 0x67, 0x41, 0x77, 0x49, 0x42, 0x41, 0x67, 0x49, 0x42, 0x41, 0x44, 0x41, 0x4e, 0x42, 0x67, 0x6b, 0x71, 0x68, 0x6b, 0x69, 0x47, 0x39, 0x77, 0x30, 0x42, 0x41, 0x51, 0x73, 0x46, 0x41, 0x44, 0x41, 0x56, 0x4d, 0x52, 0x4d, 0x77, 0x45, 0x51, 0x59, 0x44, 0x56, 0x51, 0x51, 0x44, 0x45, 0x77, 0x70, 0x72, 0x64, 0x57, 0x4a, 0x6c, 0xa, 0x63, 0x6d, 0x35, 0x6c, 0x64, 0x47, 0x56, 0x7a, 0x4d, 0x42, 0x34, 0x58, 0x44, 0x54, 0x49, 0x77, 0x4d, 0x54, 0x41, 0x79, 0x4d, 0x54, 0x49, 0x78, 0x4e, 0x44, 0x63, 0x77, 0x4e, 0x46, 0x6f, 0x58, 0x44, 0x54, 0x4d, 0x77, 0x4d, 0x54, 0x41, 0x78, 0x4f, 0x54, 0x49, 0x78, 0x4e, 0x44, 0x63, 0x77, 0x4e, 0x46, 0x6f, 0x77, 0x46, 0x54, 0x45, 0x54, 0x4d, 0x42, 0x45, 0x47, 0x41, 0x31, 0x55, 0x45, 0xa, 0x41, 0x78, 0x4d, 0x4b, 0x61, 0x33, 0x56, 0x69, 0x5a, 0x58, 0x4a, 0x75, 0x5a, 0x58, 0x52, 0x6c, 0x63, 0x7a, 0x43, 0x43, 0x41, 0x53, 0x49, 0x77, 0x44, 0x51, 0x59, 0x4a, 0x4b, 0x6f, 0x5a, 0x49, 0x68, 0x76, 0x63, 0x4e, 0x41, 0x51, 0x45, 0x42, 0x42, 0x51, 0x41, 0x44, 0x67, 0x67, 0x45, 0x50, 0x41, 0x44, 0x43, 0x43, 0x41, 0x51, 0x6f, 0x43, 0x67, 0x67, 0x45, 0x42, 0x41, 0x4c, 0x42, 0x62, 0xa, 0x50, 0x46, 0x2b, 0x39, 0x30, 0x52, 0x6f, 0x67, 0x48, 0x58, 0x41, 0x79, 0x46, 0x56, 0x74, 0x41, 0x2b, 0x7a, 0x43, 0x46, 0x6d, 0x33, 0x56, 0x53, 0x31, 0x61, 0x59, 0x59, 0x79, 0x4c, 0x7a, 0x2f, 0x32, 0x51, 0x48, 0x76, 0x37, 0x4a, 0x65, 0x45, 0x48, 0x71, 0x49, 0x77, 0x66, 0x63, 0x75, 0x7a, 0x56, 0x71, 0x58, 0x38, 0x66, 0x4b, 0x70, 0x33, 0x68, 0x4c, 0x79, 0x79, 0x62, 0x6b, 0x2f, 0x64, 0xa, 0x55, 0x47, 0x49, 0x45, 0x41, 0x30, 0x75, 0x54, 0x6a, 0x4c, 0x67, 0x67, 0x71, 0x66, 0x66, 0x6f, 0x65, 0x6f, 0x31, 0x38, 0x7a, 0x35, 0x48, 0x4a, 0x6e, 0x73, 0x41, 0x6f, 0x6b, 0x43, 0x38, 0x64, 0x7a, 0x70, 0x5a, 0x43, 0x6b, 0x67, 0x31, 0x73, 0x78, 0x45, 0x79, 0x62, 0x2f, 0x2b, 0x39, 0x6d, 0x31, 0x69, 0x49, 0x67, 0x56, 0x33, 0x59, 0x39, 0x74, 0x48, 0x44, 0x45, 0x59, 0x4a, 0x6c, 0x37, 0xa, 0x56, 0x77, 0x51, 0x68, 0x70, 0x38, 0x48, 0x6e, 0x33, 0x46, 0x49, 0x2f, 0x4a, 0x63, 0x77, 0x44, 0x49, 0x6b, 0x55, 0x36, 0x45, 0x6a, 0x65, 0x46, 0x30, 0x71, 0x4c, 0x4b, 0x42, 0x75, 0x54, 0x31, 0x6e, 0x66, 0x45, 0x74, 0x6f, 0x68, 0x54, 0x4e, 0x37, 0x78, 0x70, 0x4e, 0x43, 0x76, 0x44, 0x61, 0x36, 0x44, 0x53, 0x32, 0x4c, 0x54, 0x57, 0x39, 0x6f, 0x6e, 0x74, 0x6d, 0x4b, 0x79, 0x45, 0x47, 0xa, 0x78, 0x6c, 0x73, 0x78, 0x74, 0x6b, 0x64, 0x47, 0x45, 0x37, 0x79, 0x55, 0x55, 0x67, 0x77, 0x52, 0x53, 0x72, 0x79, 0x6a, 0x41, 0x65, 0x76, 0x41, 0x79, 0x5a, 0x64, 0x37, 0x71, 0x45, 0x72, 0x67, 0x74, 0x41, 0x56, 0x6c, 0x35, 0x70, 0x44, 0x46, 0x48, 0x30, 0x74, 0x42, 0x48, 0x53, 0x74, 0x67, 0x6b, 0x41, 0x51, 0x59, 0x57, 0x48, 0x77, 0x78, 0x62, 0x62, 0x79, 0x70, 0x59, 0x37, 0x33, 0x4c, 0xa, 0x5a, 0x43, 0x51, 0x73, 0x2b, 0x4c, 0x35, 0x44, 0x6d, 0x67, 0x2f, 0x43, 0x6e, 0x57, 0x31, 0x75, 0x62, 0x47, 0x46, 0x32, 0x59, 0x75, 0x47, 0x33, 0x79, 0x46, 0x59, 0x4b, 0x31, 0x6c, 0x32, 0x4e, 0x46, 0x78, 0x2f, 0x74, 0x67, 0x48, 0x71, 0x4e, 0x78, 0x56, 0x48, 0x6a, 0x31, 0x53, 0x42, 0x5a, 0x32, 0x41, 0x54, 0x76, 0x61, 0x4b, 0x47, 0x6f, 0x6c, 0x56, 0x35, 0x53, 0x69, 0x57, 0x33, 0x49, 0xa, 0x68, 0x45, 0x46, 0x46, 0x2b, 0x77, 0x4b, 0x50, 0x73, 0x63, 0x46, 0x59, 0x4f, 0x49, 0x76, 0x53, 0x4d, 0x44, 0x38, 0x43, 0x41, 0x77, 0x45, 0x41, 0x41, 0x61, 0x4d, 0x6a, 0x4d, 0x43, 0x45, 0x77, 0x44, 0x67, 0x59, 0x44, 0x56, 0x52, 0x30, 0x50, 0x41, 0x51, 0x48, 0x2f, 0x42, 0x41, 0x51, 0x44, 0x41, 0x67, 0x4b, 0x6b, 0x4d, 0x41, 0x38, 0x47, 0x41, 0x31, 0x55, 0x64, 0x45, 0x77, 0x45, 0x42, 0xa, 0x2f, 0x77, 0x51, 0x46, 0x4d, 0x41, 0x4d, 0x42, 0x41, 0x66, 0x38, 0x77, 0x44, 0x51, 0x59, 0x4a, 0x4b, 0x6f, 0x5a, 0x49, 0x68, 0x76, 0x63, 0x4e, 0x41, 0x51, 0x45, 0x4c, 0x42, 0x51, 0x41, 0x44, 0x67, 0x67, 0x45, 0x42, 0x41, 0x46, 0x2b, 0x59, 0x44, 0x46, 0x31, 0x4e, 0x4b, 0x65, 0x6f, 0x41, 0x38, 0x49, 0x72, 0x65, 0x4f, 0x78, 0x4d, 0x2f, 0x4f, 0x45, 0x59, 0x70, 0x54, 0x44, 0x6a, 0x76, 0xa, 0x50, 0x64, 0x55, 0x69, 0x31, 0x61, 0x37, 0x79, 0x75, 0x74, 0x2b, 0x30, 0x39, 0x37, 0x70, 0x36, 0x6f, 0x2f, 0x32, 0x41, 0x53, 0x35, 0x56, 0x52, 0x6a, 0x70, 0x32, 0x57, 0x55, 0x7a, 0x72, 0x4b, 0x79, 0x73, 0x57, 0x75, 0x65, 0x74, 0x55, 0x45, 0x2b, 0x72, 0x6e, 0x41, 0x70, 0x33, 0x39, 0x37, 0x2f, 0x6a, 0x78, 0x75, 0x73, 0x54, 0x78, 0x2f, 0x50, 0x76, 0x58, 0x57, 0x44, 0x34, 0x75, 0x61, 0xa, 0x51, 0x32, 0x7a, 0x49, 0x38, 0x44, 0x59, 0x62, 0x6b, 0x64, 0x75, 0x63, 0x4f, 0x47, 0x67, 0x4a, 0x31, 0x78, 0x61, 0x4e, 0x70, 0x6b, 0x75, 0x62, 0x48, 0x33, 0x64, 0x61, 0x48, 0x59, 0x5a, 0x2b, 0x48, 0x38, 0x71, 0x42, 0x70, 0x2f, 0x74, 0x50, 0x41, 0x42, 0x57, 0x73, 0x32, 0x35, 0x66, 0x78, 0x78, 0x31, 0x53, 0x69, 0x75, 0x38, 0x4e, 0x38, 0x4b, 0x59, 0x4a, 0x2b, 0x32, 0x49, 0x68, 0x75, 0xa, 0x61, 0x64, 0x42, 0x71, 0x61, 0x73, 0x56, 0x4a, 0x6c, 0x79, 0x55, 0x4d, 0x79, 0x50, 0x49, 0x7a, 0x4b, 0x46, 0x36, 0x6e, 0x4c, 0x54, 0x57, 0x66, 0x59, 0x5a, 0x4f, 0x31, 0x76, 0x30, 0x32, 0x36, 0x4b, 0x36, 0x6f, 0x31, 0x63, 0x39, 0x78, 0x63, 0x74, 0x69, 0x77, 0x54, 0x6a, 0x54, 0x59, 0x43, 0x34, 0x7a, 0x38, 0x65, 0x4b, 0x69, 0x41, 0x4c, 0x49, 0x36, 0x33, 0x33, 0x34, 0x74, 0x4e, 0x51, 0xa, 0x33, 0x32, 0x5a, 0x77, 0x4f, 0x75, 0x73, 0x58, 0x6e, 0x4a, 0x33, 0x6b, 0x34, 0x75, 0x42, 0x57, 0x70, 0x79, 0x31, 0x69, 0x39, 0x6f, 0x4e, 0x6b, 0x75, 0x75, 0x48, 0x45, 0x64, 0x69, 0x48, 0x37, 0x36, 0x30, 0x35, 0x4a, 0x31, 0x66, 0x77, 0x57, 0x53, 0x30, 0x63, 0x65, 0x35, 0x67, 0x49, 0x50, 0x35, 0x6a, 0x6e, 0x4e, 0x73, 0x4d, 0x64, 0x61, 0x44, 0x49, 0x2f, 0x39, 0x54, 0x4a, 0x4e, 0x6e, 0xa, 0x70, 0x67, 0x2b, 0x41, 0x58, 0x55, 0x4a, 0x78, 0x46, 0x30, 0x4f, 0x77, 0x50, 0x42, 0x63, 0x45, 0x37, 0x4a, 0x41, 0x43, 0x64, 0x52, 0x6d, 0x58, 0x73, 0x2b, 0x33, 0x78, 0x6c, 0x54, 0x59, 0x4a, 0x76, 0x70, 0x53, 0x75, 0x32, 0x4b, 0x65, 0x6c, 0x4c, 0x55, 0x6a, 0x52, 0x34, 0x5a, 0x4c, 0x72, 0x5a, 0x34, 0x78, 0x39, 0x4c, 0x45, 0x36, 0x54, 0x65, 0x77, 0x34, 0x3d, 0xa, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x45, 0x4e, 0x44, 0x20, 0x43, 0x45, 0x52, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x45, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0xa}, NextProtos:[]string(nil)}, UserAgent:"", DisableCompression:false, Transport:http.RoundTripper(nil), WrapTransport:(transport.WrapperFunc)(nil), QPS:0, Burst:0, RateLimiter:flowcontrol.RateLimiter(nil), Timeout:0, Dial:(func(context.Context, string, string) (net.Conn, error))(nil)}

RAW provider 2021/04/04 00:03:51 [ApplyResourceChange][Request][PlannedState]
(cty.Value) {
 ty: (cty.Type) {
  typeImpl: (cty.typeObject) {
   typeImplSigil: (cty.typeImplSigil) {
   },
   AttrTypes: (map[string]cty.Type) (len=3) {
    (string) (len=8) "manifest": (cty.Type) {
     typeImpl: (cty.typeObject) {
      typeImplSigil: (cty.typeImplSigil) {
      },
      AttrTypes: (map[string]cty.Type) (len=4) {
       (string) (len=10) "apiVersion": (cty.Type) {
        typeImpl: (cty.primitiveType) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         Kind: (cty.primitiveTypeKind) 83
        }
       },
       (string) (len=4) "kind": (cty.Type) {
        typeImpl: (cty.primitiveType) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         Kind: (cty.primitiveTypeKind) 83
        }
       },
       (string) (len=8) "metadata": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) (len=2) {
          (string) (len=9) "namespace": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=4) "name": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          }
         }
        }
       },
       (string) (len=4) "spec": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) (len=22) {
          (string) (len=7) "storage": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=1) {
             (string) (len=19) "volumeClaimTemplate": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=1) {
                (string) (len=4) "spec": (cty.Type) {
                 typeImpl: (cty.typeObject) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  AttrTypes: (map[string]cty.Type) (len=2) {
                   (string) (len=9) "resources": (cty.Type) {
                    typeImpl: (cty.typeObject) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     AttrTypes: (map[string]cty.Type) (len=1) {
                      (string) (len=8) "requests": (cty.Type) {
                       typeImpl: (cty.typeObject) {
                        typeImplSigil: (cty.typeImplSigil) {
                        },
                        AttrTypes: (map[string]cty.Type) (len=1) {
                         (string) (len=7) "storage": (cty.Type) {
                          typeImpl: (cty.primitiveType) {
                           typeImplSigil: (cty.typeImplSigil) {
                           },
                           Kind: (cty.primitiveTypeKind) 83
                          }
                         }
                        }
                       }
                      }
                     }
                    }
                   },
                   (string) (len=16) "storageClassName": (cty.Type) {
                    typeImpl: (cty.primitiveType) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     Kind: (cty.primitiveTypeKind) 83
                    }
                   }
                  }
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=9) "namespace": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=18) "podMonitorSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=15) "securityContext": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=3) {
             (string) (len=12) "runAsNonRoot": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 66
              }
             },
             (string) (len=9) "runAsUser": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 78
              }
             },
             (string) (len=7) "fsGroup": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 78
              }
             }
            }
           }
          },
          (string) (len=22) "probeNamespaceSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=8) "alerting": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=1) {
             (string) (len=13) "alertmanagers": (cty.Type) {
              typeImpl: (cty.typeTuple) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               ElemTypes: ([]cty.Type) (len=1 cap=1) {
                (cty.Type) {
                 typeImpl: (cty.typeObject) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  AttrTypes: (map[string]cty.Type) (len=3) {
                   (string) (len=4) "port": (cty.Type) {
                    typeImpl: (cty.primitiveType) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     Kind: (cty.primitiveTypeKind) 83
                    }
                   },
                   (string) (len=4) "name": (cty.Type) {
                    typeImpl: (cty.primitiveType) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     Kind: (cty.primitiveTypeKind) 83
                    }
                   },
                   (string) (len=9) "namespace": (cty.Type) {
                    typeImpl: (cty.primitiveType) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     Kind: (cty.primitiveTypeKind) 83
                    }
                   }
                  }
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=13) "probeSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=18) "serviceAccountName": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=7) "version": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=12) "ruleSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=1) {
             (string) (len=11) "matchLabels": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=10) "prometheus": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=4) "role": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=22) "serviceMonitorSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=8) "replicas": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 78
           }
          },
          (string) (len=27) "podMonitorNamespaceSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=31) "serviceMonitorNamespaceSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=14) "externalLabels": (cty.Type) {
           typeImpl: (cty.typeMap) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            ElementTypeT: (cty.Type) {
             typeImpl: (cty.primitiveType) {
              typeImplSigil: (cty.typeImplSigil) {
              },
              Kind: (cty.primitiveTypeKind) 83
             }
            }
           }
          },
          (string) (len=5) "image": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=6) "thanos": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=3) {
             (string) (len=19) "objectStorageConfig": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=3) "key": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=4) "name": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             },
             (string) (len=7) "version": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             },
             (string) (len=9) "baseImage": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             }
            }
           }
          },
          (string) (len=9) "resources": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=2) {
             (string) (len=6) "limits": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=3) "cpu": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=6) "memory": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             },
             (string) (len=8) "requests": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=6) "memory": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=3) "cpu": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=12) "nodeSelector": (cty.Type) {
           typeImpl: (cty.typeMap) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            ElementTypeT: (cty.Type) {
             typeImpl: (cty.primitiveType) {
              typeImplSigil: (cty.typeImplSigil) {
              },
              Kind: (cty.primitiveTypeKind) 83
             }
            }
           }
          },
          (string) (len=14) "scrapeInterval": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=4) "name": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=23) "additionalScrapeConfigs": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=2) {
             (string) (len=3) "key": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             },
             (string) (len=4) "name": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             }
            }
           }
          }
         }
        }
       }
      }
     }
    },
    (string) (len=6) "object": (cty.Type) {
     typeImpl: (cty.typeObject) {
      typeImplSigil: (cty.typeImplSigil) {
      },
      AttrTypes: (map[string]cty.Type) (len=4) {
       (string) (len=8) "metadata": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) (len=2) {
          (string) (len=4) "name": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=9) "namespace": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          }
         }
        }
       },
       (string) (len=4) "spec": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) (len=20) {
          (string) (len=5) "image": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=27) "podMonitorNamespaceSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=14) "scrapeInterval": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=9) "resources": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=2) {
             (string) (len=6) "limits": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=3) "cpu": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=6) "memory": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             },
             (string) (len=8) "requests": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=3) "cpu": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=6) "memory": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=22) "serviceMonitorSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=13) "probeSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=22) "probeNamespaceSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=7) "version": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=6) "thanos": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=3) {
             (string) (len=9) "baseImage": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             },
             (string) (len=19) "objectStorageConfig": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=3) "key": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=4) "name": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             },
             (string) (len=7) "version": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             }
            }
           }
          },
          (string) (len=31) "serviceMonitorNamespaceSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=18) "podMonitorSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=18) "serviceAccountName": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=8) "replicas": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 78
           }
          },
          (string) (len=12) "nodeSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=1) {
             (string) (len=4) "role": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             }
            }
           }
          },
          (string) (len=12) "ruleSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=1) {
             (string) (len=11) "matchLabels": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=10) "prometheus": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=4) "role": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=14) "externalLabels": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=2) {
             (string) (len=7) "cluster": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             },
             (string) (len=7) "product": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             }
            }
           }
          },
          (string) (len=15) "securityContext": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=3) {
             (string) (len=9) "runAsUser": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 78
              }
             },
             (string) (len=7) "fsGroup": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 78
              }
             },
             (string) (len=12) "runAsNonRoot": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 66
              }
             }
            }
           }
          },
          (string) (len=23) "additionalScrapeConfigs": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=2) {
             (string) (len=3) "key": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             },
             (string) (len=4) "name": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             }
            }
           }
          },
          (string) (len=7) "storage": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=1) {
             (string) (len=19) "volumeClaimTemplate": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=1) {
                (string) (len=4) "spec": (cty.Type) {
                 typeImpl: (cty.typeObject) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  AttrTypes: (map[string]cty.Type) (len=2) {
                   (string) (len=9) "resources": (cty.Type) {
                    typeImpl: (cty.typeObject) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     AttrTypes: (map[string]cty.Type) (len=1) {
                      (string) (len=8) "requests": (cty.Type) {
                       typeImpl: (cty.typeObject) {
                        typeImplSigil: (cty.typeImplSigil) {
                        },
                        AttrTypes: (map[string]cty.Type) (len=1) {
                         (string) (len=7) "storage": (cty.Type) {
                          typeImpl: (cty.primitiveType) {
                           typeImplSigil: (cty.typeImplSigil) {
                           },
                           Kind: (cty.primitiveTypeKind) 83
                          }
                         }
                        }
                       }
                      }
                     }
                    }
                   },
                   (string) (len=16) "storageClassName": (cty.Type) {
                    typeImpl: (cty.primitiveType) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     Kind: (cty.primitiveTypeKind) 83
                    }
                   }
                  }
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=8) "alerting": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=1) {
             (string) (len=13) "alertmanagers": (cty.Type) {
              typeImpl: (cty.typeTuple) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               ElemTypes: ([]cty.Type) (len=1 cap=1) {
                (cty.Type) {
                 typeImpl: (cty.typeObject) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  AttrTypes: (map[string]cty.Type) (len=3) {
                   (string) (len=4) "name": (cty.Type) {
                    typeImpl: (cty.primitiveType) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     Kind: (cty.primitiveTypeKind) 83
                    }
                   },
                   (string) (len=9) "namespace": (cty.Type) {
                    typeImpl: (cty.primitiveType) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     Kind: (cty.primitiveTypeKind) 83
                    }
                   },
                   (string) (len=4) "port": (cty.Type) {
                    typeImpl: (cty.primitiveType) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     Kind: (cty.primitiveTypeKind) 83
                    }
                   }
                  }
                 }
                }
               }
              }
             }
            }
           }
          }
         }
        }
       },
       (string) (len=10) "apiVersion": (cty.Type) {
        typeImpl: (cty.primitiveType) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         Kind: (cty.primitiveTypeKind) 83
        }
       },
       (string) (len=4) "kind": (cty.Type) {
        typeImpl: (cty.primitiveType) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         Kind: (cty.primitiveTypeKind) 83
        }
       }
      }
     }
    },
    (string) (len=8) "wait_for": (cty.Type) {
     typeImpl: (cty.typeObject) {
      typeImplSigil: (cty.typeImplSigil) {
      },
      AttrTypes: (map[string]cty.Type) (len=1) {
       (string) (len=6) "fields": (cty.Type) {
        typeImpl: (cty.typeMap) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         ElementTypeT: (cty.Type) {
          typeImpl: (cty.primitiveType) {
           typeImplSigil: (cty.typeImplSigil) {
           },
           Kind: (cty.primitiveTypeKind) 83
          }
         }
        }
       }
      }
     }
    }
   }
  }
 },
 v: (map[string]interface {}) (len=3) {
  (string) (len=6) "object": (map[string]interface {}) (len=4) {
   (string) (len=4) "kind": (string) (len=10) "Prometheus",
   (string) (len=8) "metadata": (map[string]interface {}) (len=2) {
    (string) (len=4) "name": (string) (len=6) "test-1",
    (string) (len=9) "namespace": (string) (len=15) "test-operator-1"
   },
   (string) (len=4) "spec": (map[string]interface {}) (len=20) {
    (string) (len=14) "scrapeInterval": (string) (len=2) "5s",
    (string) (len=15) "securityContext": (map[string]interface {}) (len=3) {
     (string) (len=7) "fsGroup": (*big.Float)(0xc000708b70)(2000),
     (string) (len=12) "runAsNonRoot": (bool) true,
     (string) (len=9) "runAsUser": (*big.Float)(0xc000708ba0)(1000)
    },
    (string) (len=18) "serviceAccountName": (string) (len=14) "prometheus-k8s",
    (string) (len=8) "alerting": (map[string]interface {}) (len=1) {
     (string) (len=13) "alertmanagers": ([]interface {}) (len=1 cap=1) {
      (map[string]interface {}) (len=3) {
       (string) (len=4) "name": (string) (len=17) "alertmanager-main",
       (string) (len=9) "namespace": (string) (len=10) "monitoring",
       (string) (len=4) "port": (string) (len=3) "web"
      }
     }
    },
    (string) (len=5) "image": (string) (len=37) "quay.io/prometheus/prometheus:v2.25.2",
    (string) (len=27) "podMonitorNamespaceSelector": (map[string]interface {}) {
    },
    (string) (len=22) "probeNamespaceSelector": (map[string]interface {}) {
    },
    (string) (len=8) "replicas": (*big.Float)(0xc000708960)(1),
    (string) (len=9) "resources": (map[string]interface {}) (len=2) {
     (string) (len=6) "limits": (map[string]interface {}) (len=2) {
      (string) (len=6) "memory": (string) (len=6) "1024Mi",
      (string) (len=3) "cpu": (string) (len=4) "250m"
     },
     (string) (len=8) "requests": (map[string]interface {}) (len=2) {
      (string) (len=3) "cpu": (string) (len=4) "200m",
      (string) (len=6) "memory": (string) (len=5) "200Mi"
     }
    },
    (string) (len=22) "serviceMonitorSelector": (map[string]interface {}) {
    },
    (string) (len=7) "version": (string) (len=7) "v2.25.2",
    (string) (len=31) "serviceMonitorNamespaceSelector": (map[string]interface {}) {
    },
    (string) (len=12) "nodeSelector": (map[string]interface {}) (len=1) {
     (string) (len=4) "role": (string) (len=8) "services"
    },
    (string) (len=14) "externalLabels": (map[string]interface {}) (len=2) {
     (string) (len=7) "product": (string) (len=13) "api beep boop",
     (string) (len=7) "cluster": (string) (len=12) "my-cluster-2"
    },
    (string) (len=18) "podMonitorSelector": (map[string]interface {}) {
    },
    (string) (len=6) "thanos": (map[string]interface {}) (len=3) {
     (string) (len=9) "baseImage": (string) (len=21) "quay.io/thanos/thanos",
     (string) (len=19) "objectStorageConfig": (map[string]interface {}) (len=2) {
      (string) (len=3) "key": (string) (len=11) "thanos.yaml",
      (string) (len=4) "name": (string) (len=22) "thanos-objstore-config"
     },
     (string) (len=7) "version": (string) (len=7) "v0.16.0"
    },
    (string) (len=23) "additionalScrapeConfigs": (map[string]interface {}) (len=2) {
     (string) (len=3) "key": (string) (len=26) "prometheus-additional.yaml",
     (string) (len=4) "name": (string) (len=25) "additional-scrape-configs"
    },
    (string) (len=13) "probeSelector": (map[string]interface {}) {
    },
    (string) (len=7) "storage": (map[string]interface {}) (len=1) {
     (string) (len=19) "volumeClaimTemplate": (map[string]interface {}) (len=1) {
      (string) (len=4) "spec": (map[string]interface {}) (len=2) {
       (string) (len=9) "resources": (map[string]interface {}) (len=1) {
        (string) (len=8) "requests": (map[string]interface {}) (len=1) {
         (string) (len=7) "storage": (string) (len=4) "10Gi"
        }
       },
       (string) (len=16) "storageClassName": (string) (len=3) "gp2"
      }
     }
    },
    (string) (len=12) "ruleSelector": (map[string]interface {}) (len=1) {
     (string) (len=11) "matchLabels": (map[string]interface {}) (len=2) {
      (string) (len=10) "prometheus": (string) (len=3) "k8s",
      (string) (len=4) "role": (string) (len=11) "alert-rules"
     }
    }
   },
   (string) (len=10) "apiVersion": (string) (len=24) "monitoring.coreos.com/v1"
  },
  (string) (len=8) "wait_for": (interface {}) <nil>,
  (string) (len=8) "manifest": (map[string]interface {}) (len=4) {
   (string) (len=8) "metadata": (map[string]interface {}) (len=2) {
    (string) (len=4) "name": (string) (len=6) "test-1",
    (string) (len=9) "namespace": (string) (len=15) "test-operator-1"
   },
   (string) (len=4) "spec": (map[string]interface {}) (len=22) {
    (string) (len=31) "serviceMonitorNamespaceSelector": (map[string]interface {}) {
    },
    (string) (len=9) "namespace": (string) (len=15) "test-operator-1",
    (string) (len=12) "nodeSelector": (map[string]interface {}) (len=1) {
     (string) (len=4) "role": (string) (len=8) "services"
    },
    (string) (len=12) "ruleSelector": (map[string]interface {}) (len=1) {
     (string) (len=11) "matchLabels": (map[string]interface {}) (len=2) {
      (string) (len=10) "prometheus": (string) (len=3) "k8s",
      (string) (len=4) "role": (string) (len=11) "alert-rules"
     }
    },
    (string) (len=8) "alerting": (map[string]interface {}) (len=1) {
     (string) (len=13) "alertmanagers": ([]interface {}) (len=1 cap=1) {
      (map[string]interface {}) (len=3) {
       (string) (len=4) "name": (string) (len=17) "alertmanager-main",
       (string) (len=9) "namespace": (string) (len=10) "monitoring",
       (string) (len=4) "port": (string) (len=3) "web"
      }
     }
    },
    (string) (len=5) "image": (string) (len=37) "quay.io/prometheus/prometheus:v2.25.2",
    (string) (len=13) "probeSelector": (map[string]interface {}) {
    },
    (string) (len=15) "securityContext": (map[string]interface {}) (len=3) {
     (string) (len=9) "runAsUser": (*big.Float)(0xc0001a83f0)(1000),
     (string) (len=7) "fsGroup": (*big.Float)(0xc0001a80c0)(2000),
     (string) (len=12) "runAsNonRoot": (bool) true
    },
    (string) (len=7) "version": (string) (len=7) "v2.25.2",
    (string) (len=7) "storage": (map[string]interface {}) (len=1) {
     (string) (len=19) "volumeClaimTemplate": (map[string]interface {}) (len=1) {
      (string) (len=4) "spec": (map[string]interface {}) (len=2) {
       (string) (len=9) "resources": (map[string]interface {}) (len=1) {
        (string) (len=8) "requests": (map[string]interface {}) (len=1) {
         (string) (len=7) "storage": (string) (len=4) "10Gi"
        }
       },
       (string) (len=16) "storageClassName": (string) (len=3) "gp2"
      }
     }
    },
    (string) (len=14) "externalLabels": (map[string]interface {}) (len=2) {
     (string) (len=7) "cluster": (string) (len=12) "my-cluster-2",
     (string) (len=7) "product": (string) (len=13) "api beep boop"
    },
    (string) (len=18) "podMonitorSelector": (map[string]interface {}) {
    },
    (string) (len=22) "serviceMonitorSelector": (map[string]interface {}) {
    },
    (string) (len=9) "resources": (map[string]interface {}) (len=2) {
     (string) (len=6) "limits": (map[string]interface {}) (len=2) {
      (string) (len=3) "cpu": (string) (len=4) "250m",
      (string) (len=6) "memory": (string) (len=6) "1024Mi"
     },
     (string) (len=8) "requests": (map[string]interface {}) (len=2) {
      (string) (len=6) "memory": (string) (len=5) "200Mi",
      (string) (len=3) "cpu": (string) (len=4) "200m"
     }
    },
    (string) (len=8) "replicas": (*big.Float)(0xc00007ee40)(1),
    (string) (len=27) "podMonitorNamespaceSelector": (map[string]interface {}) {
    },
    (string) (len=6) "thanos": (map[string]interface {}) (len=3) {
     (string) (len=9) "baseImage": (string) (len=21) "quay.io/thanos/thanos",
     (string) (len=19) "objectStorageConfig": (map[string]interface {}) (len=2) {
      (string) (len=4) "name": (string) (len=22) "thanos-objstore-config",
      (string) (len=3) "key": (string) (len=11) "thanos.yaml"
     },
     (string) (len=7) "version": (string) (len=7) "v0.16.0"
    },
    (string) (len=23) "additionalScrapeConfigs": (map[string]interface {}) (len=2) {
     (string) (len=3) "key": (string) (len=26) "prometheus-additional.yaml",
     (string) (len=4) "name": (string) (len=25) "additional-scrape-configs"
    },
    (string) (len=22) "probeNamespaceSelector": (map[string]interface {}) {
    },
    (string) (len=14) "scrapeInterval": (string) (len=2) "5s",
    (string) (len=18) "serviceAccountName": (string) (len=14) "prometheus-k8s",
    (string) (len=4) "name": (string) (len=6) "test-1"
   },
   (string) (len=10) "apiVersion": (string) (len=24) "monitoring.coreos.com/v1",
   (string) (len=4) "kind": (string) (len=10) "Prometheus"
  }
 }
}

RAW provider 2021/04/04 00:03:51 [ApplyResourceChange][Request][PriorState]
(cty.Value) {
 ty: (cty.Type) {
  typeImpl: (cty.typeObject) {
   typeImplSigil: (cty.typeImplSigil) {
   },
   AttrTypes: (map[string]cty.Type) (len=3) {
    (string) (len=8) "manifest": (cty.Type) {
     typeImpl: (cty.typeObject) {
      typeImplSigil: (cty.typeImplSigil) {
      },
      AttrTypes: (map[string]cty.Type) (len=4) {
       (string) (len=10) "apiVersion": (cty.Type) {
        typeImpl: (cty.primitiveType) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         Kind: (cty.primitiveTypeKind) 83
        }
       },
       (string) (len=4) "kind": (cty.Type) {
        typeImpl: (cty.primitiveType) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         Kind: (cty.primitiveTypeKind) 83
        }
       },
       (string) (len=8) "metadata": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) (len=2) {
          (string) (len=4) "name": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=9) "namespace": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          }
         }
        }
       },
       (string) (len=4) "spec": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) (len=22) {
          (string) (len=14) "externalLabels": (cty.Type) {
           typeImpl: (cty.typeMap) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            ElementTypeT: (cty.Type) {
             typeImpl: (cty.primitiveType) {
              typeImplSigil: (cty.typeImplSigil) {
              },
              Kind: (cty.primitiveTypeKind) 83
             }
            }
           }
          },
          (string) (len=9) "resources": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=2) {
             (string) (len=8) "requests": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=3) "cpu": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=6) "memory": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             },
             (string) (len=6) "limits": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=3) "cpu": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=6) "memory": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=22) "serviceMonitorSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=7) "version": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=4) "name": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=15) "securityContext": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=3) {
             (string) (len=7) "fsGroup": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 78
              }
             },
             (string) (len=12) "runAsNonRoot": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 66
              }
             },
             (string) (len=9) "runAsUser": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 78
              }
             }
            }
           }
          },
          (string) (len=8) "replicas": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 78
           }
          },
          (string) (len=12) "nodeSelector": (cty.Type) {
           typeImpl: (cty.typeMap) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            ElementTypeT: (cty.Type) {
             typeImpl: (cty.primitiveType) {
              typeImplSigil: (cty.typeImplSigil) {
              },
              Kind: (cty.primitiveTypeKind) 83
             }
            }
           }
          },
          (string) (len=5) "image": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=22) "probeNamespaceSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=18) "serviceAccountName": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=31) "serviceMonitorNamespaceSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=27) "podMonitorNamespaceSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=7) "storage": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=1) {
             (string) (len=19) "volumeClaimTemplate": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=1) {
                (string) (len=4) "spec": (cty.Type) {
                 typeImpl: (cty.typeObject) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  AttrTypes: (map[string]cty.Type) (len=2) {
                   (string) (len=9) "resources": (cty.Type) {
                    typeImpl: (cty.typeObject) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     AttrTypes: (map[string]cty.Type) (len=1) {
                      (string) (len=8) "requests": (cty.Type) {
                       typeImpl: (cty.typeObject) {
                        typeImplSigil: (cty.typeImplSigil) {
                        },
                        AttrTypes: (map[string]cty.Type) (len=1) {
                         (string) (len=7) "storage": (cty.Type) {
                          typeImpl: (cty.primitiveType) {
                           typeImplSigil: (cty.typeImplSigil) {
                           },
                           Kind: (cty.primitiveTypeKind) 83
                          }
                         }
                        }
                       }
                      }
                     }
                    }
                   },
                   (string) (len=16) "storageClassName": (cty.Type) {
                    typeImpl: (cty.primitiveType) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     Kind: (cty.primitiveTypeKind) 83
                    }
                   }
                  }
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=9) "namespace": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=14) "scrapeInterval": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=8) "alerting": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=1) {
             (string) (len=13) "alertmanagers": (cty.Type) {
              typeImpl: (cty.typeTuple) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               ElemTypes: ([]cty.Type) (len=1 cap=1) {
                (cty.Type) {
                 typeImpl: (cty.typeObject) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  AttrTypes: (map[string]cty.Type) (len=3) {
                   (string) (len=4) "name": (cty.Type) {
                    typeImpl: (cty.primitiveType) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     Kind: (cty.primitiveTypeKind) 83
                    }
                   },
                   (string) (len=9) "namespace": (cty.Type) {
                    typeImpl: (cty.primitiveType) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     Kind: (cty.primitiveTypeKind) 83
                    }
                   },
                   (string) (len=4) "port": (cty.Type) {
                    typeImpl: (cty.primitiveType) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     Kind: (cty.primitiveTypeKind) 83
                    }
                   }
                  }
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=13) "probeSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=12) "ruleSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=1) {
             (string) (len=11) "matchLabels": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=4) "role": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=10) "prometheus": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=6) "thanos": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=3) {
             (string) (len=19) "objectStorageConfig": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=3) "key": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=4) "name": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             },
             (string) (len=7) "version": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             },
             (string) (len=9) "baseImage": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             }
            }
           }
          },
          (string) (len=23) "additionalScrapeConfigs": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=2) {
             (string) (len=3) "key": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             },
             (string) (len=4) "name": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             }
            }
           }
          },
          (string) (len=18) "podMonitorSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          }
         }
        }
       }
      }
     }
    },
    (string) (len=6) "object": (cty.Type) {
     typeImpl: (cty.typeObject) {
      typeImplSigil: (cty.typeImplSigil) {
      },
      AttrTypes: (map[string]cty.Type) (len=4) {
       (string) (len=4) "kind": (cty.Type) {
        typeImpl: (cty.primitiveType) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         Kind: (cty.primitiveTypeKind) 83
        }
       },
       (string) (len=8) "metadata": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) (len=2) {
          (string) (len=4) "name": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=9) "namespace": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          }
         }
        }
       },
       (string) (len=4) "spec": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) (len=20) {
          (string) (len=23) "additionalScrapeConfigs": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=2) {
             (string) (len=3) "key": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             },
             (string) (len=4) "name": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             }
            }
           }
          },
          (string) (len=22) "serviceMonitorSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=8) "alerting": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=1) {
             (string) (len=13) "alertmanagers": (cty.Type) {
              typeImpl: (cty.typeTuple) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               ElemTypes: ([]cty.Type) (len=1 cap=1) {
                (cty.Type) {
                 typeImpl: (cty.typeObject) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  AttrTypes: (map[string]cty.Type) (len=3) {
                   (string) (len=9) "namespace": (cty.Type) {
                    typeImpl: (cty.primitiveType) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     Kind: (cty.primitiveTypeKind) 83
                    }
                   },
                   (string) (len=4) "port": (cty.Type) {
                    typeImpl: (cty.primitiveType) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     Kind: (cty.primitiveTypeKind) 83
                    }
                   },
                   (string) (len=4) "name": (cty.Type) {
                    typeImpl: (cty.primitiveType) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     Kind: (cty.primitiveTypeKind) 83
                    }
                   }
                  }
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=27) "podMonitorNamespaceSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=12) "ruleSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=1) {
             (string) (len=11) "matchLabels": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=10) "prometheus": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=4) "role": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=8) "replicas": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 78
           }
          },
          (string) (len=13) "probeSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=18) "podMonitorSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=5) "image": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=7) "storage": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=1) {
             (string) (len=19) "volumeClaimTemplate": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=1) {
                (string) (len=4) "spec": (cty.Type) {
                 typeImpl: (cty.typeObject) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  AttrTypes: (map[string]cty.Type) (len=2) {
                   (string) (len=9) "resources": (cty.Type) {
                    typeImpl: (cty.typeObject) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     AttrTypes: (map[string]cty.Type) (len=1) {
                      (string) (len=8) "requests": (cty.Type) {
                       typeImpl: (cty.typeObject) {
                        typeImplSigil: (cty.typeImplSigil) {
                        },
                        AttrTypes: (map[string]cty.Type) (len=1) {
                         (string) (len=7) "storage": (cty.Type) {
                          typeImpl: (cty.primitiveType) {
                           typeImplSigil: (cty.typeImplSigil) {
                           },
                           Kind: (cty.primitiveTypeKind) 83
                          }
                         }
                        }
                       }
                      }
                     }
                    }
                   },
                   (string) (len=16) "storageClassName": (cty.Type) {
                    typeImpl: (cty.primitiveType) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     Kind: (cty.primitiveTypeKind) 83
                    }
                   }
                  }
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=6) "thanos": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=3) {
             (string) (len=7) "version": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             },
             (string) (len=9) "baseImage": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             },
             (string) (len=19) "objectStorageConfig": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=3) "key": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=4) "name": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=15) "securityContext": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=3) {
             (string) (len=12) "runAsNonRoot": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 66
              }
             },
             (string) (len=9) "runAsUser": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 78
              }
             },
             (string) (len=7) "fsGroup": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 78
              }
             }
            }
           }
          },
          (string) (len=31) "serviceMonitorNamespaceSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=14) "externalLabels": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=2) {
             (string) (len=7) "product": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             },
             (string) (len=7) "cluster": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             }
            }
           }
          },
          (string) (len=12) "nodeSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=1) {
             (string) (len=4) "role": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             }
            }
           }
          },
          (string) (len=22) "probeNamespaceSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=7) "version": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=9) "resources": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=2) {
             (string) (len=6) "limits": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=6) "memory": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=3) "cpu": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             },
             (string) (len=8) "requests": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=3) "cpu": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=6) "memory": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=18) "serviceAccountName": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=14) "scrapeInterval": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          }
         }
        }
       },
       (string) (len=10) "apiVersion": (cty.Type) {
        typeImpl: (cty.primitiveType) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         Kind: (cty.primitiveTypeKind) 83
        }
       }
      }
     }
    },
    (string) (len=8) "wait_for": (cty.Type) {
     typeImpl: (cty.typeObject) {
      typeImplSigil: (cty.typeImplSigil) {
      },
      AttrTypes: (map[string]cty.Type) (len=1) {
       (string) (len=6) "fields": (cty.Type) {
        typeImpl: (cty.typeMap) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         ElementTypeT: (cty.Type) {
          typeImpl: (cty.primitiveType) {
           typeImplSigil: (cty.typeImplSigil) {
           },
           Kind: (cty.primitiveTypeKind) 83
          }
         }
        }
       }
      }
     }
    }
   }
  }
 },
 v: (map[string]interface {}) (len=3) {
  (string) (len=8) "manifest": (map[string]interface {}) (len=4) {
   (string) (len=4) "kind": (string) (len=10) "Prometheus",
   (string) (len=8) "metadata": (map[string]interface {}) (len=2) {
    (string) (len=4) "name": (string) (len=6) "test-1",
    (string) (len=9) "namespace": (string) (len=15) "test-operator-1"
   },
   (string) (len=4) "spec": (map[string]interface {}) (len=22) {
    (string) (len=8) "replicas": (*big.Float)(0xc000736b70)(1),
    (string) (len=7) "version": (string) (len=7) "v2.25.2",
    (string) (len=14) "externalLabels": (map[string]interface {}) (len=2) {
     (string) (len=7) "cluster": (string) (len=12) "my-cluster-2",
     (string) (len=7) "product": (string) (len=13) "api beep boop"
    },
    (string) (len=27) "podMonitorNamespaceSelector": (map[string]interface {}) {
    },
    (string) (len=31) "serviceMonitorNamespaceSelector": (map[string]interface {}) {
    },
    (string) (len=9) "namespace": (string) (len=15) "test-operator-1",
    (string) (len=9) "resources": (map[string]interface {}) (len=2) {
     (string) (len=6) "limits": (map[string]interface {}) (len=2) {
      (string) (len=3) "cpu": (string) (len=4) "250m",
      (string) (len=6) "memory": (string) (len=6) "1024Mi"
     },
     (string) (len=8) "requests": (map[string]interface {}) (len=2) {
      (string) (len=3) "cpu": (string) (len=4) "200m",
      (string) (len=6) "memory": (string) (len=5) "200Mi"
     }
    },
    (string) (len=13) "probeSelector": (map[string]interface {}) {
    },
    (string) (len=7) "storage": (map[string]interface {}) (len=1) {
     (string) (len=19) "volumeClaimTemplate": (map[string]interface {}) (len=1) {
      (string) (len=4) "spec": (map[string]interface {}) (len=2) {
       (string) (len=9) "resources": (map[string]interface {}) (len=1) {
        (string) (len=8) "requests": (map[string]interface {}) (len=1) {
         (string) (len=7) "storage": (string) (len=4) "10Gi"
        }
       },
       (string) (len=16) "storageClassName": (string) (len=3) "gp2"
      }
     }
    },
    (string) (len=5) "image": (string) (len=37) "quay.io/prometheus/prometheus:v2.25.2",
    (string) (len=4) "name": (string) (len=6) "test-1",
    (string) (len=22) "serviceMonitorSelector": (map[string]interface {}) {
    },
    (string) (len=22) "probeNamespaceSelector": (map[string]interface {}) {
    },
    (string) (len=15) "securityContext": (map[string]interface {}) (len=3) {
     (string) (len=7) "fsGroup": (*big.Float)(0xc00078a180)(2000),
     (string) (len=12) "runAsNonRoot": (bool) true,
     (string) (len=9) "runAsUser": (*big.Float)(0xc00078a1b0)(1000)
    },
    (string) (len=18) "serviceAccountName": (string) (len=14) "prometheus-k8s",
    (string) (len=6) "thanos": (map[string]interface {}) (len=3) {
     (string) (len=9) "baseImage": (string) (len=21) "quay.io/thanos/thanos",
     (string) (len=19) "objectStorageConfig": (map[string]interface {}) (len=2) {
      (string) (len=3) "key": (string) (len=11) "thanos.yaml",
      (string) (len=4) "name": (string) (len=22) "thanos-objstore-config"
     },
     (string) (len=7) "version": (string) (len=7) "v0.16.0"
    },
    (string) (len=18) "podMonitorSelector": (map[string]interface {}) {
    },
    (string) (len=23) "additionalScrapeConfigs": (map[string]interface {}) (len=2) {
     (string) (len=3) "key": (string) (len=26) "prometheus-additional.yaml",
     (string) (len=4) "name": (string) (len=25) "additional-scrape-configs"
    },
    (string) (len=8) "alerting": (map[string]interface {}) (len=1) {
     (string) (len=13) "alertmanagers": ([]interface {}) (len=1 cap=1) {
      (map[string]interface {}) (len=3) {
       (string) (len=4) "name": (string) (len=17) "alertmanager-main",
       (string) (len=9) "namespace": (string) (len=10) "monitoring",
       (string) (len=4) "port": (string) (len=3) "web"
      }
     }
    },
    (string) (len=12) "ruleSelector": (map[string]interface {}) (len=1) {
     (string) (len=11) "matchLabels": (map[string]interface {}) (len=2) {
      (string) (len=10) "prometheus": (string) (len=3) "k8s",
      (string) (len=4) "role": (string) (len=11) "alert-rules"
     }
    },
    (string) (len=14) "scrapeInterval": (string) (len=3) "30s",
    (string) (len=12) "nodeSelector": (map[string]interface {}) (len=1) {
     (string) (len=4) "role": (string) (len=8) "services"
    }
   },
   (string) (len=10) "apiVersion": (string) (len=24) "monitoring.coreos.com/v1"
  },
  (string) (len=6) "object": (map[string]interface {}) (len=4) {
   (string) (len=4) "kind": (string) (len=10) "Prometheus",
   (string) (len=8) "metadata": (map[string]interface {}) (len=2) {
    (string) (len=4) "name": (string) (len=6) "test-1",
    (string) (len=9) "namespace": (string) (len=15) "test-operator-1"
   },
   (string) (len=4) "spec": (map[string]interface {}) (len=20) {
    (string) (len=18) "podMonitorSelector": (map[string]interface {}) {
    },
    (string) (len=15) "securityContext": (map[string]interface {}) (len=3) {
     (string) (len=9) "runAsUser": (*big.Float)(0xc000737dd0)(1000),
     (string) (len=7) "fsGroup": (*big.Float)(0xc000737da0)(2000),
     (string) (len=12) "runAsNonRoot": (bool) true
    },
    (string) (len=18) "serviceAccountName": (string) (len=14) "prometheus-k8s",
    (string) (len=22) "probeNamespaceSelector": (map[string]interface {}) {
    },
    (string) (len=22) "serviceMonitorSelector": (map[string]interface {}) {
    },
    (string) (len=8) "replicas": (*big.Float)(0xc000737b90)(1),
    (string) (len=6) "thanos": (map[string]interface {}) (len=3) {
     (string) (len=7) "version": (string) (len=7) "v0.16.0",
     (string) (len=9) "baseImage": (string) (len=21) "quay.io/thanos/thanos",
     (string) (len=19) "objectStorageConfig": (map[string]interface {}) (len=2) {
      (string) (len=3) "key": (string) (len=11) "thanos.yaml",
      (string) (len=4) "name": (string) (len=22) "thanos-objstore-config"
     }
    },
    (string) (len=12) "ruleSelector": (map[string]interface {}) (len=1) {
     (string) (len=11) "matchLabels": (map[string]interface {}) (len=2) {
      (string) (len=10) "prometheus": (string) (len=3) "k8s",
      (string) (len=4) "role": (string) (len=11) "alert-rules"
     }
    },
    (string) (len=8) "alerting": (map[string]interface {}) (len=1) {
     (string) (len=13) "alertmanagers": ([]interface {}) (len=1 cap=1) {
      (map[string]interface {}) (len=3) {
       (string) (len=4) "port": (string) (len=3) "web",
       (string) (len=4) "name": (string) (len=17) "alertmanager-main",
       (string) (len=9) "namespace": (string) (len=10) "monitoring"
      }
     }
    },
    (string) (len=14) "externalLabels": (map[string]interface {}) (len=2) {
     (string) (len=7) "product": (string) (len=13) "api beep boop",
     (string) (len=7) "cluster": (string) (len=12) "my-cluster-2"
    },
    (string) (len=12) "nodeSelector": (map[string]interface {}) (len=1) {
     (string) (len=4) "role": (string) (len=8) "services"
    },
    (string) (len=13) "probeSelector": (map[string]interface {}) {
    },
    (string) (len=7) "version": (string) (len=7) "v2.25.2",
    (string) (len=23) "additionalScrapeConfigs": (map[string]interface {}) (len=2) {
     (string) (len=4) "name": (string) (len=25) "additional-scrape-configs",
     (string) (len=3) "key": (string) (len=26) "prometheus-additional.yaml"
    },
    (string) (len=14) "scrapeInterval": (string) (len=3) "30s",
    (string) (len=9) "resources": (map[string]interface {}) (len=2) {
     (string) (len=6) "limits": (map[string]interface {}) (len=2) {
      (string) (len=3) "cpu": (string) (len=4) "250m",
      (string) (len=6) "memory": (string) (len=6) "1024Mi"
     },
     (string) (len=8) "requests": (map[string]interface {}) (len=2) {
      (string) (len=3) "cpu": (string) (len=4) "200m",
      (string) (len=6) "memory": (string) (len=5) "200Mi"
     }
    },
    (string) (len=31) "serviceMonitorNamespaceSelector": (map[string]interface {}) {
    },
    (string) (len=7) "storage": (map[string]interface {}) (len=1) {
     (string) (len=19) "volumeClaimTemplate": (map[string]interface {}) (len=1) {
      (string) (len=4) "spec": (map[string]interface {}) (len=2) {
       (string) (len=9) "resources": (map[string]interface {}) (len=1) {
        (string) (len=8) "requests": (map[string]interface {}) (len=1) {
         (string) (len=7) "storage": (string) (len=4) "10Gi"
        }
       },
       (string) (len=16) "storageClassName": (string) (len=3) "gp2"
      }
     }
    },
    (string) (len=27) "podMonitorNamespaceSelector": (map[string]interface {}) {
    },
    (string) (len=5) "image": (string) (len=37) "quay.io/prometheus/prometheus:v2.25.2"
   },
   (string) (len=10) "apiVersion": (string) (len=24) "monitoring.coreos.com/v1"
  },
  (string) (len=8) "wait_for": (interface {}) <nil>
 }
}

RAW provider 2021/04/04 00:03:51 [ApplyResourceChange][Request][PlannedPrivate]
([]uint8) <nil>

RAW provider 2021/04/04 00:03:51 [ApplyResourceChange][Update] API response:
(*unstructured.Unstructured)(0xc0000a2040)({
 Object: (map[string]interface {}) (len=4) {
  (string) (len=10) "apiVersion": (string) (len=24) "monitoring.coreos.com/v1",
  (string) (len=4) "kind": (string) (len=10) "Prometheus",
  (string) (len=8) "metadata": (map[string]interface {}) (len=8) {
   (string) (len=4) "name": (string) (len=6) "test-1",
   (string) (len=9) "namespace": (string) (len=15) "test-operator-1",
   (string) (len=15) "resourceVersion": (string) (len=8) "50995253",
   (string) (len=8) "selfLink": (string) (len=77) "/apis/monitoring.coreos.com/v1/namespaces/test-operator-1/prometheuses/test-1",
   (string) (len=3) "uid": (string) (len=36) "4fb61a0d-9f19-4b6d-8d53-45d2b4f903b7",
   (string) (len=17) "creationTimestamp": (string) (len=20) "2021-04-04T03:45:15Z",
   (string) (len=10) "generation": (int64) 4,
   (string) (len=13) "managedFields": ([]interface {}) (len=1 cap=1) {
    (map[string]interface {}) (len=6) {
     (string) (len=4) "time": (string) (len=20) "2021-04-04T04:03:51Z",
     (string) (len=10) "apiVersion": (string) (len=24) "monitoring.coreos.com/v1",
     (string) (len=10) "fieldsType": (string) (len=8) "FieldsV1",
     (string) (len=8) "fieldsV1": (map[string]interface {}) (len=1) {
      (string) (len=6) "f:spec": (map[string]interface {}) (len=21) {
       (string) (len=24) "f:probeNamespaceSelector": (map[string]interface {}) {
       },
       (string) (len=14) "f:ruleSelector": (map[string]interface {}) (len=2) {
        (string) (len=1) ".": (map[string]interface {}) {
        },
        (string) (len=13) "f:matchLabels": (map[string]interface {}) (len=3) {
         (string) (len=12) "f:prometheus": (map[string]interface {}) {
         },
         (string) (len=6) "f:role": (map[string]interface {}) {
         },
         (string) (len=1) ".": (map[string]interface {}) {
         }
        }
       },
       (string) (len=9) "f:version": (map[string]interface {}) {
       },
       (string) (len=25) "f:additionalScrapeConfigs": (map[string]interface {}) (len=3) {
        (string) (len=6) "f:name": (map[string]interface {}) {
        },
        (string) (len=1) ".": (map[string]interface {}) {
        },
        (string) (len=5) "f:key": (map[string]interface {}) {
        }
       },
       (string) (len=20) "f:podMonitorSelector": (map[string]interface {}) {
       },
       (string) (len=29) "f:podMonitorNamespaceSelector": (map[string]interface {}) {
       },
       (string) (len=15) "f:probeSelector": (map[string]interface {}) {
       },
       (string) (len=10) "f:replicas": (map[string]interface {}) {
       },
       (string) (len=8) "f:thanos": (map[string]interface {}) (len=4) {
        (string) (len=1) ".": (map[string]interface {}) {
        },
        (string) (len=11) "f:baseImage": (map[string]interface {}) {
        },
        (string) (len=21) "f:objectStorageConfig": (map[string]interface {}) (len=3) {
         (string) (len=1) ".": (map[string]interface {}) {
         },
         (string) (len=5) "f:key": (map[string]interface {}) {
         },
         (string) (len=6) "f:name": (map[string]interface {}) {
         }
        },
        (string) (len=9) "f:version": (map[string]interface {}) {
        }
       },
       (string) (len=16) "f:externalLabels": (map[string]interface {}) (len=3) {
        (string) (len=9) "f:cluster": (map[string]interface {}) {
        },
        (string) (len=9) "f:product": (map[string]interface {}) {
        },
        (string) (len=1) ".": (map[string]interface {}) {
        }
       },
       (string) (len=7) "f:image": (map[string]interface {}) {
       },
       (string) (len=14) "f:nodeSelector": (map[string]interface {}) (len=2) {
        (string) (len=1) ".": (map[string]interface {}) {
        },
        (string) (len=6) "f:role": (map[string]interface {}) {
        }
       },
       (string) (len=11) "f:resources": (map[string]interface {}) (len=3) {
        (string) (len=10) "f:requests": (map[string]interface {}) (len=3) {
         (string) (len=1) ".": (map[string]interface {}) {
         },
         (string) (len=5) "f:cpu": (map[string]interface {}) {
         },
         (string) (len=8) "f:memory": (map[string]interface {}) {
         }
        },
        (string) (len=1) ".": (map[string]interface {}) {
        },
        (string) (len=8) "f:limits": (map[string]interface {}) (len=3) {
         (string) (len=1) ".": (map[string]interface {}) {
         },
         (string) (len=5) "f:cpu": (map[string]interface {}) {
         },
         (string) (len=8) "f:memory": (map[string]interface {}) {
         }
        }
       },
       (string) (len=17) "f:securityContext": (map[string]interface {}) (len=4) {
        (string) (len=9) "f:fsGroup": (map[string]interface {}) {
        },
        (string) (len=14) "f:runAsNonRoot": (map[string]interface {}) {
        },
        (string) (len=11) "f:runAsUser": (map[string]interface {}) {
        },
        (string) (len=1) ".": (map[string]interface {}) {
        }
       },
       (string) (len=24) "f:serviceMonitorSelector": (map[string]interface {}) {
       },
       (string) (len=1) ".": (map[string]interface {}) {
       },
       (string) (len=10) "f:alerting": (map[string]interface {}) (len=2) {
        (string) (len=15) "f:alertmanagers": (map[string]interface {}) {
        },
        (string) (len=1) ".": (map[string]interface {}) {
        }
       },
       (string) (len=33) "f:serviceMonitorNamespaceSelector": (map[string]interface {}) {
       },
       (string) (len=9) "f:storage": (map[string]interface {}) (len=2) {
        (string) (len=1) ".": (map[string]interface {}) {
        },
        (string) (len=21) "f:volumeClaimTemplate": (map[string]interface {}) (len=2) {
         (string) (len=1) ".": (map[string]interface {}) {
         },
         (string) (len=6) "f:spec": (map[string]interface {}) (len=3) {
          (string) (len=18) "f:storageClassName": (map[string]interface {}) {
          },
          (string) (len=1) ".": (map[string]interface {}) {
          },
          (string) (len=11) "f:resources": (map[string]interface {}) (len=2) {
           (string) (len=1) ".": (map[string]interface {}) {
           },
           (string) (len=10) "f:requests": (map[string]interface {}) (len=2) {
            (string) (len=1) ".": (map[string]interface {}) {
            },
            (string) (len=9) "f:storage": (map[string]interface {}) {
            }
           }
          }
         }
        }
       },
       (string) (len=16) "f:scrapeInterval": (map[string]interface {}) {
       },
       (string) (len=20) "f:serviceAccountName": (map[string]interface {}) {
       }
      }
     },
     (string) (len=7) "manager": (string) (len=9) "Terraform",
     (string) (len=9) "operation": (string) (len=5) "Apply"
    }
   }
  },
  (string) (len=4) "spec": (map[string]interface {}) (len=20) {
   (string) (len=5) "image": (string) (len=37) "quay.io/prometheus/prometheus:v2.25.2",
   (string) (len=8) "replicas": (int64) 1,
   (string) (len=9) "resources": (map[string]interface {}) (len=2) {
    (string) (len=6) "limits": (map[string]interface {}) (len=2) {
     (string) (len=3) "cpu": (string) (len=4) "250m",
     (string) (len=6) "memory": (string) (len=6) "1024Mi"
    },
    (string) (len=8) "requests": (map[string]interface {}) (len=2) {
     (string) (len=3) "cpu": (string) (len=4) "200m",
     (string) (len=6) "memory": (string) (len=5) "200Mi"
    }
   },
   (string) (len=22) "serviceMonitorSelector": (map[string]interface {}) {
   },
   (string) (len=14) "externalLabels": (map[string]interface {}) (len=2) {
    (string) (len=7) "cluster": (string) (len=12) "my-cluster-2",
    (string) (len=7) "product": (string) (len=13) "api beep boop"
   },
   (string) (len=27) "podMonitorNamespaceSelector": (map[string]interface {}) {
   },
   (string) (len=14) "scrapeInterval": (string) (len=2) "5s",
   (string) (len=6) "thanos": (map[string]interface {}) (len=3) {
    (string) (len=19) "objectStorageConfig": (map[string]interface {}) (len=2) {
     (string) (len=4) "name": (string) (len=22) "thanos-objstore-config",
     (string) (len=3) "key": (string) (len=11) "thanos.yaml"
    },
    (string) (len=7) "version": (string) (len=7) "v0.16.0",
    (string) (len=9) "baseImage": (string) (len=21) "quay.io/thanos/thanos"
   },
   (string) (len=7) "version": (string) (len=7) "v2.25.2",
   (string) (len=18) "podMonitorSelector": (map[string]interface {}) {
   },
   (string) (len=13) "probeSelector": (map[string]interface {}) {
   },
   (string) (len=12) "ruleSelector": (map[string]interface {}) (len=1) {
    (string) (len=11) "matchLabels": (map[string]interface {}) (len=2) {
     (string) (len=10) "prometheus": (string) (len=3) "k8s",
     (string) (len=4) "role": (string) (len=11) "alert-rules"
    }
   },
   (string) (len=15) "securityContext": (map[string]interface {}) (len=3) {
    (string) (len=7) "fsGroup": (int64) 2000,
    (string) (len=12) "runAsNonRoot": (bool) true,
    (string) (len=9) "runAsUser": (int64) 1000
   },
   (string) (len=18) "serviceAccountName": (string) (len=14) "prometheus-k8s",
   (string) (len=7) "storage": (map[string]interface {}) (len=1) {
    (string) (len=19) "volumeClaimTemplate": (map[string]interface {}) (len=1) {
     (string) (len=4) "spec": (map[string]interface {}) (len=2) {
      (string) (len=9) "resources": (map[string]interface {}) (len=1) {
       (string) (len=8) "requests": (map[string]interface {}) (len=1) {
        (string) (len=7) "storage": (string) (len=4) "10Gi"
       }
      },
      (string) (len=16) "storageClassName": (string) (len=3) "gp2"
     }
    }
   },
   (string) (len=23) "additionalScrapeConfigs": (map[string]interface {}) (len=2) {
    (string) (len=3) "key": (string) (len=26) "prometheus-additional.yaml",
    (string) (len=4) "name": (string) (len=25) "additional-scrape-configs"
   },
   (string) (len=8) "alerting": (map[string]interface {}) (len=1) {
    (string) (len=13) "alertmanagers": ([]interface {}) (len=1 cap=1) {
     (map[string]interface {}) (len=3) {
      (string) (len=4) "name": (string) (len=17) "alertmanager-main",
      (string) (len=9) "namespace": (string) (len=10) "monitoring",
      (string) (len=4) "port": (string) (len=3) "web"
     }
    }
   },
   (string) (len=12) "nodeSelector": (map[string]interface {}) (len=1) {
    (string) (len=4) "role": (string) (len=8) "services"
   },
   (string) (len=22) "probeNamespaceSelector": (map[string]interface {}) {
   },
   (string) (len=31) "serviceMonitorNamespaceSelector": (map[string]interface {}) {
   }
  }
 }
})

RAW provider 2021/04/04 00:03:51 [ApplyResourceChange][Update] transformed response:
(cty.Value) {
 ty: (cty.Type) {
  typeImpl: (cty.typeObject) {
   typeImplSigil: (cty.typeImplSigil) {
   },
   AttrTypes: (map[string]cty.Type) (len=4) {
    (string) (len=8) "metadata": (cty.Type) {
     typeImpl: (cty.typeObject) {
      typeImplSigil: (cty.typeImplSigil) {
      },
      AttrTypes: (map[string]cty.Type) (len=2) {
       (string) (len=4) "name": (cty.Type) {
        typeImpl: (cty.primitiveType) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         Kind: (cty.primitiveTypeKind) 83
        }
       },
       (string) (len=9) "namespace": (cty.Type) {
        typeImpl: (cty.primitiveType) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         Kind: (cty.primitiveTypeKind) 83
        }
       }
      }
     }
    },
    (string) (len=4) "spec": (cty.Type) {
     typeImpl: (cty.typeObject) {
      typeImplSigil: (cty.typeImplSigil) {
      },
      AttrTypes: (map[string]cty.Type) (len=20) {
       (string) (len=8) "replicas": (cty.Type) {
        typeImpl: (cty.primitiveType) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         Kind: (cty.primitiveTypeKind) 78
        }
       },
       (string) (len=22) "probeNamespaceSelector": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) {
         }
        }
       },
       (string) (len=14) "scrapeInterval": (cty.Type) {
        typeImpl: (cty.primitiveType) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         Kind: (cty.primitiveTypeKind) 83
        }
       },
       (string) (len=7) "storage": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) (len=1) {
          (string) (len=19) "volumeClaimTemplate": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=1) {
             (string) (len=4) "spec": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=9) "resources": (cty.Type) {
                 typeImpl: (cty.typeObject) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  AttrTypes: (map[string]cty.Type) (len=1) {
                   (string) (len=8) "requests": (cty.Type) {
                    typeImpl: (cty.typeObject) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     AttrTypes: (map[string]cty.Type) (len=1) {
                      (string) (len=7) "storage": (cty.Type) {
                       typeImpl: (cty.primitiveType) {
                        typeImplSigil: (cty.typeImplSigil) {
                        },
                        Kind: (cty.primitiveTypeKind) 83
                       }
                      }
                     }
                    }
                   }
                  }
                 }
                },
                (string) (len=16) "storageClassName": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             }
            }
           }
          }
         }
        }
       },
       (string) (len=5) "image": (cty.Type) {
        typeImpl: (cty.primitiveType) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         Kind: (cty.primitiveTypeKind) 83
        }
       },
       (string) (len=13) "probeSelector": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) {
         }
        }
       },
       (string) (len=8) "alerting": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) (len=1) {
          (string) (len=13) "alertmanagers": (cty.Type) {
           typeImpl: (cty.typeTuple) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            ElemTypes: ([]cty.Type) (len=1 cap=1) {
             (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=3) {
                (string) (len=4) "name": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=9) "namespace": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=4) "port": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             }
            }
           }
          }
         }
        }
       },
       (string) (len=12) "ruleSelector": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) (len=1) {
          (string) (len=11) "matchLabels": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=2) {
             (string) (len=10) "prometheus": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             },
             (string) (len=4) "role": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             }
            }
           }
          }
         }
        }
       },
       (string) (len=27) "podMonitorNamespaceSelector": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) {
         }
        }
       },
       (string) (len=18) "podMonitorSelector": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) {
         }
        }
       },
       (string) (len=9) "resources": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) (len=2) {
          (string) (len=6) "limits": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=2) {
             (string) (len=6) "memory": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             },
             (string) (len=3) "cpu": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             }
            }
           }
          },
          (string) (len=8) "requests": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=2) {
             (string) (len=3) "cpu": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             },
             (string) (len=6) "memory": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             }
            }
           }
          }
         }
        }
       },
       (string) (len=15) "securityContext": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) (len=3) {
          (string) (len=9) "runAsUser": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 78
           }
          },
          (string) (len=7) "fsGroup": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 78
           }
          },
          (string) (len=12) "runAsNonRoot": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 66
           }
          }
         }
        }
       },
       (string) (len=6) "thanos": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) (len=3) {
          (string) (len=9) "baseImage": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=19) "objectStorageConfig": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=2) {
             (string) (len=3) "key": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             },
             (string) (len=4) "name": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             }
            }
           }
          },
          (string) (len=7) "version": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          }
         }
        }
       },
       (string) (len=18) "serviceAccountName": (cty.Type) {
        typeImpl: (cty.primitiveType) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         Kind: (cty.primitiveTypeKind) 83
        }
       },
       (string) (len=7) "version": (cty.Type) {
        typeImpl: (cty.primitiveType) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         Kind: (cty.primitiveTypeKind) 83
        }
       },
       (string) (len=14) "externalLabels": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) (len=2) {
          (string) (len=7) "cluster": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=7) "product": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          }
         }
        }
       },
       (string) (len=31) "serviceMonitorNamespaceSelector": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) {
         }
        }
       },
       (string) (len=23) "additionalScrapeConfigs": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) (len=2) {
          (string) (len=3) "key": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=4) "name": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          }
         }
        }
       },
       (string) (len=22) "serviceMonitorSelector": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) {
         }
        }
       },
       (string) (len=12) "nodeSelector": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) (len=1) {
          (string) (len=4) "role": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          }
         }
        }
       }
      }
     }
    },
    (string) (len=10) "apiVersion": (cty.Type) {
     typeImpl: (cty.primitiveType) {
      typeImplSigil: (cty.typeImplSigil) {
      },
      Kind: (cty.primitiveTypeKind) 83
     }
    },
    (string) (len=4) "kind": (cty.Type) {
     typeImpl: (cty.primitiveType) {
      typeImplSigil: (cty.typeImplSigil) {
      },
      Kind: (cty.primitiveTypeKind) 83
     }
    }
   }
  }
 },
 v: (map[string]interface {}) (len=4) {
  (string) (len=4) "spec": (map[string]interface {}) (len=20) {
   (string) (len=13) "probeSelector": (map[string]interface {}) {
   },
   (string) (len=14) "scrapeInterval": (string) (len=2) "5s",
   (string) (len=12) "nodeSelector": (map[string]interface {}) (len=1) {
    (string) (len=4) "role": (string) (len=8) "services"
   },
   (string) (len=27) "podMonitorNamespaceSelector": (map[string]interface {}) {
   },
   (string) (len=5) "image": (string) (len=37) "quay.io/prometheus/prometheus:v2.25.2",
   (string) (len=6) "thanos": (map[string]interface {}) (len=3) {
    (string) (len=7) "version": (string) (len=7) "v0.16.0",
    (string) (len=9) "baseImage": (string) (len=21) "quay.io/thanos/thanos",
    (string) (len=19) "objectStorageConfig": (map[string]interface {}) (len=2) {
     (string) (len=4) "name": (string) (len=22) "thanos-objstore-config",
     (string) (len=3) "key": (string) (len=11) "thanos.yaml"
    }
   },
   (string) (len=8) "replicas": (*big.Float)(0xc00043a810)(1),
   (string) (len=22) "probeNamespaceSelector": (map[string]interface {}) {
   },
   (string) (len=15) "securityContext": (map[string]interface {}) (len=3) {
    (string) (len=7) "fsGroup": (*big.Float)(0xc00043af00)(2000),
    (string) (len=12) "runAsNonRoot": (bool) true,
    (string) (len=9) "runAsUser": (*big.Float)(0xc00043af90)(1000)
   },
   (string) (len=22) "serviceMonitorSelector": (map[string]interface {}) {
   },
   (string) (len=18) "podMonitorSelector": (map[string]interface {}) {
   },
   (string) (len=7) "storage": (map[string]interface {}) (len=1) {
    (string) (len=19) "volumeClaimTemplate": (map[string]interface {}) (len=1) {
     (string) (len=4) "spec": (map[string]interface {}) (len=2) {
      (string) (len=9) "resources": (map[string]interface {}) (len=1) {
       (string) (len=8) "requests": (map[string]interface {}) (len=1) {
        (string) (len=7) "storage": (string) (len=4) "10Gi"
       }
      },
      (string) (len=16) "storageClassName": (string) (len=3) "gp2"
     }
    }
   },
   (string) (len=14) "externalLabels": (map[string]interface {}) (len=2) {
    (string) (len=7) "product": (string) (len=13) "api beep boop",
    (string) (len=7) "cluster": (string) (len=12) "my-cluster-2"
   },
   (string) (len=9) "resources": (map[string]interface {}) (len=2) {
    (string) (len=6) "limits": (map[string]interface {}) (len=2) {
     (string) (len=3) "cpu": (string) (len=4) "250m",
     (string) (len=6) "memory": (string) (len=6) "1024Mi"
    },
    (string) (len=8) "requests": (map[string]interface {}) (len=2) {
     (string) (len=3) "cpu": (string) (len=4) "200m",
     (string) (len=6) "memory": (string) (len=5) "200Mi"
    }
   },
   (string) (len=12) "ruleSelector": (map[string]interface {}) (len=1) {
    (string) (len=11) "matchLabels": (map[string]interface {}) (len=2) {
     (string) (len=4) "role": (string) (len=11) "alert-rules",
     (string) (len=10) "prometheus": (string) (len=3) "k8s"
    }
   },
   (string) (len=23) "additionalScrapeConfigs": (map[string]interface {}) (len=2) {
    (string) (len=3) "key": (string) (len=26) "prometheus-additional.yaml",
    (string) (len=4) "name": (string) (len=25) "additional-scrape-configs"
   },
   (string) (len=7) "version": (string) (len=7) "v2.25.2",
   (string) (len=8) "alerting": (map[string]interface {}) (len=1) {
    (string) (len=13) "alertmanagers": ([]interface {}) (len=1 cap=1) {
     (map[string]interface {}) (len=3) {
      (string) (len=4) "name": (string) (len=17) "alertmanager-main",
      (string) (len=9) "namespace": (string) (len=10) "monitoring",
      (string) (len=4) "port": (string) (len=3) "web"
     }
    }
   },
   (string) (len=18) "serviceAccountName": (string) (len=14) "prometheus-k8s",
   (string) (len=31) "serviceMonitorNamespaceSelector": (map[string]interface {}) {
   }
  },
  (string) (len=10) "apiVersion": (string) (len=24) "monitoring.coreos.com/v1",
  (string) (len=4) "kind": (string) (len=10) "Prometheus",
  (string) (len=8) "metadata": (map[string]interface {}) (len=2) {
   (string) (len=4) "name": (string) (len=6) "test-1",
   (string) (len=9) "namespace": (string) (len=15) "test-operator-1"
  }
 }
}
RAW provider 2021/04/04 00:03:51 [ApplyResourceChange][Update] transformed new state:
(cty.Value) {
 ty: (cty.Type) {
  typeImpl: (cty.typeObject) {
   typeImplSigil: (cty.typeImplSigil) {
   },
   AttrTypes: (map[string]cty.Type) (len=3) {
    (string) (len=8) "manifest": (cty.Type) {
     typeImpl: (cty.typeObject) {
      typeImplSigil: (cty.typeImplSigil) {
      },
      AttrTypes: (map[string]cty.Type) (len=4) {
       (string) (len=8) "metadata": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) (len=2) {
          (string) (len=4) "name": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=9) "namespace": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          }
         }
        }
       },
       (string) (len=4) "spec": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) (len=22) {
          (string) (len=31) "serviceMonitorNamespaceSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=7) "version": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=5) "image": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=14) "scrapeInterval": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=6) "thanos": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=3) {
             (string) (len=7) "version": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             },
             (string) (len=9) "baseImage": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             },
             (string) (len=19) "objectStorageConfig": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=4) "name": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=3) "key": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=9) "resources": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=2) {
             (string) (len=6) "limits": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=3) "cpu": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=6) "memory": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             },
             (string) (len=8) "requests": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=3) "cpu": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=6) "memory": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=15) "securityContext": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=3) {
             (string) (len=7) "fsGroup": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 78
              }
             },
             (string) (len=12) "runAsNonRoot": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 66
              }
             },
             (string) (len=9) "runAsUser": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 78
              }
             }
            }
           }
          },
          (string) (len=12) "nodeSelector": (cty.Type) {
           typeImpl: (cty.typeMap) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            ElementTypeT: (cty.Type) {
             typeImpl: (cty.primitiveType) {
              typeImplSigil: (cty.typeImplSigil) {
              },
              Kind: (cty.primitiveTypeKind) 83
             }
            }
           }
          },
          (string) (len=8) "replicas": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 78
           }
          },
          (string) (len=18) "podMonitorSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=18) "serviceAccountName": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=8) "alerting": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=1) {
             (string) (len=13) "alertmanagers": (cty.Type) {
              typeImpl: (cty.typeTuple) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               ElemTypes: ([]cty.Type) (len=1 cap=1) {
                (cty.Type) {
                 typeImpl: (cty.typeObject) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  AttrTypes: (map[string]cty.Type) (len=3) {
                   (string) (len=4) "name": (cty.Type) {
                    typeImpl: (cty.primitiveType) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     Kind: (cty.primitiveTypeKind) 83
                    }
                   },
                   (string) (len=9) "namespace": (cty.Type) {
                    typeImpl: (cty.primitiveType) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     Kind: (cty.primitiveTypeKind) 83
                    }
                   },
                   (string) (len=4) "port": (cty.Type) {
                    typeImpl: (cty.primitiveType) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     Kind: (cty.primitiveTypeKind) 83
                    }
                   }
                  }
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=12) "ruleSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=1) {
             (string) (len=11) "matchLabels": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=4) "role": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=10) "prometheus": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=22) "serviceMonitorSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=7) "storage": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=1) {
             (string) (len=19) "volumeClaimTemplate": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=1) {
                (string) (len=4) "spec": (cty.Type) {
                 typeImpl: (cty.typeObject) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  AttrTypes: (map[string]cty.Type) (len=2) {
                   (string) (len=9) "resources": (cty.Type) {
                    typeImpl: (cty.typeObject) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     AttrTypes: (map[string]cty.Type) (len=1) {
                      (string) (len=8) "requests": (cty.Type) {
                       typeImpl: (cty.typeObject) {
                        typeImplSigil: (cty.typeImplSigil) {
                        },
                        AttrTypes: (map[string]cty.Type) (len=1) {
                         (string) (len=7) "storage": (cty.Type) {
                          typeImpl: (cty.primitiveType) {
                           typeImplSigil: (cty.typeImplSigil) {
                           },
                           Kind: (cty.primitiveTypeKind) 83
                          }
                         }
                        }
                       }
                      }
                     }
                    }
                   },
                   (string) (len=16) "storageClassName": (cty.Type) {
                    typeImpl: (cty.primitiveType) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     Kind: (cty.primitiveTypeKind) 83
                    }
                   }
                  }
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=9) "namespace": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=27) "podMonitorNamespaceSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=4) "name": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=22) "probeNamespaceSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=23) "additionalScrapeConfigs": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=2) {
             (string) (len=4) "name": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             },
             (string) (len=3) "key": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             }
            }
           }
          },
          (string) (len=13) "probeSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=14) "externalLabels": (cty.Type) {
           typeImpl: (cty.typeMap) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            ElementTypeT: (cty.Type) {
             typeImpl: (cty.primitiveType) {
              typeImplSigil: (cty.typeImplSigil) {
              },
              Kind: (cty.primitiveTypeKind) 83
             }
            }
           }
          }
         }
        }
       },
       (string) (len=10) "apiVersion": (cty.Type) {
        typeImpl: (cty.primitiveType) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         Kind: (cty.primitiveTypeKind) 83
        }
       },
       (string) (len=4) "kind": (cty.Type) {
        typeImpl: (cty.primitiveType) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         Kind: (cty.primitiveTypeKind) 83
        }
       }
      }
     }
    },
    (string) (len=6) "object": (cty.Type) {
     typeImpl: (cty.typeObject) {
      typeImplSigil: (cty.typeImplSigil) {
      },
      AttrTypes: (map[string]cty.Type) (len=4) {
       (string) (len=4) "kind": (cty.Type) {
        typeImpl: (cty.primitiveType) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         Kind: (cty.primitiveTypeKind) 83
        }
       },
       (string) (len=8) "metadata": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) (len=2) {
          (string) (len=9) "namespace": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=4) "name": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          }
         }
        }
       },
       (string) (len=4) "spec": (cty.Type) {
        typeImpl: (cty.typeObject) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         AttrTypes: (map[string]cty.Type) (len=20) {
          (string) (len=8) "replicas": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 78
           }
          },
          (string) (len=22) "probeNamespaceSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=14) "scrapeInterval": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=7) "storage": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=1) {
             (string) (len=19) "volumeClaimTemplate": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=1) {
                (string) (len=4) "spec": (cty.Type) {
                 typeImpl: (cty.typeObject) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  AttrTypes: (map[string]cty.Type) (len=2) {
                   (string) (len=16) "storageClassName": (cty.Type) {
                    typeImpl: (cty.primitiveType) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     Kind: (cty.primitiveTypeKind) 83
                    }
                   },
                   (string) (len=9) "resources": (cty.Type) {
                    typeImpl: (cty.typeObject) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     AttrTypes: (map[string]cty.Type) (len=1) {
                      (string) (len=8) "requests": (cty.Type) {
                       typeImpl: (cty.typeObject) {
                        typeImplSigil: (cty.typeImplSigil) {
                        },
                        AttrTypes: (map[string]cty.Type) (len=1) {
                         (string) (len=7) "storage": (cty.Type) {
                          typeImpl: (cty.primitiveType) {
                           typeImplSigil: (cty.typeImplSigil) {
                           },
                           Kind: (cty.primitiveTypeKind) 83
                          }
                         }
                        }
                       }
                      }
                     }
                    }
                   }
                  }
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=18) "podMonitorSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=5) "image": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=13) "probeSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=8) "alerting": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=1) {
             (string) (len=13) "alertmanagers": (cty.Type) {
              typeImpl: (cty.typeTuple) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               ElemTypes: ([]cty.Type) (len=1 cap=1) {
                (cty.Type) {
                 typeImpl: (cty.typeObject) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  AttrTypes: (map[string]cty.Type) (len=3) {
                   (string) (len=4) "name": (cty.Type) {
                    typeImpl: (cty.primitiveType) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     Kind: (cty.primitiveTypeKind) 83
                    }
                   },
                   (string) (len=9) "namespace": (cty.Type) {
                    typeImpl: (cty.primitiveType) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     Kind: (cty.primitiveTypeKind) 83
                    }
                   },
                   (string) (len=4) "port": (cty.Type) {
                    typeImpl: (cty.primitiveType) {
                     typeImplSigil: (cty.typeImplSigil) {
                     },
                     Kind: (cty.primitiveTypeKind) 83
                    }
                   }
                  }
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=12) "ruleSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=1) {
             (string) (len=11) "matchLabels": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=4) "role": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=10) "prometheus": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=27) "podMonitorNamespaceSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=14) "externalLabels": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=2) {
             (string) (len=7) "cluster": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             },
             (string) (len=7) "product": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             }
            }
           }
          },
          (string) (len=31) "serviceMonitorNamespaceSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=9) "resources": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=2) {
             (string) (len=6) "limits": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=3) "cpu": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=6) "memory": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             },
             (string) (len=8) "requests": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=3) "cpu": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=6) "memory": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             }
            }
           }
          },
          (string) (len=15) "securityContext": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=3) {
             (string) (len=7) "fsGroup": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 78
              }
             },
             (string) (len=12) "runAsNonRoot": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 66
              }
             },
             (string) (len=9) "runAsUser": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 78
              }
             }
            }
           }
          },
          (string) (len=6) "thanos": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=3) {
             (string) (len=19) "objectStorageConfig": (cty.Type) {
              typeImpl: (cty.typeObject) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               AttrTypes: (map[string]cty.Type) (len=2) {
                (string) (len=3) "key": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                },
                (string) (len=4) "name": (cty.Type) {
                 typeImpl: (cty.primitiveType) {
                  typeImplSigil: (cty.typeImplSigil) {
                  },
                  Kind: (cty.primitiveTypeKind) 83
                 }
                }
               }
              }
             },
             (string) (len=7) "version": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             },
             (string) (len=9) "baseImage": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             }
            }
           }
          },
          (string) (len=18) "serviceAccountName": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=7) "version": (cty.Type) {
           typeImpl: (cty.primitiveType) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            Kind: (cty.primitiveTypeKind) 83
           }
          },
          (string) (len=23) "additionalScrapeConfigs": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=2) {
             (string) (len=3) "key": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             },
             (string) (len=4) "name": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             }
            }
           }
          },
          (string) (len=22) "serviceMonitorSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) {
            }
           }
          },
          (string) (len=12) "nodeSelector": (cty.Type) {
           typeImpl: (cty.typeObject) {
            typeImplSigil: (cty.typeImplSigil) {
            },
            AttrTypes: (map[string]cty.Type) (len=1) {
             (string) (len=4) "role": (cty.Type) {
              typeImpl: (cty.primitiveType) {
               typeImplSigil: (cty.typeImplSigil) {
               },
               Kind: (cty.primitiveTypeKind) 83
              }
             }
            }
           }
          }
         }
        }
       },
       (string) (len=10) "apiVersion": (cty.Type) {
        typeImpl: (cty.primitiveType) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         Kind: (cty.primitiveTypeKind) 83
        }
       }
      }
     }
    },
    (string) (len=8) "wait_for": (cty.Type) {
     typeImpl: (cty.typeObject) {
      typeImplSigil: (cty.typeImplSigil) {
      },
      AttrTypes: (map[string]cty.Type) (len=1) {
       (string) (len=6) "fields": (cty.Type) {
        typeImpl: (cty.typeMap) {
         typeImplSigil: (cty.typeImplSigil) {
         },
         ElementTypeT: (cty.Type) {
          typeImpl: (cty.primitiveType) {
           typeImplSigil: (cty.typeImplSigil) {
           },
           Kind: (cty.primitiveTypeKind) 83
          }
         }
        }
       }
      }
     }
    }
   }
  }
 },
 v: (map[string]interface {}) (len=3) {
  (string) (len=8) "manifest": (map[string]interface {}) (len=4) {
   (string) (len=8) "metadata": (map[string]interface {}) (len=2) {
    (string) (len=4) "name": (string) (len=6) "test-1",
    (string) (len=9) "namespace": (string) (len=15) "test-operator-1"
   },
   (string) (len=4) "spec": (map[string]interface {}) (len=22) {
    (string) (len=13) "probeSelector": (map[string]interface {}) {
    },
    (string) (len=4) "name": (string) (len=6) "test-1",
    (string) (len=22) "probeNamespaceSelector": (map[string]interface {}) {
    },
    (string) (len=22) "serviceMonitorSelector": (map[string]interface {}) {
    },
    (string) (len=12) "ruleSelector": (map[string]interface {}) (len=1) {
     (string) (len=11) "matchLabels": (map[string]interface {}) (len=2) {
      (string) (len=10) "prometheus": (string) (len=3) "k8s",
      (string) (len=4) "role": (string) (len=11) "alert-rules"
     }
    },
    (string) (len=15) "securityContext": (map[string]interface {}) (len=3) {
     (string) (len=9) "runAsUser": (*big.Float)(0xc0001a83f0)(1000),
     (string) (len=7) "fsGroup": (*big.Float)(0xc0001a80c0)(2000),
     (string) (len=12) "runAsNonRoot": (bool) true
    },
    (string) (len=14) "scrapeInterval": (string) (len=2) "5s",
    (string) (len=8) "replicas": (*big.Float)(0xc00007ee40)(1),
    (string) (len=27) "podMonitorNamespaceSelector": (map[string]interface {}) {
    },
    (string) (len=9) "resources": (map[string]interface {}) (len=2) {
     (string) (len=6) "limits": (map[string]interface {}) (len=2) {
      (string) (len=3) "cpu": (string) (len=4) "250m",
      (string) (len=6) "memory": (string) (len=6) "1024Mi"
     },
     (string) (len=8) "requests": (map[string]interface {}) (len=2) {
      (string) (len=3) "cpu": (string) (len=4) "200m",
      (string) (len=6) "memory": (string) (len=5) "200Mi"
     }
    },
    (string) (len=12) "nodeSelector": (map[string]interface {}) (len=1) {
     (string) (len=4) "role": (string) (len=8) "services"
    },
    (string) (len=5) "image": (string) (len=37) "quay.io/prometheus/prometheus:v2.25.2",
    (string) (len=8) "alerting": (map[string]interface {}) (len=1) {
     (string) (len=13) "alertmanagers": ([]interface {}) (len=1 cap=1) {
      (map[string]interface {}) (len=3) {
       (string) (len=4) "port": (string) (len=3) "web",
       (string) (len=4) "name": (string) (len=17) "alertmanager-main",
       (string) (len=9) "namespace": (string) (len=10) "monitoring"
      }
     }
    },
    (string) (len=9) "namespace": (string) (len=15) "test-operator-1",
    (string) (len=7) "version": (string) (len=7) "v2.25.2",
    (string) (len=23) "additionalScrapeConfigs": (map[string]interface {}) (len=2) {
     (string) (len=3) "key": (string) (len=26) "prometheus-additional.yaml",
     (string) (len=4) "name": (string) (len=25) "additional-scrape-configs"
    },
    (string) (len=14) "externalLabels": (map[string]interface {}) (len=2) {
     (string) (len=7) "cluster": (string) (len=12) "my-cluster-2",
     (string) (len=7) "product": (string) (len=13) "api beep boop"
    },
    (string) (len=31) "serviceMonitorNamespaceSelector": (map[string]interface {}) {
    },
    (string) (len=7) "storage": (map[string]interface {}) (len=1) {
     (string) (len=19) "volumeClaimTemplate": (map[string]interface {}) (len=1) {
      (string) (len=4) "spec": (map[string]interface {}) (len=2) {
       (string) (len=16) "storageClassName": (string) (len=3) "gp2",
       (string) (len=9) "resources": (map[string]interface {}) (len=1) {
        (string) (len=8) "requests": (map[string]interface {}) (len=1) {
         (string) (len=7) "storage": (string) (len=4) "10Gi"
        }
       }
      }
     }
    },
    (string) (len=18) "serviceAccountName": (string) (len=14) "prometheus-k8s",
    (string) (len=6) "thanos": (map[string]interface {}) (len=3) {
     (string) (len=9) "baseImage": (string) (len=21) "quay.io/thanos/thanos",
     (string) (len=19) "objectStorageConfig": (map[string]interface {}) (len=2) {
      (string) (len=4) "name": (string) (len=22) "thanos-objstore-config",
      (string) (len=3) "key": (string) (len=11) "thanos.yaml"
     },
     (string) (len=7) "version": (string) (len=7) "v0.16.0"
    },
    (string) (len=18) "podMonitorSelector": (map[string]interface {}) {
    }
   },
   (string) (len=10) "apiVersion": (string) (len=24) "monitoring.coreos.com/v1",
   (string) (len=4) "kind": (string) (len=10) "Prometheus"
  },
  (string) (len=6) "object": (map[string]interface {}) (len=4) {
   (string) (len=4) "spec": (map[string]interface {}) (len=20) {
    (string) (len=12) "nodeSelector": (map[string]interface {}) (len=1) {
     (string) (len=4) "role": (string) (len=8) "services"
    },
    (string) (len=27) "podMonitorNamespaceSelector": (map[string]interface {}) {
    },
    (string) (len=13) "probeSelector": (map[string]interface {}) {
    },
    (string) (len=14) "scrapeInterval": (string) (len=2) "5s",
    (string) (len=8) "replicas": (*big.Float)(0xc00043a810)(1),
    (string) (len=22) "probeNamespaceSelector": (map[string]interface {}) {
    },
    (string) (len=15) "securityContext": (map[string]interface {}) (len=3) {
     (string) (len=7) "fsGroup": (*big.Float)(0xc00043af00)(2000),
     (string) (len=12) "runAsNonRoot": (bool) true,
     (string) (len=9) "runAsUser": (*big.Float)(0xc00043af90)(1000)
    },
    (string) (len=22) "serviceMonitorSelector": (map[string]interface {}) {
    },
    (string) (len=5) "image": (string) (len=37) "quay.io/prometheus/prometheus:v2.25.2",
    (string) (len=6) "thanos": (map[string]interface {}) (len=3) {
     (string) (len=7) "version": (string) (len=7) "v0.16.0",
     (string) (len=9) "baseImage": (string) (len=21) "quay.io/thanos/thanos",
     (string) (len=19) "objectStorageConfig": (map[string]interface {}) (len=2) {
      (string) (len=4) "name": (string) (len=22) "thanos-objstore-config",
      (string) (len=3) "key": (string) (len=11) "thanos.yaml"
     }
    },
    (string) (len=9) "resources": (map[string]interface {}) (len=2) {
     (string) (len=6) "limits": (map[string]interface {}) (len=2) {
      (string) (len=3) "cpu": (string) (len=4) "250m",
      (string) (len=6) "memory": (string) (len=6) "1024Mi"
     },
     (string) (len=8) "requests": (map[string]interface {}) (len=2) {
      (string) (len=3) "cpu": (string) (len=4) "200m",
      (string) (len=6) "memory": (string) (len=5) "200Mi"
     }
    },
    (string) (len=12) "ruleSelector": (map[string]interface {}) (len=1) {
     (string) (len=11) "matchLabels": (map[string]interface {}) (len=2) {
      (string) (len=4) "role": (string) (len=11) "alert-rules",
      (string) (len=10) "prometheus": (string) (len=3) "k8s"
     }
    },
    (string) (len=23) "additionalScrapeConfigs": (map[string]interface {}) (len=2) {
     (string) (len=3) "key": (string) (len=26) "prometheus-additional.yaml",
     (string) (len=4) "name": (string) (len=25) "additional-scrape-configs"
    },
    (string) (len=7) "version": (string) (len=7) "v2.25.2",
    (string) (len=18) "podMonitorSelector": (map[string]interface {}) {
    },
    (string) (len=7) "storage": (map[string]interface {}) (len=1) {
     (string) (len=19) "volumeClaimTemplate": (map[string]interface {}) (len=1) {
      (string) (len=4) "spec": (map[string]interface {}) (len=2) {
       (string) (len=9) "resources": (map[string]interface {}) (len=1) {
        (string) (len=8) "requests": (map[string]interface {}) (len=1) {
         (string) (len=7) "storage": (string) (len=4) "10Gi"
        }
       },
       (string) (len=16) "storageClassName": (string) (len=3) "gp2"
      }
     }
    },
    (string) (len=14) "externalLabels": (map[string]interface {}) (len=2) {
     (string) (len=7) "cluster": (string) (len=12) "my-cluster-2",
     (string) (len=7) "product": (string) (len=13) "api beep boop"
    },
    (string) (len=31) "serviceMonitorNamespaceSelector": (map[string]interface {}) {
    },
    (string) (len=8) "alerting": (map[string]interface {}) (len=1) {
     (string) (len=13) "alertmanagers": ([]interface {}) (len=1 cap=1) {
      (map[string]interface {}) (len=3) {
       (string) (len=4) "name": (string) (len=17) "alertmanager-main",
       (string) (len=9) "namespace": (string) (len=10) "monitoring",
       (string) (len=4) "port": (string) (len=3) "web"
      }
     }
    },
    (string) (len=18) "serviceAccountName": (string) (len=14) "prometheus-k8s"
   },
   (string) (len=10) "apiVersion": (string) (len=24) "monitoring.coreos.com/v1",
   (string) (len=4) "kind": (string) (len=10) "Prometheus",
   (string) (len=8) "metadata": (map[string]interface {}) (len=2) {
    (string) (len=4) "name": (string) (len=6) "test-1",
    (string) (len=9) "namespace": (string) (len=15) "test-operator-1"
   }
  },
  (string) (len=8) "wait_for": (interface {}) <nil>
 }
}
RAW provider 2021/04/04 00:03:51 Finished
